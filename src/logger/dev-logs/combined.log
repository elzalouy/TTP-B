{
  message: { db: 'mongodb://localhost:27017/TTP' },
  level: 'info',
  timestamp: '2022-03-04 14:39:08'
}
{
  message: {
    filterProjectsError: TypeError: Cannot read property 'length' of null
        at /home/ezat-elzalouy/Desktop/Unicode/TTP-Back/src/lib/presentation/project/project.ts:110:18
        at Generator.next (<anonymous>)
        at fulfilled (/home/ezat-elzalouy/Desktop/Unicode/TTP-Back/src/lib/presentation/project/project.ts:5:58)
        at processTicksAndRejections (internal/process/task_queues.js:97:5)
  },
  level: 'error',
  timestamp: '2022-03-04 14:39:12'
}
{
  message: { db: 'mongodb://localhost:27017/TTP' },
  level: 'info',
  timestamp: '2022-03-04 14:39:50'
}
{
  message: { db: 'mongodb://localhost:27017/TTP' },
  level: 'info',
  timestamp: '2022-03-04 14:40:09'
}
{
  message: { db: 'mongodb://localhost:27017/TTP' },
  level: 'info',
  timestamp: '2022-03-04 14:42:23'
}
{
  message: { db: 'mongodb://localhost:27017/TTP' },
  level: 'info',
  timestamp: '2022-03-04 14:42:50'
}
{
  message: { db: 'mongodb://localhost:27017/TTP' },
  level: 'info',
  timestamp: '2022-03-04 14:43:35'
}
{
  message: { db: 'mongodb://localhost:27017/TTP' },
  level: 'info',
  timestamp: '2022-03-04 14:44:06'
}
{
  message: { db: 'mongodb://localhost:27017/TTP' },
  level: 'info',
  timestamp: '2022-03-04 14:45:07'
}
{
  message: { db: 'mongodb://localhost:27017/TTP' },
  level: 'info',
  timestamp: '2022-03-04 14:46:36'
}
{
  message: { db: 'mongodb://localhost:27017/TTP' },
  level: 'info',
  timestamp: '2022-03-04 14:47:03'
}
{
  message: { db: 'mongodb://localhost:27017/TTP' },
  level: 'info',
  timestamp: '2022-03-04 14:49:05'
}
{
  message: { db: 'mongodb://localhost:27017/TTP' },
  level: 'info',
  timestamp: '2022-03-04 14:49:37'
}
{
  message: { db: 'mongodb://localhost:27017/TTP' },
  level: 'info',
  timestamp: '2022-03-04 14:53:41'
}
{
  message: { db: 'mongodb://localhost:27017/TTP' },
  level: 'info',
  timestamp: '2022-03-04 14:54:00'
}
{
  message: { db: 'mongodb://localhost:27017/TTP' },
  level: 'info',
  timestamp: '2022-03-04 15:00:55'
}
{
  message: { db: 'mongodb://localhost:27017/TTP' },
  level: 'info',
  timestamp: '2022-03-04 15:07:08'
}
{
  message: { db: 'mongodb://localhost:27017/TTP' },
  level: 'info',
  timestamp: '2022-03-04 15:09:27'
}
{
  message: { db: 'mongodb://localhost:27017/TTP' },
  level: 'info',
  timestamp: '2022-03-04 15:21:48'
}
{
  message: { db: 'mongodb://localhost:27017/TTP' },
  level: 'info',
  timestamp: '2022-03-04 15:22:23'
}
{
  message: { db: 'mongodb://localhost:27017/TTP' },
  level: 'info',
  timestamp: '2022-03-04 15:23:28'
}
{
  message: { db: 'mongodb://localhost:27017/TTP' },
  level: 'info',
  timestamp: '2022-03-04 15:23:47'
}
{
  message: { db: 'mongodb://localhost:27017/TTP' },
  level: 'info',
  timestamp: '2022-03-04 15:24:21'
}
{
  message: { db: 'mongodb://localhost:27017/TTP' },
  level: 'info',
  timestamp: '2022-03-04 15:24:42'
}
{
  message: { db: 'mongodb://localhost:27017/TTP' },
  level: 'info',
  timestamp: '2022-03-04 15:25:50'
}
{
  message: { db: 'mongodb://localhost:27017/TTP' },
  level: 'info',
  timestamp: '2022-03-04 15:26:56'
}
{
  message: { db: 'mongodb://localhost:27017/TTP' },
  level: 'info',
  timestamp: '2022-03-04 15:27:19'
}
{
  message: { db: 'mongodb://localhost:27017/TTP' },
  level: 'info',
  timestamp: '2022-03-05 11:08:13'
}
{
  message: {
    data: {
      _id: '621e892cdb7b50ebd5760f6e',
      name: 'test team 19',
      boardId: '621e892a142efc4992fc73e7',
      color: 'lime'
    }
  },
  level: 'info',
  timestamp: '2022-03-05 11:12:21'
}
{
  message: {
    updatedbDepartmentError: {
      _id: '621e892cdb7b50ebd5760f6e',
      name: 'test team 19',
      boardId: '621e892a142efc4992fc73e7',
      color: 'lime'
    }
  },
  level: 'info',
  timestamp: '2022-03-05 11:12:22'
}
{
  message: { db: 'mongodb://localhost:27017/TTP' },
  level: 'info',
  timestamp: '2022-03-05 11:21:48'
}
{
  message: {
    data: {
      _id: '621e892cdb7b50ebd5760f6e',
      mainBoard: false,
      teams: [ '621e892dbd32990dfc449558' ]
    }
  },
  level: 'info',
  timestamp: '2022-03-05 11:22:00'
}
{
  message: { db: 'mongodb://localhost:27017/TTP' },
  level: 'info',
  timestamp: '2022-03-05 11:23:13'
}
{
  message: {
    data: {
      _id: '621e892cdb7b50ebd5760f6e',
      mainBoard: false,
      teams: [ '621e892dbd32990dfc449558' ]
    }
  },
  level: 'info',
  timestamp: '2022-03-05 11:23:19'
}
{
  message: { removeWebhookSucced: 'done' },
  level: 'info',
  timestamp: '2022-03-05 11:23:20'
}
{
  message: {
    data: {
      _id: '621e892cdb7b50ebd5760f6e',
      name: 'test team 20',
      boardId: '621e892a142efc4992fc73e7',
      color: ''
    }
  },
  level: 'info',
  timestamp: '2022-03-05 11:35:38'
}
{
  message: {
    updateDepartmentError: TypeError: Cannot read property 'map' of undefined
        at Function.<anonymous> (E:\trello-project\TTP-Back\src\lib\controllers\department.ts:62:39)
        at Generator.next (<anonymous>)
        at E:\trello-project\TTP-Back\src\lib\controllers\department.ts:8:71
        at new Promise (<anonymous>)
        at __awaiter (E:\trello-project\TTP-Back\src\lib\controllers\department.ts:4:12)
        at Function.__updateDepartmentData (E:\trello-project\TTP-Back\src\lib\controllers\department.ts:73:16)
        at E:\trello-project\TTP-Back\src\lib\controllers\department.ts:13:39
        at Generator.next (<anonymous>)
        at E:\trello-project\TTP-Back\src\lib\controllers\department.ts:8:71
        at new Promise (<anonymous>)
  },
  level: 'error',
  timestamp: '2022-03-05 11:35:38'
}
{
  message: {
    data: {
      _id: '621e892cdb7b50ebd5760f6e',
      name: 'test team 20',
      boardId: '621e892a142efc4992fc73e7',
      color: ''
    }
  },
  level: 'info',
  timestamp: '2022-03-05 11:37:55'
}
{
  message: {
    updateDepartmentError: TypeError: Cannot read property 'map' of undefined
        at Function.<anonymous> (E:\trello-project\TTP-Back\src\lib\controllers\department.ts:62:39)
        at Generator.next (<anonymous>)
        at E:\trello-project\TTP-Back\src\lib\controllers\department.ts:8:71
        at new Promise (<anonymous>)
        at __awaiter (E:\trello-project\TTP-Back\src\lib\controllers\department.ts:4:12)
        at Function.__updateDepartmentData (E:\trello-project\TTP-Back\src\lib\controllers\department.ts:73:16)
        at E:\trello-project\TTP-Back\src\lib\controllers\department.ts:13:39
        at Generator.next (<anonymous>)
        at E:\trello-project\TTP-Back\src\lib\controllers\department.ts:8:71
        at new Promise (<anonymous>)
  },
  level: 'error',
  timestamp: '2022-03-05 11:37:55'
}
{
  message: {
    data: {
      _id: '621e892cdb7b50ebd5760f6e',
      name: 'test team 20',
      boardId: '621e892a142efc4992fc73e7',
      color: 'pink'
    }
  },
  level: 'info',
  timestamp: '2022-03-05 11:38:02'
}
{
  message: {
    updatedbDepartmentError: {
      _id: '621e892cdb7b50ebd5760f6e',
      name: 'test team 20',
      boardId: '621e892a142efc4992fc73e7',
      color: 'pink'
    }
  },
  level: 'info',
  timestamp: '2022-03-05 11:38:05'
}
{
  message: {
    updateDepartmentError: TypeError: Cannot read property 'map' of undefined
        at Function.<anonymous> (E:\trello-project\TTP-Back\src\lib\controllers\department.ts:62:39)
        at Generator.next (<anonymous>)
        at fulfilled (E:\trello-project\TTP-Back\src\lib\controllers\department.ts:5:58)
        at processTicksAndRejections (internal/process/task_queues.js:95:5)
  },
  level: 'error',
  timestamp: '2022-03-05 11:38:05'
}
{
  message: {
    data: {
      _id: '621e892cdb7b50ebd5760f6e',
      name: 'test team 21',
      boardId: '621e892a142efc4992fc73e7',
      color: ''
    }
  },
  level: 'info',
  timestamp: '2022-03-05 11:38:23'
}
{
  message: {
    updateDepartmentError: TypeError: Cannot read property 'map' of undefined
        at Function.<anonymous> (E:\trello-project\TTP-Back\src\lib\controllers\department.ts:62:39)
        at Generator.next (<anonymous>)
        at E:\trello-project\TTP-Back\src\lib\controllers\department.ts:8:71
        at new Promise (<anonymous>)
        at __awaiter (E:\trello-project\TTP-Back\src\lib\controllers\department.ts:4:12)
        at Function.__updateDepartmentData (E:\trello-project\TTP-Back\src\lib\controllers\department.ts:73:16)
        at E:\trello-project\TTP-Back\src\lib\controllers\department.ts:13:39
        at Generator.next (<anonymous>)
        at E:\trello-project\TTP-Back\src\lib\controllers\department.ts:8:71
        at new Promise (<anonymous>)
  },
  level: 'error',
  timestamp: '2022-03-05 11:38:23'
}
{
  message: { db: 'mongodb://localhost:27017/TTP' },
  level: 'info',
  timestamp: '2022-03-05 11:39:43'
}
{
  message: {
    data: {
      _id: '621e892cdb7b50ebd5760f6e',
      mainBoard: false,
      teams: [ '621e892dbd32990dfc449558' ]
    }
  },
  level: 'info',
  timestamp: '2022-03-05 11:39:49'
}
{
  message: { removeWebhookSucced: 'done' },
  level: 'info',
  timestamp: '2022-03-05 11:39:50'
}
{
  message: { db: 'mongodb://localhost:27017/TTP' },
  level: 'info',
  timestamp: '2022-03-05 11:44:25'
}
{
  message: {
    data: {
      _id: '621e892cdb7b50ebd5760f6e',
      mainBoard: false,
      teams: [ '621e892dbd32990dfc449558' ]
    }
  },
  level: 'info',
  timestamp: '2022-03-05 11:44:32'
}
{
  message: { db: 'mongodb://localhost:27017/TTP' },
  level: 'info',
  timestamp: '2022-03-05 11:45:43'
}
{
  message: {
    data: {
      _id: '621e892cdb7b50ebd5760f6e',
      mainBoard: false,
      teams: [ '621e892dbd32990dfc449558' ]
    }
  },
  level: 'info',
  timestamp: '2022-03-05 11:46:08'
}
{
  message: {
    data: {
      _id: '621e892cdb7b50ebd5760f6e',
      mainBoard: false,
      teams: [ '621e892dbd32990dfc449558' ]
    }
  },
  level: 'info',
  timestamp: '2022-03-05 11:50:21'
}
{
  message: { db: 'mongodb://localhost:27017/TTP' },
  level: 'info',
  timestamp: '2022-03-05 11:52:14'
}
{
  message: { db: 'mongodb://localhost:27017/TTP' },
  level: 'info',
  timestamp: '2022-03-05 11:55:04'
}
{
  message: {
    departmentData: {
      _id: '621e892cdb7b50ebd5760f6e',
      mainBoard: false,
      teams: [ '621e892dbd32990dfc449558' ]
    }
  },
  level: 'info',
  timestamp: '2022-03-05 11:55:12'
}
{
  message: { depUpdate: undefined },
  level: 'info',
  timestamp: '2022-03-05 11:55:12'
}
{
  message: { department: undefined },
  level: 'info',
  timestamp: '2022-03-05 11:55:12'
}
{
  message: { db: 'mongodb://localhost:27017/TTP' },
  level: 'info',
  timestamp: '2022-03-05 11:57:41'
}
{
  message: {
    departmentData: {
      _id: '621e892cdb7b50ebd5760f6e',
      mainBoard: false,
      teams: [ '621e892dbd32990dfc449558' ]
    }
  },
  level: 'info',
  timestamp: '2022-03-05 11:58:04'
}
{
  message: {
    data: {
      _id: '621e892cdb7b50ebd5760f6e',
      mainBoard: false,
      teams: [ '621e892dbd32990dfc449558' ]
    }
  },
  level: 'info',
  timestamp: '2022-03-05 11:58:04'
}
{
  message: 'second step',
  level: 'info',
  timestamp: '2022-03-05 11:58:04'
}
{
  message: 'third step',
  level: 'info',
  timestamp: '2022-03-05 11:58:04'
}
{
  message: { done: 'yes it is done' },
  level: 'info',
  timestamp: '2022-03-05 11:58:04'
}
{
  message: {
    updatedbDepartmentError: {
      _id: '621e892cdb7b50ebd5760f6e',
      mainBoard: false,
      teams: [ '621e892dbd32990dfc449558' ]
    }
  },
  level: 'info',
  timestamp: '2022-03-05 11:58:04'
}
{
  message: {
    depUpdate: {
      _id: new ObjectId("621e892cdb7b50ebd5760f6e"),
      name: 'test team 20',
      boardId: '621e892a142efc4992fc73e7',
      color: 'pink',
      teamsId: [
        {
          idInTrello: '621e892dbd32990dfc449558',
          idInDB: new ObjectId("61eab832b41398d86474d4ac"),
          _id: new ObjectId("621e8931db7b50ebd5760f71")
        },
        {
          idInTrello: '621e892d59f758489229a71d',
          idInDB: new ObjectId("61eac1ea6b95c7f7ed8be309"),
          _id: new ObjectId("621e8931db7b50ebd5760f72")
        }
      ],
      createdAt: 2022-03-01T20:59:24.346Z,
      updatedAt: 2022-03-05T08:58:04.414Z,
      __v: 0,
      canceldListId: '621e892fbd023e07baad97ff',
      defaultListId: '621e892ee623e62346306064',
      doneListId: '621e892bd6a8af6380a0f71e',
      notClearListId: '621e892e4fea1f775ad7bc3e',
      reviewListId: '621e892ca525573e4c4fece0',
      sharedListID: '621e892cb24bd66232aa3133',
      mainBoard: false,
      teams: [ '621e892dbd32990dfc449558' ]
    }
  },
  level: 'info',
  timestamp: '2022-03-05 11:58:04'
}
{
  message: {
    department: {
      _id: new ObjectId("621e892cdb7b50ebd5760f6e"),
      name: 'test team 20',
      boardId: '621e892a142efc4992fc73e7',
      color: 'pink',
      teamsId: [
        {
          idInTrello: '621e892dbd32990dfc449558',
          idInDB: new ObjectId("61eab832b41398d86474d4ac"),
          _id: new ObjectId("621e8931db7b50ebd5760f71")
        },
        {
          idInTrello: '621e892d59f758489229a71d',
          idInDB: new ObjectId("61eac1ea6b95c7f7ed8be309"),
          _id: new ObjectId("621e8931db7b50ebd5760f72")
        }
      ],
      createdAt: 2022-03-01T20:59:24.346Z,
      updatedAt: 2022-03-05T08:58:04.414Z,
      __v: 0,
      canceldListId: '621e892fbd023e07baad97ff',
      defaultListId: '621e892ee623e62346306064',
      doneListId: '621e892bd6a8af6380a0f71e',
      notClearListId: '621e892e4fea1f775ad7bc3e',
      reviewListId: '621e892ca525573e4c4fece0',
      sharedListID: '621e892cb24bd66232aa3133',
      mainBoard: false,
      teams: [ '621e892dbd32990dfc449558' ]
    }
  },
  level: 'info',
  timestamp: '2022-03-05 11:58:04'
}
{
  message: { removeWebhookSucced: 'done' },
  level: 'info',
  timestamp: '2022-03-05 11:58:05'
}
{
  message: { db: 'mongodb://localhost:27017/TTP' },
  level: 'info',
  timestamp: '2022-03-05 12:49:47'
}
{
  message: {
    departmentData: {
      _id: '621e892cdb7b50ebd5760f6e',
      mainBoard: true,
      teams: [ '621e892dbd32990dfc449558' ]
    }
  },
  level: 'info',
  timestamp: '2022-03-05 12:50:15'
}
{
  message: {
    data: {
      _id: '621e892cdb7b50ebd5760f6e',
      mainBoard: true,
      teams: [ '621e892dbd32990dfc449558' ]
    }
  },
  level: 'info',
  timestamp: '2022-03-05 12:50:15'
}
{
  message: 'second step',
  level: 'info',
  timestamp: '2022-03-05 12:50:15'
}
{
  message: 'fourth step',
  level: 'info',
  timestamp: '2022-03-05 12:50:15'
}
{
  message: { done: 'yes it is done' },
  level: 'info',
  timestamp: '2022-03-05 12:50:15'
}
{
  message: {
    updatedbDepartmentError: {
      _id: '621e892cdb7b50ebd5760f6e',
      mainBoard: true,
      teams: [ '621e892dbd32990dfc449558' ]
    }
  },
  level: 'info',
  timestamp: '2022-03-05 12:50:15'
}
{
  message: {
    depUpdate: {
      _id: new ObjectId("621e892cdb7b50ebd5760f6e"),
      name: 'test team 20',
      boardId: '621e892a142efc4992fc73e7',
      color: 'pink',
      teamsId: [
        {
          idInTrello: '621e892dbd32990dfc449558',
          idInDB: new ObjectId("61eab832b41398d86474d4ac"),
          _id: new ObjectId("621e8931db7b50ebd5760f71")
        },
        {
          idInTrello: '621e892d59f758489229a71d',
          idInDB: new ObjectId("61eac1ea6b95c7f7ed8be309"),
          _id: new ObjectId("621e8931db7b50ebd5760f72")
        }
      ],
      createdAt: 2022-03-01T20:59:24.346Z,
      updatedAt: 2022-03-05T09:50:15.968Z,
      __v: 0,
      canceldListId: '621e892fbd023e07baad97ff',
      defaultListId: '621e892ee623e62346306064',
      doneListId: '621e892bd6a8af6380a0f71e',
      notClearListId: '621e892e4fea1f775ad7bc3e',
      reviewListId: '621e892ca525573e4c4fece0',
      sharedListID: '621e892cb24bd66232aa3133',
      mainBoard: true,
      teams: [ '621e892dbd32990dfc449558' ]
    }
  },
  level: 'info',
  timestamp: '2022-03-05 12:50:15'
}
{
  message: {
    department: {
      _id: new ObjectId("621e892cdb7b50ebd5760f6e"),
      name: 'test team 20',
      boardId: '621e892a142efc4992fc73e7',
      color: 'pink',
      teamsId: [
        {
          idInTrello: '621e892dbd32990dfc449558',
          idInDB: new ObjectId("61eab832b41398d86474d4ac"),
          _id: new ObjectId("621e8931db7b50ebd5760f71")
        },
        {
          idInTrello: '621e892d59f758489229a71d',
          idInDB: new ObjectId("61eac1ea6b95c7f7ed8be309"),
          _id: new ObjectId("621e8931db7b50ebd5760f72")
        }
      ],
      createdAt: 2022-03-01T20:59:24.346Z,
      updatedAt: 2022-03-05T09:50:15.968Z,
      __v: 0,
      canceldListId: '621e892fbd023e07baad97ff',
      defaultListId: '621e892ee623e62346306064',
      doneListId: '621e892bd6a8af6380a0f71e',
      notClearListId: '621e892e4fea1f775ad7bc3e',
      reviewListId: '621e892ca525573e4c4fece0',
      sharedListID: '621e892cb24bd66232aa3133',
      mainBoard: true,
      teams: [ '621e892dbd32990dfc449558' ]
    }
  },
  level: 'info',
  timestamp: '2022-03-05 12:50:16'
}
{
  message: { webhookUpdateData: {} },
  level: 'info',
  timestamp: '2022-03-05 12:50:17'
}
{
  message: { addWebhookSucced: 'done' },
  level: 'info',
  timestamp: '2022-03-05 12:50:18'
}
{
  message: {
    webhookUpdateData: {
      model: {
        id: '621e892dbd32990dfc449558',
        name: 'team name 1',
        closed: false,
        idBoard: '621e892a142efc4992fc73e7',
        pos: 2048
      },
      action: {
        id: '62233299c992d189712deda5',
        idMemberCreator: '616576dc48190f7969f67b62',
        data: {
          card: {
            idList: '621e892dbd32990dfc449558',
            id: '621e9019bd8bf10f146d4eea',
            name: 'asdad',
            idShort: 1,
            shortLink: 'IPZGRDMM'
          },
          old: { idList: '621e892d59f758489229a71d' },
          board: {
            id: '621e892a142efc4992fc73e7',
            name: 'test team 20',
            shortLink: 'USWK8a4w'
          },
          listBefore: { id: '621e892d59f758489229a71d', name: 'team name 1' },
          listAfter: { id: '621e892dbd32990dfc449558', name: 'team name 1' }
        },
        appCreator: null,
        type: 'updateCard',
        date: '2022-03-05T09:51:21.159Z',
        limits: {},
        display: {
          translationKey: 'action_move_card_from_list_to_list',
          entities: {
            card: {
              type: 'card',
              idList: '621e892dbd32990dfc449558',
              id: '621e9019bd8bf10f146d4eea',
              shortLink: 'IPZGRDMM',
              text: 'asdad'
            },
            listBefore: {
              type: 'list',
              id: '621e892d59f758489229a71d',
              text: 'team name 1'
            },
            listAfter: {
              type: 'list',
              id: '621e892dbd32990dfc449558',
              text: 'team name 1'
            },
            memberCreator: {
              type: 'member',
              id: '616576dc48190f7969f67b62',
              username: 'mohamednageh7',
              text: 'mohamednageh7'
            }
          }
        },
        memberCreator: {
          id: '616576dc48190f7969f67b62',
          activityBlocked: false,
          avatarHash: 'e5019bd1d553a6f4eb993ff74fa36ca3',
          avatarUrl: 'https://trello-members.s3.amazonaws.com/616576dc48190f7969f67b62/e5019bd1d553a6f4eb993ff74fa36ca3',
          fullName: 'mohamednageh7',
          idMemberReferrer: null,
          initials: 'M',
          nonPublic: {},
          nonPublicAvailable: true,
          username: 'mohamednageh7'
        }
      }
    }
  },
  level: 'info',
  timestamp: '2022-03-05 12:51:22'
}
{
  message: { db: 'mongodb://localhost:27017/TTP' },
  level: 'info',
  timestamp: '2022-03-05 13:13:48'
}
{
  message: {
    departmentData: {
      _id: '621e892cdb7b50ebd5760f6e',
      mainBoard: false,
      teams: [ '621e892dbd32990dfc449558' ],
      listIds: [
        '621e892fbd023e07baad97ff',
        '621e892ee623e62346306064',
        '621e892bd6a8af6380a0f71e',
        '621e892e4fea1f775ad7bc3e',
        '621e892ca525573e4c4fece0',
        '621e892cb24bd66232aa3133'
      ]
    }
  },
  level: 'info',
  timestamp: '2022-03-05 13:13:58'
}
{
  message: {
    data: {
      _id: '621e892cdb7b50ebd5760f6e',
      mainBoard: false,
      teams: [ '621e892dbd32990dfc449558' ],
      listIds: [
        '621e892fbd023e07baad97ff',
        '621e892ee623e62346306064',
        '621e892bd6a8af6380a0f71e',
        '621e892e4fea1f775ad7bc3e',
        '621e892ca525573e4c4fece0',
        '621e892cb24bd66232aa3133'
      ]
    }
  },
  level: 'info',
  timestamp: '2022-03-05 13:13:58'
}
{
  message: 'second step',
  level: 'info',
  timestamp: '2022-03-05 13:13:58'
}
{
  message: 'third step',
  level: 'info',
  timestamp: '2022-03-05 13:13:58'
}
{
  message: { done: 'yes it is done' },
  level: 'info',
  timestamp: '2022-03-05 13:13:58'
}
{
  message: {
    updatedbDepartmentError: {
      _id: '621e892cdb7b50ebd5760f6e',
      mainBoard: false,
      teams: [ '621e892dbd32990dfc449558' ],
      listIds: [
        '621e892fbd023e07baad97ff',
        '621e892ee623e62346306064',
        '621e892bd6a8af6380a0f71e',
        '621e892e4fea1f775ad7bc3e',
        '621e892ca525573e4c4fece0',
        '621e892cb24bd66232aa3133'
      ]
    }
  },
  level: 'info',
  timestamp: '2022-03-05 13:13:58'
}
{
  message: { removeWebhookSucced: 'done' },
  level: 'info',
  timestamp: '2022-03-05 13:13:58'
}
{
  message: {
    depUpdate: {
      _id: new ObjectId("621e892cdb7b50ebd5760f6e"),
      name: 'test team 20',
      boardId: '621e892a142efc4992fc73e7',
      color: 'pink',
      teamsId: [
        {
          idInTrello: '621e892dbd32990dfc449558',
          idInDB: new ObjectId("61eab832b41398d86474d4ac"),
          _id: new ObjectId("621e8931db7b50ebd5760f71")
        },
        {
          idInTrello: '621e892d59f758489229a71d',
          idInDB: new ObjectId("61eac1ea6b95c7f7ed8be309"),
          _id: new ObjectId("621e8931db7b50ebd5760f72")
        }
      ],
      createdAt: 2022-03-01T20:59:24.346Z,
      updatedAt: 2022-03-05T10:13:58.846Z,
      __v: 0,
      canceldListId: '621e892fbd023e07baad97ff',
      defaultListId: '621e892ee623e62346306064',
      doneListId: '621e892bd6a8af6380a0f71e',
      notClearListId: '621e892e4fea1f775ad7bc3e',
      reviewListId: '621e892ca525573e4c4fece0',
      sharedListID: '621e892cb24bd66232aa3133',
      mainBoard: false,
      teams: [ '621e892dbd32990dfc449558' ],
      listIds: [
        '621e892fbd023e07baad97ff',
        '621e892ee623e62346306064',
        '621e892bd6a8af6380a0f71e',
        '621e892e4fea1f775ad7bc3e',
        '621e892ca525573e4c4fece0',
        '621e892cb24bd66232aa3133'
      ]
    }
  },
  level: 'info',
  timestamp: '2022-03-05 13:13:58'
}
{
  message: {
    department: {
      _id: new ObjectId("621e892cdb7b50ebd5760f6e"),
      name: 'test team 20',
      boardId: '621e892a142efc4992fc73e7',
      color: 'pink',
      teamsId: [
        {
          idInTrello: '621e892dbd32990dfc449558',
          idInDB: new ObjectId("61eab832b41398d86474d4ac"),
          _id: new ObjectId("621e8931db7b50ebd5760f71")
        },
        {
          idInTrello: '621e892d59f758489229a71d',
          idInDB: new ObjectId("61eac1ea6b95c7f7ed8be309"),
          _id: new ObjectId("621e8931db7b50ebd5760f72")
        }
      ],
      createdAt: 2022-03-01T20:59:24.346Z,
      updatedAt: 2022-03-05T10:13:58.846Z,
      __v: 0,
      canceldListId: '621e892fbd023e07baad97ff',
      defaultListId: '621e892ee623e62346306064',
      doneListId: '621e892bd6a8af6380a0f71e',
      notClearListId: '621e892e4fea1f775ad7bc3e',
      reviewListId: '621e892ca525573e4c4fece0',
      sharedListID: '621e892cb24bd66232aa3133',
      mainBoard: false,
      teams: [ '621e892dbd32990dfc449558' ],
      listIds: [
        '621e892fbd023e07baad97ff',
        '621e892ee623e62346306064',
        '621e892bd6a8af6380a0f71e',
        '621e892e4fea1f775ad7bc3e',
        '621e892ca525573e4c4fece0',
        '621e892cb24bd66232aa3133'
      ]
    }
  },
  level: 'info',
  timestamp: '2022-03-05 13:13:58'
}
{
  message: {
    departmentData: {
      _id: '621e892cdb7b50ebd5760f6e',
      mainBoard: true,
      teams: [ '621e892dbd32990dfc449558' ],
      listIds: [
        '621e892fbd023e07baad97ff',
        '621e892ee623e62346306064',
        '621e892bd6a8af6380a0f71e',
        '621e892e4fea1f775ad7bc3e',
        '621e892ca525573e4c4fece0',
        '621e892cb24bd66232aa3133'
      ]
    }
  },
  level: 'info',
  timestamp: '2022-03-05 13:14:22'
}
{
  message: {
    data: {
      _id: '621e892cdb7b50ebd5760f6e',
      mainBoard: true,
      teams: [ '621e892dbd32990dfc449558' ],
      listIds: [
        '621e892fbd023e07baad97ff',
        '621e892ee623e62346306064',
        '621e892bd6a8af6380a0f71e',
        '621e892e4fea1f775ad7bc3e',
        '621e892ca525573e4c4fece0',
        '621e892cb24bd66232aa3133'
      ]
    }
  },
  level: 'info',
  timestamp: '2022-03-05 13:14:22'
}
{
  message: 'second step',
  level: 'info',
  timestamp: '2022-03-05 13:14:22'
}
{
  message: 'fourth step',
  level: 'info',
  timestamp: '2022-03-05 13:14:22'
}
{
  message: { done: 'yes it is done' },
  level: 'info',
  timestamp: '2022-03-05 13:14:23'
}
{
  message: {
    updatedbDepartmentError: {
      _id: '621e892cdb7b50ebd5760f6e',
      mainBoard: true,
      teams: [ '621e892dbd32990dfc449558' ],
      listIds: [
        '621e892fbd023e07baad97ff',
        '621e892ee623e62346306064',
        '621e892bd6a8af6380a0f71e',
        '621e892e4fea1f775ad7bc3e',
        '621e892ca525573e4c4fece0',
        '621e892cb24bd66232aa3133'
      ]
    }
  },
  level: 'info',
  timestamp: '2022-03-05 13:14:23'
}
{
  message: { addWebhookSucced: 'done' },
  level: 'info',
  timestamp: '2022-03-05 13:14:23'
}
{
  message: {
    depUpdate: {
      _id: new ObjectId("621e892cdb7b50ebd5760f6e"),
      name: 'test team 20',
      boardId: '621e892a142efc4992fc73e7',
      color: 'pink',
      teamsId: [
        {
          idInTrello: '621e892dbd32990dfc449558',
          idInDB: new ObjectId("61eab832b41398d86474d4ac"),
          _id: new ObjectId("621e8931db7b50ebd5760f71")
        },
        {
          idInTrello: '621e892d59f758489229a71d',
          idInDB: new ObjectId("61eac1ea6b95c7f7ed8be309"),
          _id: new ObjectId("621e8931db7b50ebd5760f72")
        }
      ],
      createdAt: 2022-03-01T20:59:24.346Z,
      updatedAt: 2022-03-05T10:14:23.044Z,
      __v: 0,
      canceldListId: '621e892fbd023e07baad97ff',
      defaultListId: '621e892ee623e62346306064',
      doneListId: '621e892bd6a8af6380a0f71e',
      notClearListId: '621e892e4fea1f775ad7bc3e',
      reviewListId: '621e892ca525573e4c4fece0',
      sharedListID: '621e892cb24bd66232aa3133',
      mainBoard: true,
      teams: [ '621e892dbd32990dfc449558' ],
      listIds: [
        '621e892fbd023e07baad97ff',
        '621e892ee623e62346306064',
        '621e892bd6a8af6380a0f71e',
        '621e892e4fea1f775ad7bc3e',
        '621e892ca525573e4c4fece0',
        '621e892cb24bd66232aa3133'
      ]
    }
  },
  level: 'info',
  timestamp: '2022-03-05 13:14:23'
}
{
  message: {
    department: {
      _id: new ObjectId("621e892cdb7b50ebd5760f6e"),
      name: 'test team 20',
      boardId: '621e892a142efc4992fc73e7',
      color: 'pink',
      teamsId: [
        {
          idInTrello: '621e892dbd32990dfc449558',
          idInDB: new ObjectId("61eab832b41398d86474d4ac"),
          _id: new ObjectId("621e8931db7b50ebd5760f71")
        },
        {
          idInTrello: '621e892d59f758489229a71d',
          idInDB: new ObjectId("61eac1ea6b95c7f7ed8be309"),
          _id: new ObjectId("621e8931db7b50ebd5760f72")
        }
      ],
      createdAt: 2022-03-01T20:59:24.346Z,
      updatedAt: 2022-03-05T10:14:23.044Z,
      __v: 0,
      canceldListId: '621e892fbd023e07baad97ff',
      defaultListId: '621e892ee623e62346306064',
      doneListId: '621e892bd6a8af6380a0f71e',
      notClearListId: '621e892e4fea1f775ad7bc3e',
      reviewListId: '621e892ca525573e4c4fece0',
      sharedListID: '621e892cb24bd66232aa3133',
      mainBoard: true,
      teams: [ '621e892dbd32990dfc449558' ],
      listIds: [
        '621e892fbd023e07baad97ff',
        '621e892ee623e62346306064',
        '621e892bd6a8af6380a0f71e',
        '621e892e4fea1f775ad7bc3e',
        '621e892ca525573e4c4fece0',
        '621e892cb24bd66232aa3133'
      ]
    }
  },
  level: 'info',
  timestamp: '2022-03-05 13:14:23'
}
{
  message: { webhookUpdateData: {} },
  level: 'info',
  timestamp: '2022-03-05 13:14:24'
}
{
  message: {
    webhookUpdateData: {
      model: {
        id: '621e892dbd32990dfc449558',
        name: 'team name 1',
        closed: false,
        idBoard: '621e892a142efc4992fc73e7',
        pos: 2048
      },
      action: {
        id: '62233811616b307c098d4b3e',
        idMemberCreator: '616576dc48190f7969f67b62',
        data: {
          card: {
            idList: '621e892e4fea1f775ad7bc3e',
            id: '621e9019bd8bf10f146d4eea',
            name: 'asdad',
            idShort: 1,
            shortLink: 'IPZGRDMM'
          },
          old: { idList: '621e892dbd32990dfc449558' },
          board: {
            id: '621e892a142efc4992fc73e7',
            name: 'test team 20',
            shortLink: 'USWK8a4w'
          },
          listBefore: { id: '621e892dbd32990dfc449558', name: 'team name 1' },
          listAfter: { id: '621e892e4fea1f775ad7bc3e', name: 'Unclear brief' }
        },
        appCreator: null,
        type: 'updateCard',
        date: '2022-03-05T10:14:41.778Z',
        limits: {},
        display: {
          translationKey: 'action_move_card_from_list_to_list',
          entities: {
            card: {
              type: 'card',
              idList: '621e892e4fea1f775ad7bc3e',
              id: '621e9019bd8bf10f146d4eea',
              shortLink: 'IPZGRDMM',
              text: 'asdad'
            },
            listBefore: {
              type: 'list',
              id: '621e892dbd32990dfc449558',
              text: 'team name 1'
            },
            listAfter: {
              type: 'list',
              id: '621e892e4fea1f775ad7bc3e',
              text: 'Unclear brief'
            },
            memberCreator: {
              type: 'member',
              id: '616576dc48190f7969f67b62',
              username: 'mohamednageh7',
              text: 'mohamednageh7'
            }
          }
        },
        memberCreator: {
          id: '616576dc48190f7969f67b62',
          activityBlocked: false,
          avatarHash: 'e5019bd1d553a6f4eb993ff74fa36ca3',
          avatarUrl: 'https://trello-members.s3.amazonaws.com/616576dc48190f7969f67b62/e5019bd1d553a6f4eb993ff74fa36ca3',
          fullName: 'mohamednageh7',
          idMemberReferrer: null,
          initials: 'M',
          nonPublic: {},
          nonPublicAvailable: true,
          username: 'mohamednageh7'
        }
      }
    }
  },
  level: 'info',
  timestamp: '2022-03-05 13:14:42'
}
{
  message: { db: 'mongodb://localhost:27017/TTP' },
  level: 'info',
  timestamp: '2022-03-05 13:20:59'
}
{
  message: {
    webhookUpdateData: {
      model: {
        id: '621e892dbd32990dfc449558',
        name: 'team name 1',
        closed: false,
        idBoard: '621e892a142efc4992fc73e7',
        pos: 2048
      },
      action: {
        id: '622339c98963236354cb1552',
        idMemberCreator: '616576dc48190f7969f67b62',
        data: {
          card: {
            idList: '621e892dbd32990dfc449558',
            id: '621e9019bd8bf10f146d4eea',
            name: 'asdad',
            idShort: 1,
            shortLink: 'IPZGRDMM'
          },
          old: { idList: '621e892d59f758489229a71d' },
          board: {
            id: '621e892a142efc4992fc73e7',
            name: 'test team 20',
            shortLink: 'USWK8a4w'
          },
          listBefore: { id: '621e892d59f758489229a71d', name: 'team name 1' },
          listAfter: { id: '621e892dbd32990dfc449558', name: 'team name 1' }
        },
        appCreator: null,
        type: 'updateCard',
        date: '2022-03-05T10:22:01.587Z',
        limits: {},
        display: {
          translationKey: 'action_move_card_from_list_to_list',
          entities: {
            card: {
              type: 'card',
              idList: '621e892dbd32990dfc449558',
              id: '621e9019bd8bf10f146d4eea',
              shortLink: 'IPZGRDMM',
              text: 'asdad'
            },
            listBefore: {
              type: 'list',
              id: '621e892d59f758489229a71d',
              text: 'team name 1'
            },
            listAfter: {
              type: 'list',
              id: '621e892dbd32990dfc449558',
              text: 'team name 1'
            },
            memberCreator: {
              type: 'member',
              id: '616576dc48190f7969f67b62',
              username: 'mohamednageh7',
              text: 'mohamednageh7'
            }
          }
        },
        memberCreator: {
          id: '616576dc48190f7969f67b62',
          activityBlocked: false,
          avatarHash: 'e5019bd1d553a6f4eb993ff74fa36ca3',
          avatarUrl: 'https://trello-members.s3.amazonaws.com/616576dc48190f7969f67b62/e5019bd1d553a6f4eb993ff74fa36ca3',
          fullName: 'mohamednageh7',
          idMemberReferrer: null,
          initials: 'M',
          nonPublic: {},
          nonPublicAvailable: true,
          username: 'mohamednageh7'
        }
      }
    }
  },
  level: 'info',
  timestamp: '2022-03-05 13:22:03'
}
{
  message: {
    webhookUpdateData: {
      model: {
        id: '621e892dbd32990dfc449558',
        name: 'team name 1',
        closed: false,
        idBoard: '621e892a142efc4992fc73e7',
        pos: 2048
      },
      action: {
        id: '622339cf0195ce8e79a2a6fe',
        idMemberCreator: '616576dc48190f7969f67b62',
        data: {
          card: {
            idList: '621e892d59f758489229a71d',
            id: '621e9019bd8bf10f146d4eea',
            name: 'asdad',
            idShort: 1,
            shortLink: 'IPZGRDMM'
          },
          old: { idList: '621e892dbd32990dfc449558' },
          board: {
            id: '621e892a142efc4992fc73e7',
            name: 'test team 20',
            shortLink: 'USWK8a4w'
          },
          listBefore: { id: '621e892dbd32990dfc449558', name: 'team name 1' },
          listAfter: { id: '621e892d59f758489229a71d', name: 'team name 1' }
        },
        appCreator: null,
        type: 'updateCard',
        date: '2022-03-05T10:22:07.431Z',
        limits: {},
        display: {
          translationKey: 'action_move_card_from_list_to_list',
          entities: {
            card: {
              type: 'card',
              idList: '621e892d59f758489229a71d',
              id: '621e9019bd8bf10f146d4eea',
              shortLink: 'IPZGRDMM',
              text: 'asdad'
            },
            listBefore: {
              type: 'list',
              id: '621e892dbd32990dfc449558',
              text: 'team name 1'
            },
            listAfter: {
              type: 'list',
              id: '621e892d59f758489229a71d',
              text: 'team name 1'
            },
            memberCreator: {
              type: 'member',
              id: '616576dc48190f7969f67b62',
              username: 'mohamednageh7',
              text: 'mohamednageh7'
            }
          }
        },
        memberCreator: {
          id: '616576dc48190f7969f67b62',
          activityBlocked: false,
          avatarHash: 'e5019bd1d553a6f4eb993ff74fa36ca3',
          avatarUrl: 'https://trello-members.s3.amazonaws.com/616576dc48190f7969f67b62/e5019bd1d553a6f4eb993ff74fa36ca3',
          fullName: 'mohamednageh7',
          idMemberReferrer: null,
          initials: 'M',
          nonPublic: {},
          nonPublicAvailable: true,
          username: 'mohamednageh7'
        }
      }
    }
  },
  level: 'info',
  timestamp: '2022-03-05 13:22:09'
}
{
  message: {
    webhookUpdateData: {
      model: {
        id: '621e892dbd32990dfc449558',
        name: 'team name 1',
        closed: false,
        idBoard: '621e892a142efc4992fc73e7',
        pos: 2048
      },
      action: {
        id: '622339d27bd06665fbb87ebf',
        idMemberCreator: '616576dc48190f7969f67b62',
        data: {
          card: {
            idList: '621e892dbd32990dfc449558',
            id: '621e9019bd8bf10f146d4eea',
            name: 'asdad',
            idShort: 1,
            shortLink: 'IPZGRDMM'
          },
          old: { idList: '621e892d59f758489229a71d' },
          board: {
            id: '621e892a142efc4992fc73e7',
            name: 'test team 20',
            shortLink: 'USWK8a4w'
          },
          listBefore: { id: '621e892d59f758489229a71d', name: 'team name 1' },
          listAfter: { id: '621e892dbd32990dfc449558', name: 'team name 1' }
        },
        appCreator: null,
        type: 'updateCard',
        date: '2022-03-05T10:22:10.060Z',
        limits: {},
        display: {
          translationKey: 'action_move_card_from_list_to_list',
          entities: {
            card: {
              type: 'card',
              idList: '621e892dbd32990dfc449558',
              id: '621e9019bd8bf10f146d4eea',
              shortLink: 'IPZGRDMM',
              text: 'asdad'
            },
            listBefore: {
              type: 'list',
              id: '621e892d59f758489229a71d',
              text: 'team name 1'
            },
            listAfter: {
              type: 'list',
              id: '621e892dbd32990dfc449558',
              text: 'team name 1'
            },
            memberCreator: {
              type: 'member',
              id: '616576dc48190f7969f67b62',
              username: 'mohamednageh7',
              text: 'mohamednageh7'
            }
          }
        },
        memberCreator: {
          id: '616576dc48190f7969f67b62',
          activityBlocked: false,
          avatarHash: 'e5019bd1d553a6f4eb993ff74fa36ca3',
          avatarUrl: 'https://trello-members.s3.amazonaws.com/616576dc48190f7969f67b62/e5019bd1d553a6f4eb993ff74fa36ca3',
          fullName: 'mohamednageh7',
          idMemberReferrer: null,
          initials: 'M',
          nonPublic: {},
          nonPublicAvailable: true,
          username: 'mohamednageh7'
        }
      }
    }
  },
  level: 'info',
  timestamp: '2022-03-05 13:22:11'
}
{
  message: {
    webhookUpdateData: {
      model: {
        id: '621e892dbd32990dfc449558',
        name: 'team name 1',
        closed: false,
        idBoard: '621e892a142efc4992fc73e7',
        pos: 2048
      },
      action: {
        id: '622339d5646fd376bc493ac7',
        idMemberCreator: '616576dc48190f7969f67b62',
        data: {
          card: {
            idList: '621e892e4fea1f775ad7bc3e',
            id: '621e9019bd8bf10f146d4eea',
            name: 'asdad',
            idShort: 1,
            shortLink: 'IPZGRDMM'
          },
          old: { idList: '621e892dbd32990dfc449558' },
          board: {
            id: '621e892a142efc4992fc73e7',
            name: 'test team 20',
            shortLink: 'USWK8a4w'
          },
          listBefore: { id: '621e892dbd32990dfc449558', name: 'team name 1' },
          listAfter: { id: '621e892e4fea1f775ad7bc3e', name: 'Unclear brief' }
        },
        appCreator: null,
        type: 'updateCard',
        date: '2022-03-05T10:22:13.533Z',
        limits: {},
        display: {
          translationKey: 'action_move_card_from_list_to_list',
          entities: {
            card: {
              type: 'card',
              idList: '621e892e4fea1f775ad7bc3e',
              id: '621e9019bd8bf10f146d4eea',
              shortLink: 'IPZGRDMM',
              text: 'asdad'
            },
            listBefore: {
              type: 'list',
              id: '621e892dbd32990dfc449558',
              text: 'team name 1'
            },
            listAfter: {
              type: 'list',
              id: '621e892e4fea1f775ad7bc3e',
              text: 'Unclear brief'
            },
            memberCreator: {
              type: 'member',
              id: '616576dc48190f7969f67b62',
              username: 'mohamednageh7',
              text: 'mohamednageh7'
            }
          }
        },
        memberCreator: {
          id: '616576dc48190f7969f67b62',
          activityBlocked: false,
          avatarHash: 'e5019bd1d553a6f4eb993ff74fa36ca3',
          avatarUrl: 'https://trello-members.s3.amazonaws.com/616576dc48190f7969f67b62/e5019bd1d553a6f4eb993ff74fa36ca3',
          fullName: 'mohamednageh7',
          idMemberReferrer: null,
          initials: 'M',
          nonPublic: {},
          nonPublicAvailable: true,
          username: 'mohamednageh7'
        }
      }
    }
  },
  level: 'info',
  timestamp: '2022-03-05 13:22:15'
}
{
  message: {
    departmentData: {
      _id: '621e892cdb7b50ebd5760f6e',
      addTeam: [ { _id: '621e892dbd32990dfc449552', name: 'team name 10 new' } ]
    }
  },
  level: 'info',
  timestamp: '2022-03-05 13:29:23'
}
{
  message: {
    createTeamListError: FetchError: invalid json response body at https://api.trello.com/1/lists?name=team%20name%2010%20new&idBoard=undefined&key=96b980af38094db6e5767718567af6ce&token=7f44a81ca5f903883e1b3a5720f89b70b8feacd4437d2cb893068b3b93455e5f reason: Unexpected token i in JSON at position 0
        at E:\trello-project\TTP-Back\node_modules\node-fetch\lib\index.js:273:32
        at processTicksAndRejections (internal/process/task_queues.js:95:5) {
      type: 'invalid-json'
    }
  },
  level: 'error',
  timestamp: '2022-03-05 13:29:25'
}
{
  message: { depUpdate: Promise { <pending> } },
  level: 'info',
  timestamp: '2022-03-05 13:29:25'
}
{
  message: {
    deleteNestedRecordDepDBError: CastError: Cast to embedded failed for value "{ idInTrello: { '$each': undefined } }" (type string) at path "teamsId"
        at model.Query.exec (E:\trello-project\TTP-Back\node_modules\mongoose\lib\query.js:4545:21)
        at model.Query.Query.then (E:\trello-project\TTP-Back\node_modules\mongoose\lib\query.js:4644:15)
        at processTicksAndRejections (internal/process/task_queues.js:95:5) {
      messageFormat: undefined,
      stringValue: `"{ idInTrello: { '$each': undefined } }"`,
      kind: 'embedded',
      value: "{ idInTrello: { '$each': undefined } }",
      path: 'teamsId',
      reason: CastError: Cast to string failed for value "{ '$each': undefined }" (type Object) at path "idInTrello"
          at SchemaString.cast (E:\trello-project\TTP-Back\node_modules\mongoose\lib\schema\string.js:603:11)
          at SchemaString.SchemaType.applySetters (E:\trello-project\TTP-Back\node_modules\mongoose\lib\schematype.js:1135:12)
          at EmbeddedDocument.$set (E:\trello-project\TTP-Back\node_modules\mongoose\lib\document.js:1407:20)
          at EmbeddedDocument.$set (E:\trello-project\TTP-Back\node_modules\mongoose\lib\document.js:1161:14)
          at EmbeddedDocument.Document (E:\trello-project\TTP-Back\node_modules\mongoose\lib\document.js:158:12)
          at EmbeddedDocument.Subdocument (E:\trello-project\TTP-Back\node_modules\mongoose\lib\types\subdocument.js:28:12)
          at EmbeddedDocument.ArraySubdocument [as constructor] (E:\trello-project\TTP-Back\node_modules\mongoose\lib\types\ArraySubdocument.js:36:15)
          at new EmbeddedDocument (E:\trello-project\TTP-Back\node_modules\mongoose\lib\schema\documentarray.js:115:17)
          at DocumentArrayPath.cast (E:\trello-project\TTP-Back\node_modules\mongoose\lib\schema\documentarray.js:477:22)
          at DocumentArrayPath.SchemaType.applySetters (E:\trello-project\TTP-Back\node_modules\mongoose\lib\schematype.js:1135:12) {
        stringValue: `"{ '$each': undefined }"`,
        messageFormat: undefined,
        kind: 'string',
        value: { '$each': undefined },
        path: 'idInTrello',
        reason: null,
        valueType: 'Object'
      },
      valueType: 'string'
    }
  },
  level: 'error',
  timestamp: '2022-03-05 13:29:25'
}
{
  message: { department: undefined },
  level: 'info',
  timestamp: '2022-03-05 13:29:25'
}
{
  message: { db: 'mongodb://localhost:27017/TTP' },
  level: 'info',
  timestamp: '2022-03-05 13:33:50'
}
{
  message: {
    departmentData: {
      _id: '621e892cdb7b50ebd5760f6e',
      boardId: '621e892a142efc4992fc73e7',
      addTeam: [ { _id: '621e892dbd32990dfc449552', name: 'team name 10 new' } ]
    }
  },
  level: 'info',
  timestamp: '2022-03-05 13:34:54'
}
{
  message: { teamData: '62233cce69097b85f922c451' },
  level: 'info',
  timestamp: '2022-03-05 13:34:55'
}
{
  message: { removeWebhookSucced: 'done' },
  level: 'info',
  timestamp: '2022-03-05 13:34:55'
}
{
  message: {
    teamListIds: [
      {
        idInTrello: '62233cce69097b85f922c451',
        idInDB: '621e892dbd32990dfc449552'
      }
    ]
  },
  level: 'info',
  timestamp: '2022-03-05 13:34:55'
}
{
  message: { depUpdate: Promise { <pending> } },
  level: 'info',
  timestamp: '2022-03-05 13:34:55'
}
{
  message: {
    deleteNestedRecordDepDBError: CastError: Cast to embedded failed for value "{ idInTrello: { '$each': [ [Object] ] } }" (type string) at path "teamsId"
        at model.Query.exec (E:\trello-project\TTP-Back\node_modules\mongoose\lib\query.js:4545:21)
        at model.Query.Query.then (E:\trello-project\TTP-Back\node_modules\mongoose\lib\query.js:4644:15)
        at processTicksAndRejections (internal/process/task_queues.js:95:5) {
      messageFormat: undefined,
      stringValue: `"{ idInTrello: { '$each': [ [Object] ] } }"`,
      kind: 'embedded',
      value: "{ idInTrello: { '$each': [ [Object] ] } }",
      path: 'teamsId',
      reason: CastError: Cast to string failed for value "{
        '$each': [
          {
            idInTrello: '62233cce69097b85f922c451',
            idInDB: '621e892dbd32990dfc449552'
          }
        ]
      }" (type Object) at path "idInTrello"
          at SchemaString.cast (E:\trello-project\TTP-Back\node_modules\mongoose\lib\schema\string.js:603:11)
          at SchemaString.SchemaType.applySetters (E:\trello-project\TTP-Back\node_modules\mongoose\lib\schematype.js:1135:12)
          at EmbeddedDocument.$set (E:\trello-project\TTP-Back\node_modules\mongoose\lib\document.js:1407:20)
          at EmbeddedDocument.$set (E:\trello-project\TTP-Back\node_modules\mongoose\lib\document.js:1161:14)
          at EmbeddedDocument.Document (E:\trello-project\TTP-Back\node_modules\mongoose\lib\document.js:158:12)
          at EmbeddedDocument.Subdocument (E:\trello-project\TTP-Back\node_modules\mongoose\lib\types\subdocument.js:28:12)
          at EmbeddedDocument.ArraySubdocument [as constructor] (E:\trello-project\TTP-Back\node_modules\mongoose\lib\types\ArraySubdocument.js:36:15)
          at new EmbeddedDocument (E:\trello-project\TTP-Back\node_modules\mongoose\lib\schema\documentarray.js:115:17)
          at DocumentArrayPath.cast (E:\trello-project\TTP-Back\node_modules\mongoose\lib\schema\documentarray.js:477:22)
          at DocumentArrayPath.SchemaType.applySetters (E:\trello-project\TTP-Back\node_modules\mongoose\lib\schematype.js:1135:12) {
        stringValue: '"{\n' +
          "  '$each': [\n" +
          '    {\n' +
          "      idInTrello: '62233cce69097b85f922c451',\n" +
          "      idInDB: '621e892dbd32990dfc449552'\n" +
          '    }\n' +
          '  ]\n' +
          '}"',
        messageFormat: undefined,
        kind: 'string',
        value: {
          '$each': [
            {
              idInTrello: '62233cce69097b85f922c451',
              idInDB: '621e892dbd32990dfc449552'
            }
          ]
        },
        path: 'idInTrello',
        reason: null,
        valueType: 'Object'
      },
      valueType: 'string'
    }
  },
  level: 'error',
  timestamp: '2022-03-05 13:34:55'
}
{
  message: { department: undefined },
  level: 'info',
  timestamp: '2022-03-05 13:34:55'
}
{
  message: { db: 'mongodb://localhost:27017/TTP' },
  level: 'info',
  timestamp: '2022-03-05 13:43:16'
}
{
  message: {
    departmentData: {
      _id: '621e892cdb7b50ebd5760f6e',
      boardId: '621e892a142efc4992fc73e7',
      addTeam: [ { _id: '621e892dbd32990dfc449552', name: 'team name 10 new' } ]
    }
  },
  level: 'info',
  timestamp: '2022-03-05 13:43:21'
}
{
  message: { teamData: '62233ecaac012b4164014979' },
  level: 'info',
  timestamp: '2022-03-05 13:43:22'
}
{
  message: { removeWebhookSucced: 'done' },
  level: 'info',
  timestamp: '2022-03-05 13:43:22'
}
{
  message: {
    teamListIds: [
      {
        idInTrello: '62233ecaac012b4164014979',
        idInDB: '621e892dbd32990dfc449552'
      }
    ]
  },
  level: 'info',
  timestamp: '2022-03-05 13:43:22'
}
{
  message: {
    teamListIds: [
      {
        idInTrello: '62233ecaac012b4164014979',
        idInDB: '621e892dbd32990dfc449552'
      }
    ]
  },
  level: 'info',
  timestamp: '2022-03-05 13:43:22'
}
{
  message: { depUpdate: Promise { <pending> } },
  level: 'info',
  timestamp: '2022-03-05 13:43:22'
}
{
  message: {
    deleteNestedRecordDepDBError: CastError: Cast to embedded failed for value "{ idInTrello: { '$each': [ [Object] ], '$position': 0 } }" (type string) at path "teamsId"
        at model.Query.exec (E:\trello-project\TTP-Back\node_modules\mongoose\lib\query.js:4545:21)
        at model.Query.Query.then (E:\trello-project\TTP-Back\node_modules\mongoose\lib\query.js:4644:15)
        at processTicksAndRejections (internal/process/task_queues.js:95:5) {
      messageFormat: undefined,
      stringValue: `"{ idInTrello: { '$each': [ [Object] ], '$position': 0 } }"`,
      kind: 'embedded',
      value: "{ idInTrello: { '$each': [ [Object] ], '$position': 0 } }",
      path: 'teamsId',
      reason: CastError: Cast to string failed for value "{
        '$each': [
          {
            idInTrello: '62233ecaac012b4164014979',
            idInDB: '621e892dbd32990dfc449552'
          }
        ],
        '$position': 0
      }" (type Object) at path "idInTrello"
          at SchemaString.cast (E:\trello-project\TTP-Back\node_modules\mongoose\lib\schema\string.js:603:11)
          at SchemaString.SchemaType.applySetters (E:\trello-project\TTP-Back\node_modules\mongoose\lib\schematype.js:1135:12)
          at EmbeddedDocument.$set (E:\trello-project\TTP-Back\node_modules\mongoose\lib\document.js:1407:20)
          at EmbeddedDocument.$set (E:\trello-project\TTP-Back\node_modules\mongoose\lib\document.js:1161:14)
          at EmbeddedDocument.Document (E:\trello-project\TTP-Back\node_modules\mongoose\lib\document.js:158:12)
          at EmbeddedDocument.Subdocument (E:\trello-project\TTP-Back\node_modules\mongoose\lib\types\subdocument.js:28:12)
          at EmbeddedDocument.ArraySubdocument [as constructor] (E:\trello-project\TTP-Back\node_modules\mongoose\lib\types\ArraySubdocument.js:36:15)
          at new EmbeddedDocument (E:\trello-project\TTP-Back\node_modules\mongoose\lib\schema\documentarray.js:115:17)
          at DocumentArrayPath.cast (E:\trello-project\TTP-Back\node_modules\mongoose\lib\schema\documentarray.js:477:22)
          at DocumentArrayPath.SchemaType.applySetters (E:\trello-project\TTP-Back\node_modules\mongoose\lib\schematype.js:1135:12) {
        stringValue: '"{\n' +
          "  '$each': [\n" +
          '    {\n' +
          "      idInTrello: '62233ecaac012b4164014979',\n" +
          "      idInDB: '621e892dbd32990dfc449552'\n" +
          '    }\n' +
          '  ],\n' +
          "  '$position': 0\n" +
          '}"',
        messageFormat: undefined,
        kind: 'string',
        value: {
          '$each': [
            {
              idInTrello: '62233ecaac012b4164014979',
              idInDB: '621e892dbd32990dfc449552'
            }
          ],
          '$position': 0
        },
        path: 'idInTrello',
        reason: null,
        valueType: 'Object'
      },
      valueType: 'string'
    }
  },
  level: 'error',
  timestamp: '2022-03-05 13:43:22'
}
{
  message: { department: undefined },
  level: 'info',
  timestamp: '2022-03-05 13:43:22'
}
{
  message: { db: 'mongodb://localhost:27017/TTP' },
  level: 'info',
  timestamp: '2022-03-05 13:44:46'
}
{
  message: {
    departmentData: {
      _id: '621e892cdb7b50ebd5760f6e',
      boardId: '621e892a142efc4992fc73e7',
      addTeam: [ { _id: '621e892dbd32990dfc449552', name: 'team name 10 new' } ]
    }
  },
  level: 'info',
  timestamp: '2022-03-05 13:45:19'
}
{
  message: { teamData: '62233f3f5259ec7844825ce3' },
  level: 'info',
  timestamp: '2022-03-05 13:45:20'
}
{
  message: { removeWebhookSucced: 'done' },
  level: 'info',
  timestamp: '2022-03-05 13:45:20'
}
{
  message: {
    teamListIds: [
      {
        idInTrello: '62233f3f5259ec7844825ce3',
        idInDB: '621e892dbd32990dfc449552'
      }
    ]
  },
  level: 'info',
  timestamp: '2022-03-05 13:45:20'
}
{
  message: {
    title: 'testing',
    teamListIds: [
      {
        idInTrello: '62233f3f5259ec7844825ce3',
        idInDB: '621e892dbd32990dfc449552'
      }
    ]
  },
  level: 'info',
  timestamp: '2022-03-05 13:45:20'
}
{
  message: { depUpdate: Promise { <pending> } },
  level: 'info',
  timestamp: '2022-03-05 13:45:20'
}
{
  message: {
    deleteNestedRecordDepDBError: CastError: Cast to embedded failed for value "{ idInTrello: { '$each': [ [Object] ], '$position': 0 } }" (type string) at path "teamsId"
        at model.Query.exec (E:\trello-project\TTP-Back\node_modules\mongoose\lib\query.js:4545:21)
        at model.Query.Query.then (E:\trello-project\TTP-Back\node_modules\mongoose\lib\query.js:4644:15)
        at processTicksAndRejections (internal/process/task_queues.js:95:5) {
      messageFormat: undefined,
      stringValue: `"{ idInTrello: { '$each': [ [Object] ], '$position': 0 } }"`,
      kind: 'embedded',
      value: "{ idInTrello: { '$each': [ [Object] ], '$position': 0 } }",
      path: 'teamsId',
      reason: CastError: Cast to string failed for value "{
        '$each': [
          {
            idInTrello: '62233f3f5259ec7844825ce3',
            idInDB: '621e892dbd32990dfc449552'
          }
        ],
        '$position': 0
      }" (type Object) at path "idInTrello"
          at SchemaString.cast (E:\trello-project\TTP-Back\node_modules\mongoose\lib\schema\string.js:603:11)
          at SchemaString.SchemaType.applySetters (E:\trello-project\TTP-Back\node_modules\mongoose\lib\schematype.js:1135:12)
          at EmbeddedDocument.$set (E:\trello-project\TTP-Back\node_modules\mongoose\lib\document.js:1407:20)
          at EmbeddedDocument.$set (E:\trello-project\TTP-Back\node_modules\mongoose\lib\document.js:1161:14)
          at EmbeddedDocument.Document (E:\trello-project\TTP-Back\node_modules\mongoose\lib\document.js:158:12)
          at EmbeddedDocument.Subdocument (E:\trello-project\TTP-Back\node_modules\mongoose\lib\types\subdocument.js:28:12)
          at EmbeddedDocument.ArraySubdocument [as constructor] (E:\trello-project\TTP-Back\node_modules\mongoose\lib\types\ArraySubdocument.js:36:15)
          at new EmbeddedDocument (E:\trello-project\TTP-Back\node_modules\mongoose\lib\schema\documentarray.js:115:17)
          at DocumentArrayPath.cast (E:\trello-project\TTP-Back\node_modules\mongoose\lib\schema\documentarray.js:477:22)
          at DocumentArrayPath.SchemaType.applySetters (E:\trello-project\TTP-Back\node_modules\mongoose\lib\schematype.js:1135:12) {
        stringValue: '"{\n' +
          "  '$each': [\n" +
          '    {\n' +
          "      idInTrello: '62233f3f5259ec7844825ce3',\n" +
          "      idInDB: '621e892dbd32990dfc449552'\n" +
          '    }\n' +
          '  ],\n' +
          "  '$position': 0\n" +
          '}"',
        messageFormat: undefined,
        kind: 'string',
        value: {
          '$each': [
            {
              idInTrello: '62233f3f5259ec7844825ce3',
              idInDB: '621e892dbd32990dfc449552'
            }
          ],
          '$position': 0
        },
        path: 'idInTrello',
        reason: null,
        valueType: 'Object'
      },
      valueType: 'string'
    }
  },
  level: 'error',
  timestamp: '2022-03-05 13:45:20'
}
{
  message: { department: undefined },
  level: 'info',
  timestamp: '2022-03-05 13:45:20'
}
{
  message: { db: 'mongodb://localhost:27017/TTP' },
  level: 'info',
  timestamp: '2022-03-05 13:47:10'
}
{
  message: {
    departmentData: {
      _id: '621e892cdb7b50ebd5760f6e',
      boardId: '621e892a142efc4992fc73e7',
      addTeam: [ { _id: '621e892dbd32990dfc449552', name: 'team name 10 new' } ]
    }
  },
  level: 'info',
  timestamp: '2022-03-05 13:47:24'
}
{
  message: { teamData: '62233fbc733e7e7e603663df' },
  level: 'info',
  timestamp: '2022-03-05 13:47:25'
}
{
  message: { removeWebhookSucced: 'done' },
  level: 'info',
  timestamp: '2022-03-05 13:47:25'
}
{
  message: {
    teamListIds: [
      {
        idInTrello: '62233fbc733e7e7e603663df',
        idInDB: '621e892dbd32990dfc449552'
      }
    ]
  },
  level: 'info',
  timestamp: '2022-03-05 13:47:25'
}
{
  message: {
    title: 'testing',
    teamListIds: [
      {
        idInTrello: '62233fbc733e7e7e603663df',
        idInDB: '621e892dbd32990dfc449552'
      }
    ]
  },
  level: 'info',
  timestamp: '2022-03-05 13:47:25'
}
{
  message: { depUpdate: Promise { <pending> } },
  level: 'info',
  timestamp: '2022-03-05 13:47:25'
}
{
  message: {
    department: {
      _id: new ObjectId("621e892cdb7b50ebd5760f6e"),
      name: 'test team 20',
      boardId: '621e892a142efc4992fc73e7',
      color: 'pink',
      teamsId: [
        {
          idInTrello: '621e892dbd32990dfc449558',
          idInDB: new ObjectId("61eab832b41398d86474d4ac"),
          _id: new ObjectId("621e8931db7b50ebd5760f71")
        },
        {
          idInTrello: '621e892d59f758489229a71d',
          idInDB: new ObjectId("61eac1ea6b95c7f7ed8be309"),
          _id: new ObjectId("621e8931db7b50ebd5760f72")
        }
      ],
      createdAt: 2022-03-01T20:59:24.346Z,
      updatedAt: 2022-03-05T10:14:23.044Z,
      __v: 0,
      canceldListId: '621e892fbd023e07baad97ff',
      defaultListId: '621e892ee623e62346306064',
      doneListId: '621e892bd6a8af6380a0f71e',
      notClearListId: '621e892e4fea1f775ad7bc3e',
      reviewListId: '621e892ca525573e4c4fece0',
      sharedListID: '621e892cb24bd66232aa3133',
      mainBoard: true
    }
  },
  level: 'info',
  timestamp: '2022-03-05 13:47:25'
}
{
  message: { db: 'mongodb://localhost:27017/TTP' },
  level: 'info',
  timestamp: '2022-03-05 13:56:35'
}
{
  message: {
    departmentData: {
      _id: '621e892cdb7b50ebd5760f6e',
      boardId: '621e892a142efc4992fc73e7',
      removeTeam: [ '62233fbc733e7e7e603663df' ]
    }
  },
  level: 'info',
  timestamp: '2022-03-05 13:56:57'
}
{
  message: { depUpdate: Promise { <pending> } },
  level: 'info',
  timestamp: '2022-03-05 13:56:57'
}
{
  message: {
    department: {
      _id: new ObjectId("621e892cdb7b50ebd5760f6e"),
      name: 'test team 20',
      boardId: '621e892a142efc4992fc73e7',
      color: 'pink',
      teamsId: [
        {
          idInTrello: '62233fbc733e7e7e603663df',
          idInDB: new ObjectId("621e892dbd32990dfc449552"),
          _id: new ObjectId("62233fbdbf14444d0da885e8")
        },
        {
          idInTrello: '621e892dbd32990dfc449558',
          idInDB: new ObjectId("61eab832b41398d86474d4ac"),
          _id: new ObjectId("621e8931db7b50ebd5760f71")
        },
        {
          idInTrello: '621e892d59f758489229a71d',
          idInDB: new ObjectId("61eac1ea6b95c7f7ed8be309"),
          _id: new ObjectId("621e8931db7b50ebd5760f72")
        }
      ],
      createdAt: 2022-03-01T20:59:24.346Z,
      updatedAt: 2022-03-05T10:47:25.450Z,
      __v: 0,
      canceldListId: '621e892fbd023e07baad97ff',
      defaultListId: '621e892ee623e62346306064',
      doneListId: '621e892bd6a8af6380a0f71e',
      notClearListId: '621e892e4fea1f775ad7bc3e',
      reviewListId: '621e892ca525573e4c4fece0',
      sharedListID: '621e892cb24bd66232aa3133',
      mainBoard: true
    }
  },
  level: 'info',
  timestamp: '2022-03-05 13:56:57'
}
{
  message: { removeListAndWebhookSucced: 'done' },
  level: 'info',
  timestamp: '2022-03-05 13:56:57'
}
{
  message: {
    departmentData: {
      _id: '621e892cdb7b50ebd5760f6e',
      boardId: '621e892a142efc4992fc73e7',
      addTeam: [ { _id: '621e892dbd32990dfc449552', name: 'team name 10 new' } ]
    }
  },
  level: 'info',
  timestamp: '2022-03-05 13:57:46'
}
{
  message: { teamData: '6223422a46526f3f1a53d017' },
  level: 'info',
  timestamp: '2022-03-05 13:57:47'
}
{
  message: { removeWebhookSucced: 'done' },
  level: 'info',
  timestamp: '2022-03-05 13:57:47'
}
{
  message: {
    teamListIds: [
      {
        idInTrello: '6223422a46526f3f1a53d017',
        idInDB: '621e892dbd32990dfc449552'
      }
    ]
  },
  level: 'info',
  timestamp: '2022-03-05 13:57:47'
}
{
  message: {
    title: 'testing',
    teamListIds: [
      {
        idInTrello: '6223422a46526f3f1a53d017',
        idInDB: '621e892dbd32990dfc449552'
      }
    ]
  },
  level: 'info',
  timestamp: '2022-03-05 13:57:47'
}
{
  message: { depUpdate: Promise { <pending> } },
  level: 'info',
  timestamp: '2022-03-05 13:57:47'
}
{
  message: {
    department: {
      _id: new ObjectId("621e892cdb7b50ebd5760f6e"),
      name: 'test team 20',
      boardId: '621e892a142efc4992fc73e7',
      color: 'pink',
      teamsId: [
        {
          idInTrello: '621e892dbd32990dfc449558',
          idInDB: new ObjectId("61eab832b41398d86474d4ac"),
          _id: new ObjectId("621e8931db7b50ebd5760f71")
        },
        {
          idInTrello: '621e892d59f758489229a71d',
          idInDB: new ObjectId("61eac1ea6b95c7f7ed8be309"),
          _id: new ObjectId("621e8931db7b50ebd5760f72")
        }
      ],
      createdAt: 2022-03-01T20:59:24.346Z,
      updatedAt: 2022-03-05T10:56:57.102Z,
      __v: 0,
      canceldListId: '621e892fbd023e07baad97ff',
      defaultListId: '621e892ee623e62346306064',
      doneListId: '621e892bd6a8af6380a0f71e',
      notClearListId: '621e892e4fea1f775ad7bc3e',
      reviewListId: '621e892ca525573e4c4fece0',
      sharedListID: '621e892cb24bd66232aa3133',
      mainBoard: true
    }
  },
  level: 'info',
  timestamp: '2022-03-05 13:57:47'
}
{
  message: { db: 'mongodb://localhost:27017/TTP' },
  level: 'info',
  timestamp: '2022-03-05 14:02:42'
}
{
  message: {
    departmentData: {
      _id: '621e892cdb7b50ebd5760f6e',
      boardId: '621e892a142efc4992fc73e7',
      mainBoard: true,
      addTeam: [ { _id: '621e892dbd32990dfc449552', name: 'team name 10 new' } ]
    }
  },
  level: 'info',
  timestamp: '2022-03-05 14:02:49'
}
{
  message: 'second step',
  level: 'info',
  timestamp: '2022-03-05 14:02:49'
}
{
  message: 'fourth step',
  level: 'info',
  timestamp: '2022-03-05 14:02:49'
}
{
  message: {
    updateDepartmentError: TypeError: Cannot read property 'map' of undefined
        at Function.<anonymous> (E:\trello-project\TTP-Back\src\lib\controllers\department.ts:78:39)
        at Generator.next (<anonymous>)
        at E:\trello-project\TTP-Back\src\lib\controllers\department.ts:8:71
        at new Promise (<anonymous>)
        at __awaiter (E:\trello-project\TTP-Back\src\lib\controllers\department.ts:4:12)
        at Function.__updateDepartmentData (E:\trello-project\TTP-Back\src\lib\controllers\department.ts:73:16)
        at E:\trello-project\TTP-Back\src\lib\controllers\department.ts:13:39
        at Generator.next (<anonymous>)
        at E:\trello-project\TTP-Back\src\lib\controllers\department.ts:8:71
        at new Promise (<anonymous>)
  },
  level: 'error',
  timestamp: '2022-03-05 14:02:49'
}
{
  message: { department: undefined },
  level: 'info',
  timestamp: '2022-03-05 14:02:49'
}
{
  message: { db: 'mongodb://localhost:27017/TTP' },
  level: 'info',
  timestamp: '2022-03-05 14:03:57'
}
{
  message: {
    departmentData: {
      _id: '621e892cdb7b50ebd5760f6e',
      boardId: '621e892a142efc4992fc73e7',
      mainBoard: true,
      addTeam: [ { _id: '621e892dbd32990dfc449552', name: 'team name 10 new' } ]
    }
  },
  level: 'info',
  timestamp: '2022-03-05 14:04:04'
}
{
  message: 'second step',
  level: 'info',
  timestamp: '2022-03-05 14:04:04'
}
{
  message: { teamData: '622343a41c3d5c3f69272b94' },
  level: 'info',
  timestamp: '2022-03-05 14:04:05'
}
{
  message: { removeWebhookSucced: 'done' },
  level: 'info',
  timestamp: '2022-03-05 14:04:05'
}
{
  message: {
    teamListIds: [
      {
        idInTrello: '622343a41c3d5c3f69272b94',
        idInDB: '621e892dbd32990dfc449552'
      }
    ]
  },
  level: 'info',
  timestamp: '2022-03-05 14:04:05'
}
{
  message: {
    title: 'testing',
    teamListIds: [
      {
        idInTrello: '622343a41c3d5c3f69272b94',
        idInDB: '621e892dbd32990dfc449552'
      }
    ]
  },
  level: 'info',
  timestamp: '2022-03-05 14:04:05'
}
{
  message: { depUpdate: Promise { <pending> } },
  level: 'info',
  timestamp: '2022-03-05 14:04:05'
}
{
  message: {
    department: {
      _id: new ObjectId("621e892cdb7b50ebd5760f6e"),
      name: 'test team 20',
      boardId: '621e892a142efc4992fc73e7',
      color: 'pink',
      teamsId: [
        {
          idInTrello: '6223422a46526f3f1a53d017',
          idInDB: new ObjectId("621e892dbd32990dfc449552"),
          _id: new ObjectId("6223422b59795fd71c6c86b1")
        },
        {
          idInTrello: '621e892dbd32990dfc449558',
          idInDB: new ObjectId("61eab832b41398d86474d4ac"),
          _id: new ObjectId("621e8931db7b50ebd5760f71")
        },
        {
          idInTrello: '621e892d59f758489229a71d',
          idInDB: new ObjectId("61eac1ea6b95c7f7ed8be309"),
          _id: new ObjectId("621e8931db7b50ebd5760f72")
        }
      ],
      createdAt: 2022-03-01T20:59:24.346Z,
      updatedAt: 2022-03-05T10:57:47.440Z,
      __v: 0,
      canceldListId: '621e892fbd023e07baad97ff',
      defaultListId: '621e892ee623e62346306064',
      doneListId: '621e892bd6a8af6380a0f71e',
      notClearListId: '621e892e4fea1f775ad7bc3e',
      reviewListId: '621e892ca525573e4c4fece0',
      sharedListID: '621e892cb24bd66232aa3133',
      mainBoard: true
    }
  },
  level: 'info',
  timestamp: '2022-03-05 14:04:05'
}
{
  message: { webhookUpdateData: {} },
  level: 'info',
  timestamp: '2022-03-05 14:04:06'
}
{
  message: {
    webhookUpdateData: {
      model: {
        id: '622343a41c3d5c3f69272b94',
        name: 'team name 10 new',
        closed: false,
        idBoard: '621e892a142efc4992fc73e7',
        pos: 32
      },
      action: {
        id: '622343c586fab3108d868dc1',
        idMemberCreator: '616576dc48190f7969f67b62',
        data: {
          card: {
            idList: '622343a41c3d5c3f69272b94',
            id: '621e9019bd8bf10f146d4eea',
            name: 'asdad',
            idShort: 1,
            shortLink: 'IPZGRDMM'
          },
          old: { idList: '6223422a46526f3f1a53d017' },
          board: {
            id: '621e892a142efc4992fc73e7',
            name: 'test team 20',
            shortLink: 'USWK8a4w'
          },
          listBefore: { id: '6223422a46526f3f1a53d017', name: 'team name 10 new' },
          listAfter: { id: '622343a41c3d5c3f69272b94', name: 'team name 10 new' }
        },
        appCreator: null,
        type: 'updateCard',
        date: '2022-03-05T11:04:37.130Z',
        limits: {},
        display: {
          translationKey: 'action_move_card_from_list_to_list',
          entities: {
            card: {
              type: 'card',
              idList: '622343a41c3d5c3f69272b94',
              id: '621e9019bd8bf10f146d4eea',
              shortLink: 'IPZGRDMM',
              text: 'asdad'
            },
            listBefore: {
              type: 'list',
              id: '6223422a46526f3f1a53d017',
              text: 'team name 10 new'
            },
            listAfter: {
              type: 'list',
              id: '622343a41c3d5c3f69272b94',
              text: 'team name 10 new'
            },
            memberCreator: {
              type: 'member',
              id: '616576dc48190f7969f67b62',
              username: 'mohamednageh7',
              text: 'mohamednageh7'
            }
          }
        },
        memberCreator: {
          id: '616576dc48190f7969f67b62',
          activityBlocked: false,
          avatarHash: 'e5019bd1d553a6f4eb993ff74fa36ca3',
          avatarUrl: 'https://trello-members.s3.amazonaws.com/616576dc48190f7969f67b62/e5019bd1d553a6f4eb993ff74fa36ca3',
          fullName: 'mohamednageh7',
          idMemberReferrer: null,
          initials: 'M',
          nonPublic: {},
          nonPublicAvailable: true,
          username: 'mohamednageh7'
        }
      }
    }
  },
  level: 'info',
  timestamp: '2022-03-05 14:04:38'
}
{
  message: { db: 'mongodb://localhost:27017/TTP' },
  level: 'info',
  timestamp: '2022-03-05 21:44:08'
}
{
  message: {
    departmentData: {
      _id: '621e892cdb7b50ebd5760f6e',
      boardId: '621e892a142efc4992fc73e7',
      name: 'test team 30',
      color: 'sky',
      mainBoard: true,
      addTeam: [ { _id: '621e892dbd32990dfc449552', name: 'team name 10 new' } ],
      removeTeam: [ '621e892d59f758489229a71d' ]
    }
  },
  level: 'info',
  timestamp: '2022-03-05 22:50:15'
}
{
  message: 'first step',
  level: 'info',
  timestamp: '2022-03-05 22:50:15'
}
{
  message: {
    updatedbDepartmentError: {
      _id: '621e892cdb7b50ebd5760f6e',
      boardId: '621e892a142efc4992fc73e7',
      name: 'test team 30',
      color: 'sky',
      mainBoard: true,
      addTeam: [ { _id: '621e892dbd32990dfc449552', name: 'team name 10 new' } ],
      removeTeam: [ '621e892d59f758489229a71d' ]
    }
  },
  level: 'info',
  timestamp: '2022-03-05 22:50:16'
}
{
  message: 'second step',
  level: 'info',
  timestamp: '2022-03-05 22:50:16'
}
{
  message: { removeListAndWebhookSucced: 'done' },
  level: 'info',
  timestamp: '2022-03-05 22:50:17'
}
{
  message: { teamData: '6223bef9f899498944782128' },
  level: 'info',
  timestamp: '2022-03-05 22:50:17'
}
{
  message: { removeWebhookSucced: 'done' },
  level: 'info',
  timestamp: '2022-03-05 22:50:17'
}
{
  message: {
    teamListIds: [
      {
        idInTrello: '6223bef9f899498944782128',
        idInDB: '621e892dbd32990dfc449552'
      }
    ]
  },
  level: 'info',
  timestamp: '2022-03-05 22:50:17'
}
{
  message: {
    title: 'testing',
    teamListIds: [
      {
        idInTrello: '6223bef9f899498944782128',
        idInDB: '621e892dbd32990dfc449552'
      }
    ]
  },
  level: 'info',
  timestamp: '2022-03-05 22:50:17'
}
{
  message: { depUpdate: Promise { <pending> } },
  level: 'info',
  timestamp: '2022-03-05 22:50:17'
}
{
  message: { department: null },
  level: 'info',
  timestamp: '2022-03-05 22:50:17'
}
{
  message: { db: 'mongodb://localhost:27017/TTP' },
  level: 'info',
  timestamp: '2022-03-05 22:54:36'
}
{
  message: {
    departmentData: {
      _id: '621e892cdb7b50ebd5760f6e',
      boardId: '621e892a142efc4992fc73e7',
      name: 'test team 30',
      color: 'sky',
      mainBoard: true,
      addTeam: [ { _id: '621e892dbd32990dfc449552', name: 'team name 10 new' } ],
      removeTeam: [ '621e892d59f758489229a71d' ]
    }
  },
  level: 'info',
  timestamp: '2022-03-05 22:54:53'
}
{
  message: 'first step',
  level: 'info',
  timestamp: '2022-03-05 22:54:53'
}
{
  message: { updatedbDepartmentError: { name: 'test team 30', color: 'sky' } },
  level: 'info',
  timestamp: '2022-03-05 22:54:54'
}
{
  message: {
    updatedbDepartmentError: CastError: Cast to ObjectId failed for value "{ _id: undefined }" (type Object) at path "_id" for model "department"
        at model.Query.exec (E:\trello-project\TTP-Back\node_modules\mongoose\lib\query.js:4545:21)
        at model.Query.Query.then (E:\trello-project\TTP-Back\node_modules\mongoose\lib\query.js:4644:15)
        at processTicksAndRejections (internal/process/task_queues.js:95:5) {
      messageFormat: undefined,
      stringValue: '"{ _id: undefined }"',
      kind: 'ObjectId',
      value: { _id: undefined },
      path: '_id',
      reason: TypeError: Argument passed in must be a Buffer or string of 12 bytes or a string of 24 hex characters
          at new BSONTypeError (E:\trello-project\TTP-Back\node_modules\bson\lib\error.js:39:42)
          at new ObjectId (E:\trello-project\TTP-Back\node_modules\bson\src\objectid.ts:88:15)
          at castObjectId (E:\trello-project\TTP-Back\node_modules\mongoose\lib\cast\objectid.js:25:12)
          at ObjectId.cast (E:\trello-project\TTP-Back\node_modules\mongoose\lib\schema\objectid.js:245:12)
          at ObjectId.SchemaType.applySetters (E:\trello-project\TTP-Back\node_modules\mongoose\lib\schematype.js:1135:12)
          at ObjectId.SchemaType._castForQuery (E:\trello-project\TTP-Back\node_modules\mongoose\lib\schematype.js:1567:15)
          at ObjectId.SchemaType.castForQuery (E:\trello-project\TTP-Back\node_modules\mongoose\lib\schematype.js:1557:15)
          at ObjectId.SchemaType.castForQueryWrapper (E:\trello-project\TTP-Back\node_modules\mongoose\lib\schematype.js:1534:20)
          at cast (E:\trello-project\TTP-Back\node_modules\mongoose\lib\cast.js:280:34)
          at model.Query.Query.cast (E:\trello-project\TTP-Back\node_modules\mongoose\lib\query.js:4968:12),
      valueType: 'Object'
    }
  },
  level: 'error',
  timestamp: '2022-03-05 22:54:54'
}
{
  message: { removeListAndWebhookSucced: 'done' },
  level: 'info',
  timestamp: '2022-03-05 22:54:55'
}
{
  message: { teamData: '6223c00f01f283479d9a5b8a' },
  level: 'info',
  timestamp: '2022-03-05 22:54:55'
}
{
  message: { removeWebhookSucced: 'done' },
  level: 'info',
  timestamp: '2022-03-05 22:54:55'
}
{
  message: {
    teamListIds: [
      {
        idInTrello: '6223c00f01f283479d9a5b8a',
        idInDB: '621e892dbd32990dfc449552'
      }
    ]
  },
  level: 'info',
  timestamp: '2022-03-05 22:54:55'
}
{
  message: {
    title: 'testing',
    teamListIds: [
      {
        idInTrello: '6223c00f01f283479d9a5b8a',
        idInDB: '621e892dbd32990dfc449552'
      }
    ]
  },
  level: 'info',
  timestamp: '2022-03-05 22:54:55'
}
{
  message: { depUpdate: Promise { <pending> } },
  level: 'info',
  timestamp: '2022-03-05 22:54:55'
}
{
  message: {
    department: {
      _id: new ObjectId("621e892cdb7b50ebd5760f6e"),
      name: 'test team 30',
      boardId: '621e892a142efc4992fc73e7',
      color: 'sky',
      teamsId: [
        {
          idInTrello: '622343a41c3d5c3f69272b94',
          idInDB: new ObjectId("621e892dbd32990dfc449552"),
          _id: new ObjectId("622343a523714bb587474e07")
        },
        {
          idInTrello: '621e892dbd32990dfc449558',
          idInDB: new ObjectId("61eab832b41398d86474d4ac"),
          _id: new ObjectId("621e8931db7b50ebd5760f71")
        }
      ],
      createdAt: 2022-03-01T20:59:24.346Z,
      updatedAt: 2022-03-05T19:54:54.592Z,
      __v: 0,
      canceldListId: '621e892fbd023e07baad97ff',
      defaultListId: '621e892ee623e62346306064',
      doneListId: '621e892bd6a8af6380a0f71e',
      notClearListId: '621e892e4fea1f775ad7bc3e',
      reviewListId: '621e892ca525573e4c4fece0',
      sharedListID: '621e892cb24bd66232aa3133',
      mainBoard: true
    }
  },
  level: 'info',
  timestamp: '2022-03-05 22:54:55'
}
{
  message: { db: 'mongodb://localhost:27017/TTP' },
  level: 'info',
  timestamp: '2022-03-05 22:56:03'
}
{
  message: {
    departmentData: {
      _id: '621e892cdb7b50ebd5760f6e',
      boardId: '621e892a142efc4992fc73e7',
      name: 'test team 30',
      color: 'sky',
      mainBoard: true,
      addTeam: [ { _id: '621e892dbd32990dfc449552', name: 'team name 10 new' } ],
      removeTeam: [ '621e892d59f758489229a71d' ]
    }
  },
  level: 'info',
  timestamp: '2022-03-05 22:56:28'
}
{
  message: 'first step',
  level: 'info',
  timestamp: '2022-03-05 22:56:28'
}
{
  message: {
    updatedbDepartmentError: {
      name: 'test team 30',
      color: 'sky',
      _id: '621e892cdb7b50ebd5760f6e'
    }
  },
  level: 'info',
  timestamp: '2022-03-05 22:56:30'
}
{
  message: { removeListAndWebhookSucced: 'done' },
  level: 'info',
  timestamp: '2022-03-05 22:56:30'
}
{
  message: { teamData: '6223c06fb7a40a387251c797' },
  level: 'info',
  timestamp: '2022-03-05 22:56:31'
}
{
  message: { removeWebhookSucced: 'done' },
  level: 'info',
  timestamp: '2022-03-05 22:56:31'
}
{
  message: {
    teamListIds: [
      {
        idInTrello: '6223c06fb7a40a387251c797',
        idInDB: '621e892dbd32990dfc449552'
      }
    ]
  },
  level: 'info',
  timestamp: '2022-03-05 22:56:31'
}
{
  message: {
    title: 'testing',
    teamListIds: [
      {
        idInTrello: '6223c06fb7a40a387251c797',
        idInDB: '621e892dbd32990dfc449552'
      }
    ]
  },
  level: 'info',
  timestamp: '2022-03-05 22:56:31'
}
{
  message: { depUpdate: Promise { <pending> } },
  level: 'info',
  timestamp: '2022-03-05 22:56:31'
}
{
  message: {
    department: {
      _id: new ObjectId("621e892cdb7b50ebd5760f6e"),
      name: 'test team 30',
      boardId: '621e892a142efc4992fc73e7',
      color: 'sky',
      teamsId: [
        {
          idInTrello: '6223c00f01f283479d9a5b8a',
          idInDB: new ObjectId("621e892dbd32990dfc449552"),
          _id: new ObjectId("6223c00ffd3c87d5d580aa7e")
        },
        {
          idInTrello: '622343a41c3d5c3f69272b94',
          idInDB: new ObjectId("621e892dbd32990dfc449552"),
          _id: new ObjectId("622343a523714bb587474e07")
        },
        {
          idInTrello: '621e892dbd32990dfc449558',
          idInDB: new ObjectId("61eab832b41398d86474d4ac"),
          _id: new ObjectId("621e8931db7b50ebd5760f71")
        }
      ],
      createdAt: 2022-03-01T20:59:24.346Z,
      updatedAt: 2022-03-05T19:56:30.330Z,
      __v: 0,
      canceldListId: '621e892fbd023e07baad97ff',
      defaultListId: '621e892ee623e62346306064',
      doneListId: '621e892bd6a8af6380a0f71e',
      notClearListId: '621e892e4fea1f775ad7bc3e',
      reviewListId: '621e892ca525573e4c4fece0',
      sharedListID: '621e892cb24bd66232aa3133',
      mainBoard: true
    }
  },
  level: 'info',
  timestamp: '2022-03-05 22:56:31'
}
{
  message: { db: 'mongodb://localhost:27017/TTP' },
  level: 'info',
  timestamp: '2022-03-05 22:59:23'
}
{
  message: {
    departmentData: {
      _id: '621e892cdb7b50ebd5760f6e',
      boardId: '621e892a142efc4992fc73e7',
      name: 'test team 30',
      color: 'sky',
      mainBoard: true,
      addTeam: [ { _id: '621e892dbd32990dfc449552', name: 'team name 10 new' } ],
      removeTeam: [
        '622343a41c3d5c3f69272b94',
        '621e892dbd32990dfc449558',
        '6223c00f01f283479d9a5b8a',
        '6223c06fb7a40a387251c797'
      ]
    }
  },
  level: 'info',
  timestamp: '2022-03-05 22:59:40'
}
{
  message: 'first step',
  level: 'info',
  timestamp: '2022-03-05 22:59:40'
}
{
  message: {
    updatedbDepartmentError: {
      name: 'test team 30',
      color: 'sky',
      _id: '621e892cdb7b50ebd5760f6e'
    }
  },
  level: 'info',
  timestamp: '2022-03-05 22:59:42'
}
{
  message: { removeListAndWebhookSucced: 'done' },
  level: 'info',
  timestamp: '2022-03-05 22:59:43'
}
{
  message: { teamData: '6223c1300b07b92a130fbaa9' },
  level: 'info',
  timestamp: '2022-03-05 22:59:44'
}
{
  message: { removeWebhookSucced: 'done' },
  level: 'info',
  timestamp: '2022-03-05 22:59:44'
}
{
  message: {
    teamListIds: [
      {
        idInTrello: '6223c1300b07b92a130fbaa9',
        idInDB: '621e892dbd32990dfc449552'
      }
    ]
  },
  level: 'info',
  timestamp: '2022-03-05 22:59:44'
}
{
  message: {
    title: 'testing',
    teamListIds: [
      {
        idInTrello: '6223c1300b07b92a130fbaa9',
        idInDB: '621e892dbd32990dfc449552'
      }
    ]
  },
  level: 'info',
  timestamp: '2022-03-05 22:59:44'
}
{
  message: { depUpdate: Promise { <pending> } },
  level: 'info',
  timestamp: '2022-03-05 22:59:44'
}
{
  message: {
    department: {
      _id: new ObjectId("621e892cdb7b50ebd5760f6e"),
      name: 'test team 30',
      boardId: '621e892a142efc4992fc73e7',
      color: 'sky',
      teamsId: [],
      createdAt: 2022-03-01T20:59:24.346Z,
      updatedAt: 2022-03-05T19:59:42.991Z,
      __v: 0,
      canceldListId: '621e892fbd023e07baad97ff',
      defaultListId: '621e892ee623e62346306064',
      doneListId: '621e892bd6a8af6380a0f71e',
      notClearListId: '621e892e4fea1f775ad7bc3e',
      reviewListId: '621e892ca525573e4c4fece0',
      sharedListID: '621e892cb24bd66232aa3133',
      mainBoard: true
    }
  },
  level: 'info',
  timestamp: '2022-03-05 22:59:44'
}
{
  message: { webhookUpdateData: {} },
  level: 'info',
  timestamp: '2022-03-05 22:59:45'
}
{
  message: { db: 'mongodb://localhost:27017/TTP' },
  level: 'info',
  timestamp: '2022-03-06 00:08:32'
}
{
  message: { db: 'mongodb://localhost:27017/TTP' },
  level: 'info',
  timestamp: '2022-03-06 00:13:07'
}
{
  message: {
    handleDeletDepartmentDataError: TypeError: Cannot destructure property '_id' of 'req.body.id' as it is undefined.
        at E:\trello-project\TTP-Back\src\lib\presentation\department\department.ts:47:12
        at Generator.next (<anonymous>)
        at E:\trello-project\TTP-Back\src\lib\presentation\department\department.ts:8:71
        at new Promise (<anonymous>)
        at __awaiter (E:\trello-project\TTP-Back\src\lib\presentation\department\department.ts:4:12)
        at handleDeleteDepartment (E:\trello-project\TTP-Back\src\lib\presentation\department\department.ts:70:16)
        at Layer.handle [as handle_request] (E:\trello-project\TTP-Back\node_modules\express\lib\router\layer.js:95:5)
        at next (E:\trello-project\TTP-Back\node_modules\express\lib\router\route.js:137:13)
        at Route.dispatch (E:\trello-project\TTP-Back\node_modules\express\lib\router\route.js:112:3)
        at Layer.handle [as handle_request] (E:\trello-project\TTP-Back\node_modules\express\lib\router\layer.js:95:5)
  },
  level: 'error',
  timestamp: '2022-03-06 00:13:23'
}
{
  message: { db: 'mongodb://localhost:27017/TTP' },
  level: 'info',
  timestamp: '2022-03-06 00:14:14'
}
{
  message: 'third step',
  level: 'info',
  timestamp: '2022-03-06 00:14:21'
}
{
  message: { removeWebhookSucced: 'done' },
  level: 'info',
  timestamp: '2022-03-06 00:14:23'
}
{
  message: {
    borderData: Promise { <pending> },
    createBoardApi: 'https://api.trello.com/1/boards/?name=test&prefs_background=sky&defaultLists=false&key=96b980af38094db6e5767718567af6ce&token=7f44a81ca5f903883e1b3a5720f89b70b8feacd4437d2cb893068b3b93455e5f'
  },
  level: 'info',
  timestamp: '2022-03-06 00:15:14'
}
{
  message: {
    boardData: {
      id: '6223d2e2dfa96e7f94f45a44',
      name: 'test',
      desc: '',
      descData: null,
      closed: false,
      idOrganization: '61e87201397f573cb99a0418',
      idEnterprise: null,
      pinned: false,
      url: 'https://trello.com/b/RfYnlAdg/test',
      shortUrl: 'https://trello.com/b/RfYnlAdg',
      prefs: {
        permissionLevel: 'private',
        hideVotes: false,
        voting: 'disabled',
        comments: 'members',
        invitations: 'members',
        selfJoin: true,
        cardCovers: true,
        isTemplate: false,
        cardAging: 'regular',
        calendarFeedEnabled: false,
        hiddenPluginBoardButtons: [],
        background: 'sky',
        backgroundColor: '#00AECC',
        backgroundImage: null,
        backgroundImageScaled: null,
        backgroundTile: false,
        backgroundBrightness: 'dark',
        backgroundBottomColor: '#00AECC',
        backgroundTopColor: '#00AECC',
        canBePublic: true,
        canBeEnterprise: true,
        canBeOrg: true,
        canBePrivate: true,
        canInvite: true
      },
      labelNames: {
        green: '',
        yellow: '',
        orange: '',
        red: '',
        purple: '',
        blue: '',
        sky: '',
        lime: '',
        pink: '',
        black: ''
      },
      limits: {}
    }
  },
  level: 'info',
  timestamp: '2022-03-06 00:15:14'
}
{
  message: {
    data: { name: 'test', color: 'sky', boardId: '6223d2e2dfa96e7f94f45a44' }
  },
  level: 'info',
  timestamp: '2022-03-06 00:15:14'
}
{
  message: { teamData: '6223d2e56f601c3e8a9e66c3' },
  level: 'info',
  timestamp: '2022-03-06 00:15:16'
}
{
  message: { teamData: '6223d2e5869b863ef326b385' },
  level: 'info',
  timestamp: '2022-03-06 00:15:16'
}
{
  message: { removeWebhookSucced: 'done' },
  level: 'info',
  timestamp: '2022-03-06 00:15:16'
}
{
  message: {
    teamListIds: [
      {
        idInTrello: '6223d2e56f601c3e8a9e66c3',
        idInDB: '61eab832b41398d86474d4ac'
      },
      {
        idInTrello: '6223d2e5869b863ef326b385',
        idInDB: '61eac1ea6b95c7f7ed8be309'
      }
    ]
  },
  level: 'info',
  timestamp: '2022-03-06 00:15:16'
}
{
  message: {
    updatedbDepartmentError: {
      _id: new ObjectId("6223d2e2f26e20c38dae4d9a"),
      defaultListId: '6223d2e53b7f8a6363a47a32',
      sharedListID: '6223d2e42809b5474bfc446d',
      doneListId: '6223d2e300ccc3517fd307b8',
      reviewListId: '6223d2e44b5ca65cfda5fbe2',
      notClearListId: '6223d2e6fc9932357182fc57',
      canceldListId: '6223d2e7e48c3f8a39f2f404',
      teamsId: [
        {
          idInTrello: '6223d2e56f601c3e8a9e66c3',
          idInDB: '61eab832b41398d86474d4ac'
        },
        {
          idInTrello: '6223d2e5869b863ef326b385',
          idInDB: '61eac1ea6b95c7f7ed8be309'
        }
      ]
    }
  },
  level: 'info',
  timestamp: '2022-03-06 00:15:19'
}
{
  message: { webhookUpdateData: {} },
  level: 'info',
  timestamp: '2022-03-06 00:15:20'
}
{
  message: { webhookUpdateData: {} },
  level: 'info',
  timestamp: '2022-03-06 00:15:20'
}
{
  message: { webhookUpdateData: {} },
  level: 'info',
  timestamp: '2022-03-06 00:15:20'
}
{
  message: { webhookUpdateData: {} },
  level: 'info',
  timestamp: '2022-03-06 00:15:21'
}
{
  message: { webhookUpdateData: {} },
  level: 'info',
  timestamp: '2022-03-06 00:15:22'
}
{
  message: { webhookUpdateData: {} },
  level: 'info',
  timestamp: '2022-03-06 00:15:22'
}
{
  message: { webhookCreateResult: 'webhook done' },
  level: 'info',
  timestamp: '2022-03-06 00:15:22'
}
{
  message: { db: 'mongodb://localhost:27017/TTP' },
  level: 'info',
  timestamp: '2022-03-06 00:19:09'
}
{
  message: 'third step',
  level: 'info',
  timestamp: '2022-03-06 00:19:19'
}
{
  message: { removeWebhookSucced: 'done' },
  level: 'info',
  timestamp: '2022-03-06 00:19:20'
}
{
  message: 'delete board done',
  level: 'info',
  timestamp: '2022-03-06 00:19:20'
}
{
  message: 'third step',
  level: 'info',
  timestamp: '2022-03-06 00:21:30'
}
{
  message: { removeWebhookSucced: 'done' },
  level: 'info',
  timestamp: '2022-03-06 00:21:31'
}
{
  message: 'delete board done',
  level: 'info',
  timestamp: '2022-03-06 00:21:31'
}
{
  message: {
    borderData: Promise { <pending> },
    createBoardApi: 'https://api.trello.com/1/boards/?name=test 31&prefs_background=sky&defaultLists=false&key=96b980af38094db6e5767718567af6ce&token=7f44a81ca5f903883e1b3a5720f89b70b8feacd4437d2cb893068b3b93455e5f'
  },
  level: 'info',
  timestamp: '2022-03-06 00:22:19'
}
{
  message: {
    boardData: {
      id: '6223d48bcf3e1e2815777393',
      name: 'test 31',
      desc: '',
      descData: null,
      closed: false,
      idOrganization: '61e87201397f573cb99a0418',
      idEnterprise: null,
      pinned: false,
      url: 'https://trello.com/b/8ZWeVAqu/test-31',
      shortUrl: 'https://trello.com/b/8ZWeVAqu',
      prefs: {
        permissionLevel: 'private',
        hideVotes: false,
        voting: 'disabled',
        comments: 'members',
        invitations: 'members',
        selfJoin: true,
        cardCovers: true,
        isTemplate: false,
        cardAging: 'regular',
        calendarFeedEnabled: false,
        hiddenPluginBoardButtons: [],
        background: 'sky',
        backgroundColor: '#00AECC',
        backgroundImage: null,
        backgroundImageScaled: null,
        backgroundTile: false,
        backgroundBrightness: 'dark',
        backgroundBottomColor: '#00AECC',
        backgroundTopColor: '#00AECC',
        canBePublic: true,
        canBeEnterprise: true,
        canBeOrg: true,
        canBePrivate: true,
        canInvite: true
      },
      labelNames: {
        green: '',
        yellow: '',
        orange: '',
        red: '',
        purple: '',
        blue: '',
        sky: '',
        lime: '',
        pink: '',
        black: ''
      },
      limits: {}
    }
  },
  level: 'info',
  timestamp: '2022-03-06 00:22:19'
}
{
  message: {
    data: {
      name: 'test 31',
      color: 'sky',
      boardId: '6223d48bcf3e1e2815777393'
    }
  },
  level: 'info',
  timestamp: '2022-03-06 00:22:19'
}
{
  message: { teamData: '6223d48ea639c02c3d4b061a' },
  level: 'info',
  timestamp: '2022-03-06 00:22:22'
}
{
  message: { teamData: '6223d48e3264a169f0c4e372' },
  level: 'info',
  timestamp: '2022-03-06 00:22:22'
}
{
  message: { removeWebhookSucced: 'done' },
  level: 'info',
  timestamp: '2022-03-06 00:22:22'
}
{
  message: {
    teamListIds: [
      {
        idInTrello: '6223d48ea639c02c3d4b061a',
        idInDB: '61eac1ea6b95c7f7ed8be309'
      },
      {
        idInTrello: '6223d48e3264a169f0c4e372',
        idInDB: '61eab832b41398d86474d4ac'
      }
    ]
  },
  level: 'info',
  timestamp: '2022-03-06 00:22:22'
}
{
  message: {
    updatedbDepartmentError: {
      _id: new ObjectId("6223d48b6f6795400cafe575"),
      defaultListId: '6223d48fe6f8fc555dc850b6',
      sharedListID: '6223d48d91121686a93cbe00',
      doneListId: '6223d48cb1e6ec43628ae72d',
      reviewListId: '6223d48e97b56d5eac3fe1fb',
      notClearListId: '6223d490788e0e31ae810da3',
      canceldListId: '6223d4914ef31345ef6166d7',
      teamsId: [
        {
          idInTrello: '6223d48ea639c02c3d4b061a',
          idInDB: '61eac1ea6b95c7f7ed8be309'
        },
        {
          idInTrello: '6223d48e3264a169f0c4e372',
          idInDB: '61eab832b41398d86474d4ac'
        }
      ]
    }
  },
  level: 'info',
  timestamp: '2022-03-06 00:22:24'
}
{
  message: { webhookUpdateData: {} },
  level: 'info',
  timestamp: '2022-03-06 00:22:26'
}
{
  message: { webhookUpdateData: {} },
  level: 'info',
  timestamp: '2022-03-06 00:22:26'
}
{
  message: { webhookUpdateData: {} },
  level: 'info',
  timestamp: '2022-03-06 00:22:26'
}
{
  message: { webhookUpdateData: {} },
  level: 'info',
  timestamp: '2022-03-06 00:22:26'
}
{
  message: { webhookUpdateData: {} },
  level: 'info',
  timestamp: '2022-03-06 00:22:26'
}
{
  message: { webhookUpdateData: {} },
  level: 'info',
  timestamp: '2022-03-06 00:22:26'
}
{
  message: { webhookCreateResult: 'webhook done' },
  level: 'info',
  timestamp: '2022-03-06 00:22:27'
}
{
  message: 'third step',
  level: 'info',
  timestamp: '2022-03-06 00:23:14'
}
{
  message: 'delete board done',
  level: 'info',
  timestamp: '2022-03-06 00:23:16'
}
{
  message: { removeWebhookSucced: 'done' },
  level: 'info',
  timestamp: '2022-03-06 00:23:16'
}
{
  message: 'third step',
  level: 'info',
  timestamp: '2022-03-06 00:23:29'
}
{
  message: 'delete board done',
  level: 'info',
  timestamp: '2022-03-06 00:23:30'
}
{
  message: { removeWebhookSucced: 'done' },
  level: 'info',
  timestamp: '2022-03-06 00:23:31'
}
{
  message: 'third step',
  level: 'info',
  timestamp: '2022-03-06 00:25:28'
}
{
  message: { removeWebhookSucced: 'done' },
  level: 'info',
  timestamp: '2022-03-06 00:25:29'
}
{
  message: 'delete board done',
  level: 'info',
  timestamp: '2022-03-06 00:25:29'
}
{
  message: { db: 'mongodb://localhost:27017/TTP' },
  level: 'info',
  timestamp: '2022-03-06 00:26:23'
}
{
  message: 'third step',
  level: 'info',
  timestamp: '2022-03-06 00:26:39'
}
{
  message: {
    removeBoard: 'https://api.trello.com/1//boards/6223d48bcf3e1e2815777393&key=96b980af38094db6e5767718567af6ce&token=7f44a81ca5f903883e1b3a5720f89b70b8feacd4437d2cb893068b3b93455e5f'
  },
  level: 'info',
  timestamp: '2022-03-06 00:26:39'
}
{
  message: 'delete board done',
  level: 'info',
  timestamp: '2022-03-06 00:26:42'
}
{
  message: { removeWebhookSucced: 'done' },
  level: 'info',
  timestamp: '2022-03-06 00:26:42'
}
{
  message: { db: 'mongodb://localhost:27017/TTP' },
  level: 'info',
  timestamp: '2022-03-06 00:27:47'
}
{
  message: 'third step',
  level: 'info',
  timestamp: '2022-03-06 00:28:06'
}
{
  message: {
    removeBoard: 'https://api.trello.com/1/boards/6223d48bcf3e1e2815777393&key=96b980af38094db6e5767718567af6ce&token=7f44a81ca5f903883e1b3a5720f89b70b8feacd4437d2cb893068b3b93455e5f'
  },
  level: 'info',
  timestamp: '2022-03-06 00:28:06'
}
{
  message: 'delete board done',
  level: 'info',
  timestamp: '2022-03-06 00:28:07'
}
{
  message: { removeWebhookSucced: 'done' },
  level: 'info',
  timestamp: '2022-03-06 00:28:07'
}
{
  message: { db: 'mongodb://localhost:27017/TTP' },
  level: 'info',
  timestamp: '2022-03-06 23:58:37'
}
{
  message: {
    borderData: Promise { <pending> },
    createBoardApi: 'https://api.trello.com/1/boards/?name=test 31&prefs_background=sky&defaultLists=false&key=96b980af38094db6e5767718567af6ce&token=7f44a81ca5f903883e1b3a5720f89b70b8feacd4437d2cb893068b3b93455e5f'
  },
  level: 'info',
  timestamp: '2022-03-07 00:00:53'
}
{
  message: {
    boardData: {
      id: '62252103296ae55fc92146cd',
      name: 'test 31',
      desc: '',
      descData: null,
      closed: false,
      idOrganization: '61e87201397f573cb99a0418',
      idEnterprise: null,
      pinned: false,
      url: 'https://trello.com/b/XCvZRV72/test-31',
      shortUrl: 'https://trello.com/b/XCvZRV72',
      prefs: {
        permissionLevel: 'private',
        hideVotes: false,
        voting: 'disabled',
        comments: 'members',
        invitations: 'members',
        selfJoin: true,
        cardCovers: true,
        isTemplate: false,
        cardAging: 'regular',
        calendarFeedEnabled: false,
        hiddenPluginBoardButtons: [],
        background: 'sky',
        backgroundColor: '#00AECC',
        backgroundImage: null,
        backgroundImageScaled: null,
        backgroundTile: false,
        backgroundBrightness: 'dark',
        backgroundBottomColor: '#00AECC',
        backgroundTopColor: '#00AECC',
        canBePublic: true,
        canBeEnterprise: true,
        canBeOrg: true,
        canBePrivate: true,
        canInvite: true
      },
      labelNames: {
        green: '',
        yellow: '',
        orange: '',
        red: '',
        purple: '',
        blue: '',
        sky: '',
        lime: '',
        pink: '',
        black: ''
      },
      limits: {}
    }
  },
  level: 'info',
  timestamp: '2022-03-07 00:00:53'
}
{
  message: {
    data: {
      name: 'test 31',
      color: 'sky',
      boardId: '62252103296ae55fc92146cd'
    }
  },
  level: 'info',
  timestamp: '2022-03-07 00:00:53'
}
{
  message: { teamData: '6225210603e32241b36fe175' },
  level: 'info',
  timestamp: '2022-03-07 00:00:55'
}
{
  message: { teamData: '622521061c0f304232f108ae' },
  level: 'info',
  timestamp: '2022-03-07 00:00:55'
}
{
  message: { removeWebhookSucced: 'done' },
  level: 'info',
  timestamp: '2022-03-07 00:00:55'
}
{
  message: {
    teamListIds: [
      {
        idInTrello: '6225210603e32241b36fe175',
        idInDB: '61eab832b41398d86474d4ac'
      },
      {
        idInTrello: '622521061c0f304232f108ae',
        idInDB: '61eac1ea6b95c7f7ed8be309'
      }
    ]
  },
  level: 'info',
  timestamp: '2022-03-07 00:00:55'
}
{
  message: {
    updatedbDepartmentError: {
      _id: new ObjectId("62252105cfb3133da968d608"),
      defaultListId: '62252107155044643ad1469e',
      sharedListID: '622521053acb0e8e059f9545',
      doneListId: '62252104e85de950ef358d47',
      reviewListId: '62252106fbe16a3d5e6ec94b',
      notClearListId: '62252107ba6ed784dd115563',
      canceldListId: '62252108ee29d55ea0b90b76',
      teamsId: [
        {
          idInTrello: '6225210603e32241b36fe175',
          idInDB: '61eab832b41398d86474d4ac'
        },
        {
          idInTrello: '622521061c0f304232f108ae',
          idInDB: '61eac1ea6b95c7f7ed8be309'
        }
      ]
    }
  },
  level: 'info',
  timestamp: '2022-03-07 00:00:57'
}
{
  message: { webhookCreateResult: 'webhook done' },
  level: 'info',
  timestamp: '2022-03-07 00:00:59'
}
{
  message: {
    borderData: Promise { <pending> },
    createBoardApi: 'https://api.trello.com/1/boards/?name=test 32&prefs_background=pink&defaultLists=false&key=96b980af38094db6e5767718567af6ce&token=7f44a81ca5f903883e1b3a5720f89b70b8feacd4437d2cb893068b3b93455e5f'
  },
  level: 'info',
  timestamp: '2022-03-07 00:03:00'
}
{
  message: {
    boardData: {
      id: '6225218381a0ee6a0f856b6d',
      name: 'test 32',
      desc: '',
      descData: null,
      closed: false,
      idOrganization: '61e87201397f573cb99a0418',
      idEnterprise: null,
      pinned: false,
      url: 'https://trello.com/b/HcecjsG2/test-32',
      shortUrl: 'https://trello.com/b/HcecjsG2',
      prefs: {
        permissionLevel: 'private',
        hideVotes: false,
        voting: 'disabled',
        comments: 'members',
        invitations: 'members',
        selfJoin: true,
        cardCovers: true,
        isTemplate: false,
        cardAging: 'regular',
        calendarFeedEnabled: false,
        hiddenPluginBoardButtons: [],
        background: 'pink',
        backgroundColor: '#CD5A91',
        backgroundImage: null,
        backgroundImageScaled: null,
        backgroundTile: false,
        backgroundBrightness: 'dark',
        backgroundBottomColor: '#CD5A91',
        backgroundTopColor: '#CD5A91',
        canBePublic: true,
        canBeEnterprise: true,
        canBeOrg: true,
        canBePrivate: true,
        canInvite: true
      },
      labelNames: {
        green: '',
        yellow: '',
        orange: '',
        red: '',
        purple: '',
        blue: '',
        sky: '',
        lime: '',
        pink: '',
        black: ''
      },
      limits: {}
    }
  },
  level: 'info',
  timestamp: '2022-03-07 00:03:00'
}
{
  message: {
    data: {
      name: 'test 32',
      color: 'pink',
      boardId: '6225218381a0ee6a0f856b6d'
    }
  },
  level: 'info',
  timestamp: '2022-03-07 00:03:00'
}
{
  message: { teamData: '622521876028ff41548d1e5c' },
  level: 'info',
  timestamp: '2022-03-07 00:03:04'
}
{
  message: { teamData: '622521879058227d84a8e43e' },
  level: 'info',
  timestamp: '2022-03-07 00:03:04'
}
{
  message: { removeWebhookSucced: 'done' },
  level: 'info',
  timestamp: '2022-03-07 00:03:04'
}
{
  message: {
    teamListIds: [
      {
        idInTrello: '622521876028ff41548d1e5c',
        idInDB: '61eab832b41398d86474d4ac'
      },
      {
        idInTrello: '622521879058227d84a8e43e',
        idInDB: '61eac1ea6b95c7f7ed8be309'
      }
    ]
  },
  level: 'info',
  timestamp: '2022-03-07 00:03:05'
}
{
  message: {
    updatedbDepartmentError: {
      _id: new ObjectId("62252184cfb3133da968d60f"),
      defaultListId: '62252188055cb3873cd8a36d',
      sharedListID: '6225218586d79e8131fe0f51',
      doneListId: '622521843b737845e3fc00be',
      reviewListId: '622521862d2a6c0d81f7e9c3',
      notClearListId: '62252189c629bc121f1a7ac6',
      canceldListId: '6225218a1c14ca50e9ed2303',
      teamsId: [
        {
          idInTrello: '622521876028ff41548d1e5c',
          idInDB: '61eab832b41398d86474d4ac'
        },
        {
          idInTrello: '622521879058227d84a8e43e',
          idInDB: '61eac1ea6b95c7f7ed8be309'
        }
      ]
    }
  },
  level: 'info',
  timestamp: '2022-03-07 00:03:07'
}
{
  message: { webhookCreateResult: 'webhook done' },
  level: 'info',
  timestamp: '2022-03-07 00:03:09'
}
{
  message: { db: 'mongodb://localhost:27017/TTP' },
  level: 'info',
  timestamp: '2022-03-07 00:04:39'
}
{
  message: { db: 'mongodb://localhost:27017/TTP' },
  level: 'info',
  timestamp: '2022-03-07 00:12:02'
}
{
  message: { db: 'mongodb://localhost:27017/TTP' },
  level: 'info',
  timestamp: '2022-03-07 00:13:30'
}
{
  message: { db: 'mongodb://localhost:27017/TTP' },
  level: 'info',
  timestamp: '2022-03-07 00:15:36'
}
{
  message: {
    handleDeletDepartmentDataError: TypeError: logger_1.default.inf0 is not a function
        at E:\trello-project\TTP-Back\src\lib\presentation\department\department.ts:48:14
        at Generator.next (<anonymous>)
        at E:\trello-project\TTP-Back\src\lib\presentation\department\department.ts:8:71
        at new Promise (<anonymous>)
        at __awaiter (E:\trello-project\TTP-Back\src\lib\presentation\department\department.ts:4:12)
        at handleDeleteDepartment (E:\trello-project\TTP-Back\src\lib\presentation\department\department.ts:70:16)
        at Layer.handle [as handle_request] (E:\trello-project\TTP-Back\node_modules\express\lib\router\layer.js:95:5)
        at next (E:\trello-project\TTP-Back\node_modules\express\lib\router\route.js:137:13)
        at Route.dispatch (E:\trello-project\TTP-Back\node_modules\express\lib\router\route.js:112:3)
        at Layer.handle [as handle_request] (E:\trello-project\TTP-Back\node_modules\express\lib\router\layer.js:95:5)
  },
  level: 'error',
  timestamp: '2022-03-07 00:15:45'
}
{
  message: { db: 'mongodb://localhost:27017/TTP' },
  level: 'info',
  timestamp: '2022-03-07 00:16:55'
}
{
  message: {
    body: {
      _id: '62252105cfb3133da968d608',
      boardId: '62252103296ae55fc92146cd',
      listTrelloIds: [
        '6225210603e32241b36fe175',
        '622521061c0f304232f108ae',
        '62252108ee29d55ea0b90b76',
        '62252107155044643ad1469e',
        '62252104e85de950ef358d47',
        '62252107ba6ed784dd115563',
        '62252106fbe16a3d5e6ec94b',
        '622521053acb0e8e059f9545'
      ],
      mainBoard: false
    },
    check: true
  },
  level: 'info',
  timestamp: '2022-03-07 00:17:04'
}
{
  message: { db: 'mongodb://localhost:27017/TTP' },
  level: 'info',
  timestamp: '2022-03-07 00:20:18'
}
{
  message: {
    body: {
      _id: '62252105cfb3133da968d608',
      boardId: '62252103296ae55fc92146cd',
      listTrelloIds: [
        '6225210603e32241b36fe175',
        '622521061c0f304232f108ae',
        '62252108ee29d55ea0b90b76',
        '62252107155044643ad1469e',
        '62252104e85de950ef358d47',
        '62252107ba6ed784dd115563',
        '62252106fbe16a3d5e6ec94b',
        '622521053acb0e8e059f9545'
      ],
      mainBoard: false
    },
    check: false,
    check2: false,
    check3: true,
    check4: false
  },
  level: 'info',
  timestamp: '2022-03-07 00:20:38'
}
{
  message: { db: 'mongodb://localhost:27017/TTP' },
  level: 'info',
  timestamp: '2022-03-07 00:21:52'
}
{
  message: {
    body: {
      _id: '62252105cfb3133da968d608',
      boardId: '62252103296ae55fc92146cd',
      listTrelloIds: [
        '6225210603e32241b36fe175',
        '622521061c0f304232f108ae',
        '62252108ee29d55ea0b90b76',
        '62252107155044643ad1469e',
        '62252104e85de950ef358d47',
        '62252107ba6ed784dd115563',
        '62252106fbe16a3d5e6ec94b',
        '622521053acb0e8e059f9545'
      ],
      mainBoard: false
    },
    check: false,
    check2: false,
    check3: false,
    check4: false
  },
  level: 'info',
  timestamp: '2022-03-07 00:22:01'
}
{
  message: 'delete board done',
  level: 'info',
  timestamp: '2022-03-07 00:22:03'
}
{
  message: {
    department: {
      _id: new ObjectId("62252105cfb3133da968d608"),
      name: 'test 31',
      boardId: '62252103296ae55fc92146cd',
      color: 'sky',
      mainBoard: false,
      teamsId: [
        {
          idInTrello: '6225210603e32241b36fe175',
          idInDB: new ObjectId("61eab832b41398d86474d4ac"),
          _id: new ObjectId("62252109cfb3133da968d60b")
        },
        {
          idInTrello: '622521061c0f304232f108ae',
          idInDB: new ObjectId("61eac1ea6b95c7f7ed8be309"),
          _id: new ObjectId("62252109cfb3133da968d60c")
        }
      ],
      createdAt: 2022-03-06T21:00:53.218Z,
      updatedAt: 2022-03-06T21:00:57.867Z,
      __v: 0,
      canceldListId: '62252108ee29d55ea0b90b76',
      defaultListId: '62252107155044643ad1469e',
      doneListId: '62252104e85de950ef358d47',
      notClearListId: '62252107ba6ed784dd115563',
      reviewListId: '62252106fbe16a3d5e6ec94b',
      sharedListID: '622521053acb0e8e059f9545'
    }
  },
  level: 'info',
  timestamp: '2022-03-07 00:22:03'
}
{
  message: { db: 'mongodb://localhost:27017/TTP' },
  level: 'info',
  timestamp: '2022-02-26 11:02:58'
}
{
  message: { db: 'mongodb://localhost:27017/TTP' },
  level: 'info',
  timestamp: '2022-02-26 11:13:06'
}
{
  message: { db: 'mongodb://localhost:27017/TTP' },
  level: 'info',
  timestamp: '2022-02-26 11:52:10'
}
{
  message: { db: 'mongodb://localhost:27017/TTP' },
  level: 'info',
  timestamp: '2022-02-26 11:52:20'
}
{
  message: { db: 'mongodb://localhost:27017/TTP' },
  level: 'info',
  timestamp: '2022-02-26 13:04:52'
}
{
  message: { db: 'mongodb://localhost:27017/TTP' },
  level: 'info',
  timestamp: '2022-02-26 13:04:59'
}
{
  message: { db: 'mongodb://localhost:27017/TTP' },
  level: 'info',
  timestamp: '2022-02-26 13:13:32'
}
{
  message: { db: 'mongodb://localhost:27017/TTP' },
  level: 'info',
  timestamp: '2022-02-26 13:20:37'
}
{
  message: { db: 'mongodb://localhost:27017/TTP' },
  level: 'info',
  timestamp: '2022-02-26 13:21:13'
}
{
  message: { db: 'mongodb://localhost:27017/TTP' },
  level: 'info',
  timestamp: '2022-02-26 13:21:48'
}
{
  message: { db: 'mongodb://localhost:27017/TTP' },
  level: 'info',
  timestamp: '2022-02-26 13:23:34'
}
{
  message: { db: 'mongodb://localhost:27017/TTP' },
  level: 'info',
  timestamp: '2022-02-26 13:23:54'
}
{
  message: { db: 'mongodb://localhost:27017/TTP' },
  level: 'info',
  timestamp: '2022-02-26 13:27:28'
}
{
  message: { db: 'mongodb://localhost:27017/TTP' },
  level: 'info',
  timestamp: '2022-02-26 14:06:17'
}
{
  message: { db: 'mongodb://localhost:27017/TTP' },
  level: 'info',
  timestamp: '2022-02-26 14:06:45'
}
{
  message: { db: 'mongodb://localhost:27017/TTP' },
  level: 'info',
  timestamp: '2022-02-26 14:16:27'
}
{
  message: { db: 'mongodb://localhost:27017/TTP' },
  level: 'info',
  timestamp: '2022-02-26 14:19:23'
}
{
  message: { db: 'mongodb://localhost:27017/TTP' },
  level: 'info',
  timestamp: '2022-02-26 14:19:44'
}
{
  message: { db: 'mongodb://localhost:27017/TTP' },
  level: 'info',
  timestamp: '2022-02-26 14:21:09'
}
{
  message: { db: 'mongodb://localhost:27017/TTP' },
  level: 'info',
  timestamp: '2022-02-26 19:11:10'
}
{
  message: { db: 'mongodb://localhost:27017/TTP' },
  level: 'info',
  timestamp: '2022-02-26 19:14:54'
}
{
  message: { db: 'mongodb://localhost:27017/TTP' },
  level: 'info',
  timestamp: '2022-02-26 19:22:42'
}
{
  message: { db: 'mongodb://localhost:27017/TTP' },
  level: 'info',
  timestamp: '2022-02-26 19:24:18'
}
{
  message: { db: 'mongodb://localhost:27017/TTP' },
  level: 'info',
  timestamp: '2022-02-26 19:24:48'
}
{
  message: { db: 'mongodb://localhost:27017/TTP' },
  level: 'info',
  timestamp: '2022-02-26 19:24:57'
}
{
  message: { db: 'mongodb://localhost:27017/TTP' },
  level: 'info',
  timestamp: '2022-02-26 19:29:50'
}
{
  message: { db: 'mongodb://localhost:27017/TTP' },
  level: 'info',
  timestamp: '2022-02-26 19:31:47'
}
{
  message: { db: 'mongodb://localhost:27017/TTP' },
  level: 'info',
  timestamp: '2022-02-26 19:35:53'
}
{
  message: { db: 'mongodb://localhost:27017/TTP' },
  level: 'info',
  timestamp: '2022-02-26 19:37:02'
}
{
  message: { db: 'mongodb://localhost:27017/TTP' },
  level: 'info',
  timestamp: '2022-02-26 19:38:40'
}
{
  message: {
    handleCreateCategoryErrors: TypeError: Cannot read property 'length' of undefined
        at /Users/saudalmutawa/TTP-BACK/TTP-Back/src/lib/presentation/category/category.ts:18:25
        at Generator.next (<anonymous>)
        at /Users/saudalmutawa/TTP-BACK/TTP-Back/src/lib/presentation/category/category.ts:8:71
        at new Promise (<anonymous>)
        at __awaiter (/Users/saudalmutawa/TTP-BACK/TTP-Back/src/lib/presentation/category/category.ts:4:12)
        at handleCreateCategoryAndSubcategory (/Users/saudalmutawa/TTP-BACK/TTP-Back/src/lib/presentation/category/category.ts:24:16)
        at Layer.handle [as handle_request] (/Users/saudalmutawa/TTP-BACK/TTP-Back/node_modules/express/lib/router/layer.js:95:5)
        at next (/Users/saudalmutawa/TTP-BACK/TTP-Back/node_modules/express/lib/router/route.js:137:13)
        at Route.dispatch (/Users/saudalmutawa/TTP-BACK/TTP-Back/node_modules/express/lib/router/route.js:112:3)
        at Layer.handle [as handle_request] (/Users/saudalmutawa/TTP-BACK/TTP-Back/node_modules/express/lib/router/layer.js:95:5)
  },
  level: 'error',
  timestamp: '2022-02-26 19:38:46'
}
{
  message: { db: 'mongodb://localhost:27017/TTP' },
  level: 'info',
  timestamp: '2022-02-26 19:39:27'
}
{
  message: {
    createCategoryDBError: MongooseError: Operation `categories.insertOne()` buffering timed out after 10000ms
        at Timeout.<anonymous> (/Users/saudalmutawa/TTP-BACK/TTP-Back/node_modules/mongoose/lib/drivers/node-mongodb-native/collection.js:151:23)
        at listOnTimeout (internal/timers.js:557:17)
        at processTimers (internal/timers.js:500:7)
  },
  level: 'error',
  timestamp: '2022-02-26 19:39:45'
}
{
  message: { db: 'mongodb://localhost:27017/TTP' },
  level: 'info',
  timestamp: '2022-02-26 19:39:50'
}
{
  message: { db: 'mongodb://localhost:27017/TTP' },
  level: 'info',
  timestamp: '2022-02-26 19:40:24'
}
{
  message: {
    createCategoryDBError: MongooseError: Operation `categories.insertOne()` buffering timed out after 10000ms
        at Timeout.<anonymous> (/Users/saudalmutawa/TTP-BACK/TTP-Back/node_modules/mongoose/lib/drivers/node-mongodb-native/collection.js:151:23)
        at listOnTimeout (internal/timers.js:557:17)
        at processTimers (internal/timers.js:500:7)
  },
  level: 'error',
  timestamp: '2022-02-26 19:40:37'
}
{
  message: { db: 'mongodb://localhost:27017/TTP' },
  level: 'info',
  timestamp: '2022-02-26 19:41:55'
}
{
  message: {
    createCategoryDBError: MongooseError: Operation `categories.insertOne()` buffering timed out after 10000ms
        at Timeout.<anonymous> (/Users/saudalmutawa/TTP-BACK/TTP-Back/node_modules/mongoose/lib/drivers/node-mongodb-native/collection.js:151:23)
        at listOnTimeout (internal/timers.js:557:17)
        at processTimers (internal/timers.js:500:7)
  },
  level: 'error',
  timestamp: '2022-02-26 19:42:13'
}
{
  message: { db: 'mongodb://localhost:27017/TTP' },
  level: 'info',
  timestamp: '2022-02-26 19:48:05'
}
{
  message: { db: 'mongodb://localhost:27017/TTP' },
  level: 'info',
  timestamp: '2022-02-26 19:48:48'
}
{
  message: {
    createSubcategoryDBError: MongooseError: Operation `subcategories.insertOne()` buffering timed out after 10000ms
        at Timeout.<anonymous> (/Users/saudalmutawa/TTP-BACK/TTP-Back/node_modules/mongoose/lib/drivers/node-mongodb-native/collection.js:151:23)
        at listOnTimeout (internal/timers.js:557:17)
        at processTimers (internal/timers.js:500:7)
  },
  level: 'error',
  timestamp: '2022-02-26 19:49:07'
}
{
  message: {
    createCategoryDBError: MongooseError: Operation `categories.insertOne()` buffering timed out after 10000ms
        at Timeout.<anonymous> (/Users/saudalmutawa/TTP-BACK/TTP-Back/node_modules/mongoose/lib/drivers/node-mongodb-native/collection.js:151:23)
        at listOnTimeout (internal/timers.js:557:17)
        at processTimers (internal/timers.js:500:7)
  },
  level: 'error',
  timestamp: '2022-02-26 19:49:07'
}
{
  message: { db: 'mongodb://localhost:27017/TTP' },
  level: 'info',
  timestamp: '2022-02-26 20:02:35'
}
{
  message: { db: 'mongodb://localhost:27017/TTP' },
  level: 'info',
  timestamp: '2022-02-26 20:03:17'
}
{
  message: { db: 'mongodb://localhost:27017/TTP' },
  level: 'info',
  timestamp: '2022-02-26 20:04:05'
}
{
  message: { db: 'mongodb://localhost:27017/TTP' },
  level: 'info',
  timestamp: '2022-02-26 20:10:43'
}
{
  message: { db: 'mongodb://localhost:27017/TTP' },
  level: 'info',
  timestamp: '2022-02-26 20:11:51'
}
{
  message: { db: 'mongodb://localhost:27017/TTP' },
  level: 'info',
  timestamp: '2022-02-26 20:13:39'
}
{
  message: { db: 'mongodb://localhost:27017/TTP' },
  level: 'info',
  timestamp: '2022-02-26 20:40:56'
}
{
  message: { db: 'mongodb://localhost:27017/TTP' },
  level: 'info',
  timestamp: '2022-02-26 20:41:32'
}
{
  message: {
    addNewUserError: Error: data must be a string or Buffer and salt must either be a salt string or a number of rounds
        at Object.hash (/Users/saudalmutawa/TTP-BACK/TTP-Back/node_modules/bcrypt/bcrypt.js:144:17)
        at /Users/saudalmutawa/TTP-BACK/TTP-Back/node_modules/bcrypt/promises.js:29:12
        at new Promise (<anonymous>)
        at Object.module.exports.promise (/Users/saudalmutawa/TTP-BACK/TTP-Back/node_modules/bcrypt/promises.js:20:12)
        at Object.hash (/Users/saudalmutawa/TTP-BACK/TTP-Back/node_modules/bcrypt/bcrypt.js:133:25)
        at /Users/saudalmutawa/TTP-BACK/TTP-Back/src/lib/services/auth/auth.ts:15:36
        at Generator.next (<anonymous>)
        at fulfilled (/Users/saudalmutawa/TTP-BACK/TTP-Back/src/lib/services/auth/auth.ts:5:58)
  },
  level: 'error',
  timestamp: '2022-02-26 21:47:27'
}
{
  message: { db: 'mongodb://localhost:27017/TTP' },
  level: 'info',
  timestamp: '2022-02-27 07:34:51'
}
{
  message: { db: 'mongodb://localhost:27017/TTP' },
  level: 'info',
  timestamp: '2022-02-27 07:35:14'
}
{
  message: { db: 'mongodb://localhost:27017/TTP' },
  level: 'info',
  timestamp: '2022-02-27 07:39:52'
}
{
  message: { db: 'mongodb://localhost:27017/TTP' },
  level: 'info',
  timestamp: '2022-02-27 07:47:07'
}
{
  message: { db: 'mongodb://localhost:27017/TTP' },
  level: 'info',
  timestamp: '2022-02-27 07:51:04'
}
{
  message: { db: 'mongodb://localhost:27017/TTP' },
  level: 'info',
  timestamp: '2022-02-27 07:53:06'
}
{
  message: { db: 'mongodb://localhost:27017/TTP' },
  level: 'info',
  timestamp: '2022-02-27 07:57:19'
}
{
  message: { db: 'mongodb://localhost:27017/TTP' },
  level: 'info',
  timestamp: '2022-02-27 09:58:14'
}
{
  message: { db: 'mongodb://localhost:27017/TTP' },
  level: 'info',
  timestamp: '2022-02-27 09:59:53'
}
{
  message: {
    createCategoryDBError: ObjectParameterError: Parameter "obj" to Document() must be an object, got GTEST
        at model.Document (/Users/saudalmutawa/TTP-BACK/TTP-Back/node_modules/mongoose/lib/document.js:105:11)
        at model.Model (/Users/saudalmutawa/TTP-BACK/TTP-Back/node_modules/mongoose/lib/model.js:114:12)
        at new model (/Users/saudalmutawa/TTP-BACK/TTP-Back/node_modules/mongoose/lib/model.js:4819:15)
        at Function.<anonymous> (/Users/saudalmutawa/TTP-BACK/TTP-Back/src/lib/dbCalls/category/category.ts:19:32)
        at Generator.next (<anonymous>)
        at /Users/saudalmutawa/TTP-BACK/TTP-Back/src/lib/dbCalls/category/category.ts:8:71
        at new Promise (<anonymous>)
        at __awaiter (/Users/saudalmutawa/TTP-BACK/TTP-Back/src/lib/dbCalls/category/category.ts:4:12)
        at Function.__createCategory (/Users/saudalmutawa/TTP-BACK/TTP-Back/src/lib/dbCalls/category/category.ts:35:16)
        at Function.<anonymous> (/Users/saudalmutawa/TTP-BACK/TTP-Back/src/lib/dbCalls/category/category.ts:9:29)
  },
  level: 'error',
  timestamp: '2022-02-27 10:00:02'
}
{
  message: {
    handleCreateCategoryErrors: TypeError: Cannot read property '_id' of undefined
        at /Users/saudalmutawa/TTP-BACK/TTP-Back/src/lib/presentation/category/category.ts:14:41
        at Generator.next (<anonymous>)
        at fulfilled (/Users/saudalmutawa/TTP-BACK/TTP-Back/src/lib/presentation/category/category.ts:5:58)
        at processTicksAndRejections (internal/process/task_queues.js:95:5)
  },
  level: 'error',
  timestamp: '2022-02-27 10:00:02'
}
{
  message: {
    createCategoryDBError: ObjectParameterError: Parameter "obj" to Document() must be an object, got JSJ
        at model.Document (/Users/saudalmutawa/TTP-BACK/TTP-Back/node_modules/mongoose/lib/document.js:105:11)
        at model.Model (/Users/saudalmutawa/TTP-BACK/TTP-Back/node_modules/mongoose/lib/model.js:114:12)
        at new model (/Users/saudalmutawa/TTP-BACK/TTP-Back/node_modules/mongoose/lib/model.js:4819:15)
        at Function.<anonymous> (/Users/saudalmutawa/TTP-BACK/TTP-Back/src/lib/dbCalls/category/category.ts:19:32)
        at Generator.next (<anonymous>)
        at /Users/saudalmutawa/TTP-BACK/TTP-Back/src/lib/dbCalls/category/category.ts:8:71
        at new Promise (<anonymous>)
        at __awaiter (/Users/saudalmutawa/TTP-BACK/TTP-Back/src/lib/dbCalls/category/category.ts:4:12)
        at Function.__createCategory (/Users/saudalmutawa/TTP-BACK/TTP-Back/src/lib/dbCalls/category/category.ts:35:16)
        at Function.<anonymous> (/Users/saudalmutawa/TTP-BACK/TTP-Back/src/lib/dbCalls/category/category.ts:9:29)
  },
  level: 'error',
  timestamp: '2022-02-27 10:01:26'
}
{
  message: {
    handleCreateCategoryErrors: TypeError: Cannot read property '_id' of undefined
        at /Users/saudalmutawa/TTP-BACK/TTP-Back/src/lib/presentation/category/category.ts:14:41
        at Generator.next (<anonymous>)
        at fulfilled (/Users/saudalmutawa/TTP-BACK/TTP-Back/src/lib/presentation/category/category.ts:5:58)
        at processTicksAndRejections (internal/process/task_queues.js:95:5)
  },
  level: 'error',
  timestamp: '2022-02-27 10:01:26'
}
{
  message: { db: 'mongodb://localhost:27017/TTP' },
  level: 'info',
  timestamp: '2022-02-27 10:02:02'
}
{
  message: {
    createCategoryDBError: ObjectParameterError: Parameter "obj" to Document() must be an object, got JSJ
        at model.Document (/Users/saudalmutawa/TTP-BACK/TTP-Back/node_modules/mongoose/lib/document.js:105:11)
        at model.Model (/Users/saudalmutawa/TTP-BACK/TTP-Back/node_modules/mongoose/lib/model.js:114:12)
        at new model (/Users/saudalmutawa/TTP-BACK/TTP-Back/node_modules/mongoose/lib/model.js:4819:15)
        at Function.<anonymous> (/Users/saudalmutawa/TTP-BACK/TTP-Back/src/lib/dbCalls/category/category.ts:19:32)
        at Generator.next (<anonymous>)
        at /Users/saudalmutawa/TTP-BACK/TTP-Back/src/lib/dbCalls/category/category.ts:8:71
        at new Promise (<anonymous>)
        at __awaiter (/Users/saudalmutawa/TTP-BACK/TTP-Back/src/lib/dbCalls/category/category.ts:4:12)
        at Function.__createCategory (/Users/saudalmutawa/TTP-BACK/TTP-Back/src/lib/dbCalls/category/category.ts:35:16)
        at Function.<anonymous> (/Users/saudalmutawa/TTP-BACK/TTP-Back/src/lib/dbCalls/category/category.ts:9:29)
  },
  level: 'error',
  timestamp: '2022-02-27 10:02:05'
}
{
  message: {
    handleCreateCategoryErrors: TypeError: Cannot read property '_id' of undefined
        at /Users/saudalmutawa/TTP-BACK/TTP-Back/src/lib/presentation/category/category.ts:14:41
        at Generator.next (<anonymous>)
        at fulfilled (/Users/saudalmutawa/TTP-BACK/TTP-Back/src/lib/presentation/category/category.ts:5:58)
        at processTicksAndRejections (internal/process/task_queues.js:95:5)
  },
  level: 'error',
  timestamp: '2022-02-27 10:02:06'
}
{
  message: { db: 'mongodb://localhost:27017/TTP' },
  level: 'info',
  timestamp: '2022-02-27 10:04:02'
}
{
  message: {
    createCategoryDBError: ObjectParameterError: Parameter "obj" to Document() must be an object, got JSJ
        at model.Document (/Users/saudalmutawa/TTP-BACK/TTP-Back/node_modules/mongoose/lib/document.js:105:11)
        at model.Model (/Users/saudalmutawa/TTP-BACK/TTP-Back/node_modules/mongoose/lib/model.js:114:12)
        at new model (/Users/saudalmutawa/TTP-BACK/TTP-Back/node_modules/mongoose/lib/model.js:4819:15)
        at Function.<anonymous> (/Users/saudalmutawa/TTP-BACK/TTP-Back/src/lib/dbCalls/category/category.ts:19:32)
        at Generator.next (<anonymous>)
        at /Users/saudalmutawa/TTP-BACK/TTP-Back/src/lib/dbCalls/category/category.ts:8:71
        at new Promise (<anonymous>)
        at __awaiter (/Users/saudalmutawa/TTP-BACK/TTP-Back/src/lib/dbCalls/category/category.ts:4:12)
        at Function.__createCategory (/Users/saudalmutawa/TTP-BACK/TTP-Back/src/lib/dbCalls/category/category.ts:35:16)
        at Function.<anonymous> (/Users/saudalmutawa/TTP-BACK/TTP-Back/src/lib/dbCalls/category/category.ts:9:29)
  },
  level: 'error',
  timestamp: '2022-02-27 10:04:05'
}
{
  message: {
    handleCreateCategoryErrors: TypeError: Cannot read property '_id' of undefined
        at /Users/saudalmutawa/TTP-BACK/TTP-Back/src/lib/presentation/category/category.ts:14:41
        at Generator.next (<anonymous>)
        at fulfilled (/Users/saudalmutawa/TTP-BACK/TTP-Back/src/lib/presentation/category/category.ts:5:58)
        at processTicksAndRejections (internal/process/task_queues.js:95:5)
  },
  level: 'error',
  timestamp: '2022-02-27 10:04:05'
}
{
  message: { db: 'mongodb://localhost:27017/TTP' },
  level: 'info',
  timestamp: '2022-02-27 10:04:37'
}
{
  message: {
    createCategoryDBError: ObjectParameterError: Parameter "obj" to Document() must be an object, got JSJ
        at model.Document (/Users/saudalmutawa/TTP-BACK/TTP-Back/node_modules/mongoose/lib/document.js:105:11)
        at model.Model (/Users/saudalmutawa/TTP-BACK/TTP-Back/node_modules/mongoose/lib/model.js:114:12)
        at new model (/Users/saudalmutawa/TTP-BACK/TTP-Back/node_modules/mongoose/lib/model.js:4819:15)
        at Function.<anonymous> (/Users/saudalmutawa/TTP-BACK/TTP-Back/src/lib/dbCalls/category/category.ts:19:32)
        at Generator.next (<anonymous>)
        at /Users/saudalmutawa/TTP-BACK/TTP-Back/src/lib/dbCalls/category/category.ts:8:71
        at new Promise (<anonymous>)
        at __awaiter (/Users/saudalmutawa/TTP-BACK/TTP-Back/src/lib/dbCalls/category/category.ts:4:12)
        at Function.__createCategory (/Users/saudalmutawa/TTP-BACK/TTP-Back/src/lib/dbCalls/category/category.ts:35:16)
        at Function.<anonymous> (/Users/saudalmutawa/TTP-BACK/TTP-Back/src/lib/dbCalls/category/category.ts:9:29)
  },
  level: 'error',
  timestamp: '2022-02-27 10:04:42'
}
{
  message: {
    handleCreateCategoryErrors: TypeError: Cannot read property '_id' of undefined
        at /Users/saudalmutawa/TTP-BACK/TTP-Back/src/lib/presentation/category/category.ts:14:41
        at Generator.next (<anonymous>)
        at fulfilled (/Users/saudalmutawa/TTP-BACK/TTP-Back/src/lib/presentation/category/category.ts:5:58)
        at processTicksAndRejections (internal/process/task_queues.js:95:5)
  },
  level: 'error',
  timestamp: '2022-02-27 10:04:42'
}
{
  message: { db: 'mongodb://localhost:27017/TTP' },
  level: 'info',
  timestamp: '2022-02-27 10:04:55'
}
{
  message: { db: 'mongodb://localhost:27017/TTP' },
  level: 'info',
  timestamp: '2022-02-27 10:08:48'
}
{
  message: {
    createCategoryDBError: ObjectParameterError: Parameter "obj" to Document() must be an object, got JSJ
        at model.Document (/Users/saudalmutawa/TTP-BACK/TTP-Back/node_modules/mongoose/lib/document.js:105:11)
        at model.Model (/Users/saudalmutawa/TTP-BACK/TTP-Back/node_modules/mongoose/lib/model.js:114:12)
        at new model (/Users/saudalmutawa/TTP-BACK/TTP-Back/node_modules/mongoose/lib/model.js:4819:15)
        at Function.<anonymous> (/Users/saudalmutawa/TTP-BACK/TTP-Back/src/lib/dbCalls/category/category.ts:19:32)
        at Generator.next (<anonymous>)
        at /Users/saudalmutawa/TTP-BACK/TTP-Back/src/lib/dbCalls/category/category.ts:8:71
        at new Promise (<anonymous>)
        at __awaiter (/Users/saudalmutawa/TTP-BACK/TTP-Back/src/lib/dbCalls/category/category.ts:4:12)
        at Function.__createCategory (/Users/saudalmutawa/TTP-BACK/TTP-Back/src/lib/dbCalls/category/category.ts:35:16)
        at Function.<anonymous> (/Users/saudalmutawa/TTP-BACK/TTP-Back/src/lib/dbCalls/category/category.ts:9:29)
  },
  level: 'error',
  timestamp: '2022-02-27 10:09:02'
}
{
  message: {
    handleCreateCategoryErrors: TypeError: Cannot read property '_id' of undefined
        at /Users/saudalmutawa/TTP-BACK/TTP-Back/src/lib/presentation/category/category.ts:14:41
        at Generator.next (<anonymous>)
        at fulfilled (/Users/saudalmutawa/TTP-BACK/TTP-Back/src/lib/presentation/category/category.ts:5:58)
        at processTicksAndRejections (internal/process/task_queues.js:95:5)
  },
  level: 'error',
  timestamp: '2022-02-27 10:09:02'
}
{
  message: { db: 'mongodb://localhost:27017/TTP' },
  level: 'info',
  timestamp: '2022-02-27 10:09:41'
}
{
  message: { db: 'mongodb://localhost:27017/TTP' },
  level: 'info',
  timestamp: '2022-02-27 10:11:26'
}
{
  message: {
    createCategoryDBError: ObjectParameterError: Parameter "obj" to Document() must be an object, got JSJ
        at model.Document (/Users/saudalmutawa/TTP-BACK/TTP-Back/node_modules/mongoose/lib/document.js:105:11)
        at model.Model (/Users/saudalmutawa/TTP-BACK/TTP-Back/node_modules/mongoose/lib/model.js:114:12)
        at new model (/Users/saudalmutawa/TTP-BACK/TTP-Back/node_modules/mongoose/lib/model.js:4819:15)
        at Function.<anonymous> (/Users/saudalmutawa/TTP-BACK/TTP-Back/src/lib/dbCalls/category/category.ts:19:32)
        at Generator.next (<anonymous>)
        at /Users/saudalmutawa/TTP-BACK/TTP-Back/src/lib/dbCalls/category/category.ts:8:71
        at new Promise (<anonymous>)
        at __awaiter (/Users/saudalmutawa/TTP-BACK/TTP-Back/src/lib/dbCalls/category/category.ts:4:12)
        at Function.__createCategory (/Users/saudalmutawa/TTP-BACK/TTP-Back/src/lib/dbCalls/category/category.ts:35:16)
        at Function.<anonymous> (/Users/saudalmutawa/TTP-BACK/TTP-Back/src/lib/dbCalls/category/category.ts:9:29)
  },
  level: 'error',
  timestamp: '2022-02-27 10:11:30'
}
{
  message: {
    handleCreateCategoryErrors: TypeError: Cannot read property '_id' of undefined
        at /Users/saudalmutawa/TTP-BACK/TTP-Back/src/lib/presentation/category/category.ts:14:41
        at Generator.next (<anonymous>)
        at fulfilled (/Users/saudalmutawa/TTP-BACK/TTP-Back/src/lib/presentation/category/category.ts:5:58)
        at processTicksAndRejections (internal/process/task_queues.js:95:5)
  },
  level: 'error',
  timestamp: '2022-02-27 10:11:30'
}
{
  message: { db: 'mongodb://localhost:27017/TTP' },
  level: 'info',
  timestamp: '2022-02-27 10:11:51'
}
{
  message: {
    createCategoryDBError: ObjectParameterError: Parameter "obj" to Document() must be an object, got JSJ
        at model.Document (/Users/saudalmutawa/TTP-BACK/TTP-Back/node_modules/mongoose/lib/document.js:105:11)
        at model.Model (/Users/saudalmutawa/TTP-BACK/TTP-Back/node_modules/mongoose/lib/model.js:114:12)
        at new model (/Users/saudalmutawa/TTP-BACK/TTP-Back/node_modules/mongoose/lib/model.js:4819:15)
        at Function.<anonymous> (/Users/saudalmutawa/TTP-BACK/TTP-Back/src/lib/dbCalls/category/category.ts:19:32)
        at Generator.next (<anonymous>)
        at /Users/saudalmutawa/TTP-BACK/TTP-Back/src/lib/dbCalls/category/category.ts:8:71
        at new Promise (<anonymous>)
        at __awaiter (/Users/saudalmutawa/TTP-BACK/TTP-Back/src/lib/dbCalls/category/category.ts:4:12)
        at Function.__createCategory (/Users/saudalmutawa/TTP-BACK/TTP-Back/src/lib/dbCalls/category/category.ts:35:16)
        at Function.<anonymous> (/Users/saudalmutawa/TTP-BACK/TTP-Back/src/lib/dbCalls/category/category.ts:9:29)
  },
  level: 'error',
  timestamp: '2022-02-27 10:11:53'
}
{
  message: {
    handleCreateCategoryErrors: TypeError: Cannot read property '_id' of undefined
        at /Users/saudalmutawa/TTP-BACK/TTP-Back/src/lib/presentation/category/category.ts:14:41
        at Generator.next (<anonymous>)
        at fulfilled (/Users/saudalmutawa/TTP-BACK/TTP-Back/src/lib/presentation/category/category.ts:5:58)
        at processTicksAndRejections (internal/process/task_queues.js:95:5)
  },
  level: 'error',
  timestamp: '2022-02-27 10:11:53'
}
{
  message: { db: 'mongodb://localhost:27017/TTP' },
  level: 'info',
  timestamp: '2022-02-27 10:12:47'
}
{
  message: { db: 'mongodb://localhost:27017/TTP' },
  level: 'info',
  timestamp: '2022-02-27 10:12:57'
}
{
  message: { db: 'mongodb://localhost:27017/TTP' },
  level: 'info',
  timestamp: '2022-02-27 10:13:27'
}
{
  message: { db: 'mongodb://localhost:27017/TTP' },
  level: 'info',
  timestamp: '2022-02-27 10:16:48'
}
{
  message: { db: 'mongodb://localhost:27017/TTP' },
  level: 'info',
  timestamp: '2022-02-27 10:17:16'
}
{
  message: { db: 'mongodb://localhost:27017/TTP' },
  level: 'info',
  timestamp: '2022-02-27 10:17:47'
}
{
  message: { db: 'mongodb://localhost:27017/TTP' },
  level: 'info',
  timestamp: '2022-02-27 10:21:57'
}
{
  message: { db: 'mongodb://localhost:27017/TTP' },
  level: 'info',
  timestamp: '2022-02-27 10:22:24'
}
{
  message: { db: 'mongodb://localhost:27017/TTP' },
  level: 'info',
  timestamp: '2022-02-27 10:23:41'
}
{
  message: { db: 'mongodb://localhost:27017/TTP' },
  level: 'info',
  timestamp: '2022-02-27 10:25:16'
}
{
  message: { db: 'mongodb://localhost:27017/TTP' },
  level: 'info',
  timestamp: '2022-02-27 10:25:25'
}
{
  message: { db: 'mongodb://localhost:27017/TTP' },
  level: 'info',
  timestamp: '2022-02-27 10:25:37'
}
{
  message: { db: 'mongodb://localhost:27017/TTP' },
  level: 'info',
  timestamp: '2022-02-27 10:43:24'
}
{
  message: { db: 'mongodb://localhost:27017/TTP' },
  level: 'info',
  timestamp: '2022-02-27 10:45:13'
}
{
  message: { db: 'mongodb://localhost:27017/TTP' },
  level: 'info',
  timestamp: '2022-02-27 10:48:15'
}
{
  message: { db: 'mongodb://localhost:27017/TTP' },
  level: 'info',
  timestamp: '2022-02-27 10:49:45'
}
{
  message: { db: 'mongodb://localhost:27017/TTP' },
  level: 'info',
  timestamp: '2022-02-27 10:49:52'
}
{
  message: { db: 'mongodb://localhost:27017/TTP' },
  level: 'info',
  timestamp: '2022-02-27 10:50:46'
}
{
  message: { db: 'mongodb://localhost:27017/TTP' },
  level: 'info',
  timestamp: '2022-02-27 10:52:58'
}
{
  message: { db: 'mongodb://localhost:27017/TTP' },
  level: 'info',
  timestamp: '2022-02-27 10:53:43'
}
{
  message: {
    createCategoryDBError: ObjectParameterError: Parameter "obj" to Document() must be an object, got JJ
        at model.Document (/Users/saudalmutawa/TTP-BACK/TTP-Back/node_modules/mongoose/lib/document.js:105:11)
        at model.Model (/Users/saudalmutawa/TTP-BACK/TTP-Back/node_modules/mongoose/lib/model.js:114:12)
        at new model (/Users/saudalmutawa/TTP-BACK/TTP-Back/node_modules/mongoose/lib/model.js:4819:15)
        at Function.<anonymous> (/Users/saudalmutawa/TTP-BACK/TTP-Back/src/lib/dbCalls/category/category.ts:19:32)
        at Generator.next (<anonymous>)
        at /Users/saudalmutawa/TTP-BACK/TTP-Back/src/lib/dbCalls/category/category.ts:8:71
        at new Promise (<anonymous>)
        at __awaiter (/Users/saudalmutawa/TTP-BACK/TTP-Back/src/lib/dbCalls/category/category.ts:4:12)
        at Function.__createCategory (/Users/saudalmutawa/TTP-BACK/TTP-Back/src/lib/dbCalls/category/category.ts:35:16)
        at Function.<anonymous> (/Users/saudalmutawa/TTP-BACK/TTP-Back/src/lib/dbCalls/category/category.ts:9:29)
  },
  level: 'error',
  timestamp: '2022-02-27 10:53:51'
}
{
  message: {
    handleCreateCategoryErrors: TypeError: Cannot read property '_id' of undefined
        at /Users/saudalmutawa/TTP-BACK/TTP-Back/src/lib/presentation/category/category.ts:14:41
        at Generator.next (<anonymous>)
        at fulfilled (/Users/saudalmutawa/TTP-BACK/TTP-Back/src/lib/presentation/category/category.ts:5:58)
        at processTicksAndRejections (internal/process/task_queues.js:95:5)
  },
  level: 'error',
  timestamp: '2022-02-27 10:53:51'
}
{
  message: { db: 'mongodb://localhost:27017/TTP' },
  level: 'info',
  timestamp: '2022-02-27 10:56:10'
}
{
  message: { db: 'mongodb://localhost:27017/TTP' },
  level: 'info',
  timestamp: '2022-02-27 10:58:58'
}
{
  message: { db: 'mongodb://localhost:27017/TTP' },
  level: 'info',
  timestamp: '2022-02-27 10:59:10'
}
{
  message: { db: 'mongodb://localhost:27017/TTP' },
  level: 'info',
  timestamp: '2022-02-27 11:00:36'
}
{
  message: { db: 'mongodb://localhost:27017/TTP' },
  level: 'info',
  timestamp: '2022-02-27 11:02:37'
}
{
  message: {
    handleCreateCategoryErrors: TypeError: Cannot create property 'subCategoriesId' on string 'JJ'
        at /Users/saudalmutawa/TTP-BACK/TTP-Back/src/lib/presentation/category/category.ts:13:35
        at Generator.next (<anonymous>)
        at /Users/saudalmutawa/TTP-BACK/TTP-Back/src/lib/presentation/category/category.ts:8:71
        at new Promise (<anonymous>)
        at __awaiter (/Users/saudalmutawa/TTP-BACK/TTP-Back/src/lib/presentation/category/category.ts:4:12)
        at handleCreateCategoryAndSubcategory (/Users/saudalmutawa/TTP-BACK/TTP-Back/src/lib/presentation/category/category.ts:25:16)
        at Layer.handle [as handle_request] (/Users/saudalmutawa/TTP-BACK/TTP-Back/node_modules/express/lib/router/layer.js:95:5)
        at next (/Users/saudalmutawa/TTP-BACK/TTP-Back/node_modules/express/lib/router/route.js:137:13)
        at Route.dispatch (/Users/saudalmutawa/TTP-BACK/TTP-Back/node_modules/express/lib/router/route.js:112:3)
        at Layer.handle [as handle_request] (/Users/saudalmutawa/TTP-BACK/TTP-Back/node_modules/express/lib/router/layer.js:95:5)
  },
  level: 'error',
  timestamp: '2022-02-27 11:02:46'
}
{
  message: { db: 'mongodb://localhost:27017/TTP' },
  level: 'info',
  timestamp: '2022-02-27 11:06:45'
}
{
  message: {
    handleCreateCategoryErrors: TypeError: Cannot create property 'subCategoriesId' on string 'JJ'
        at /Users/saudalmutawa/TTP-BACK/TTP-Back/src/lib/presentation/category/category.ts:13:35
        at Generator.next (<anonymous>)
        at /Users/saudalmutawa/TTP-BACK/TTP-Back/src/lib/presentation/category/category.ts:8:71
        at new Promise (<anonymous>)
        at __awaiter (/Users/saudalmutawa/TTP-BACK/TTP-Back/src/lib/presentation/category/category.ts:4:12)
        at handleCreateCategoryAndSubcategory (/Users/saudalmutawa/TTP-BACK/TTP-Back/src/lib/presentation/category/category.ts:25:16)
        at Layer.handle [as handle_request] (/Users/saudalmutawa/TTP-BACK/TTP-Back/node_modules/express/lib/router/layer.js:95:5)
        at next (/Users/saudalmutawa/TTP-BACK/TTP-Back/node_modules/express/lib/router/route.js:137:13)
        at Route.dispatch (/Users/saudalmutawa/TTP-BACK/TTP-Back/node_modules/express/lib/router/route.js:112:3)
        at Layer.handle [as handle_request] (/Users/saudalmutawa/TTP-BACK/TTP-Back/node_modules/express/lib/router/layer.js:95:5)
  },
  level: 'error',
  timestamp: '2022-02-27 11:06:49'
}
{
  message: { db: 'mongodb://localhost:27017/TTP' },
  level: 'info',
  timestamp: '2022-02-27 11:07:14'
}
{
  message: { db: 'mongodb://localhost:27017/TTP' },
  level: 'info',
  timestamp: '2022-02-27 11:08:33'
}
{
  message: { db: 'mongodb://localhost:27017/TTP' },
  level: 'info',
  timestamp: '2022-02-27 11:09:02'
}
{
  message: { db: 'mongodb://localhost:27017/TTP' },
  level: 'info',
  timestamp: '2022-02-27 11:09:47'
}
{
  message: { db: 'mongodb://localhost:27017/TTP' },
  level: 'info',
  timestamp: '2022-02-27 11:09:59'
}
{
  message: { db: 'mongodb://localhost:27017/TTP' },
  level: 'info',
  timestamp: '2022-02-27 11:20:16'
}
{
  message: { db: 'mongodb://localhost:27017/TTP' },
  level: 'info',
  timestamp: '2022-02-27 11:20:42'
}
{
  message: { db: 'mongodb://localhost:27017/TTP' },
  level: 'info',
  timestamp: '2022-02-27 11:21:31'
}
{
  message: { db: 'mongodb://localhost:27017/TTP' },
  level: 'info',
  timestamp: '2022-02-27 11:23:29'
}
{
  message: { db: 'mongodb://localhost:27017/TTP' },
  level: 'info',
  timestamp: '2022-02-27 11:28:08'
}
{
  message: { db: 'mongodb://localhost:27017/TTP' },
  level: 'info',
  timestamp: '2022-02-27 11:28:23'
}
{
  message: { db: 'mongodb://localhost:27017/TTP' },
  level: 'info',
  timestamp: '2022-02-27 11:28:31'
}
{
  message: { db: 'mongodb://localhost:27017/TTP' },
  level: 'info',
  timestamp: '2022-02-27 11:30:22'
}
{
  message: { db: 'mongodb://localhost:27017/TTP' },
  level: 'info',
  timestamp: '2022-02-27 11:33:18'
}
{
  message: {
    createSubcategoryDBError: MongoServerError: E11000 duplicate key error collection: TTP.subcategories index: subCategory_1 dup key: { subCategory: "sub1" }
        at /Users/saudalmutawa/TTP-BACK/TTP-Back/node_modules/mongoose/node_modules/mongodb/src/operations/insert.ts:75:25
        at /Users/saudalmutawa/TTP-BACK/TTP-Back/node_modules/mongoose/node_modules/mongodb/src/cmap/connection_pool.ts:482:13
        at handleOperationResult (/Users/saudalmutawa/TTP-BACK/TTP-Back/node_modules/mongoose/node_modules/mongodb/src/sdam/server.ts:610:5)
        at MessageStream.messageHandler (/Users/saudalmutawa/TTP-BACK/TTP-Back/node_modules/mongoose/node_modules/mongodb/src/cmap/connection.ts:765:5)
        at MessageStream.emit (events.js:400:28)
        at MessageStream.emit (domain.js:475:12)
        at processIncomingData (/Users/saudalmutawa/TTP-BACK/TTP-Back/node_modules/mongoose/node_modules/mongodb/src/cmap/message_stream.ts:168:12)
        at MessageStream._write (/Users/saudalmutawa/TTP-BACK/TTP-Back/node_modules/mongoose/node_modules/mongodb/src/cmap/message_stream.ts:65:5)
        at writeOrBuffer (internal/streams/writable.js:358:12)
        at MessageStream.Writable.write (internal/streams/writable.js:303:10) {
      index: 0,
      code: 11000,
      keyPattern: { subCategory: 1 },
      keyValue: { subCategory: 'sub1' }
    }
  },
  level: 'error',
  timestamp: '2022-02-27 11:33:54'
}
{
  message: { db: 'mongodb://localhost:27017/TTP' },
  level: 'info',
  timestamp: '2022-02-27 11:36:05'
}
{
  message: { db: 'mongodb://localhost:27017/TTP' },
  level: 'info',
  timestamp: '2022-02-27 11:37:21'
}
{
  message: {
    createCategoryDBError: MongoServerError: E11000 duplicate key error collection: TTP.categories index: category_1 dup key: { category: "Main1" }
        at /Users/saudalmutawa/TTP-BACK/TTP-Back/node_modules/mongoose/node_modules/mongodb/src/operations/insert.ts:75:25
        at /Users/saudalmutawa/TTP-BACK/TTP-Back/node_modules/mongoose/node_modules/mongodb/src/cmap/connection_pool.ts:482:13
        at handleOperationResult (/Users/saudalmutawa/TTP-BACK/TTP-Back/node_modules/mongoose/node_modules/mongodb/src/sdam/server.ts:610:5)
        at MessageStream.messageHandler (/Users/saudalmutawa/TTP-BACK/TTP-Back/node_modules/mongoose/node_modules/mongodb/src/cmap/connection.ts:765:5)
        at MessageStream.emit (events.js:400:28)
        at MessageStream.emit (domain.js:475:12)
        at processIncomingData (/Users/saudalmutawa/TTP-BACK/TTP-Back/node_modules/mongoose/node_modules/mongodb/src/cmap/message_stream.ts:168:12)
        at MessageStream._write (/Users/saudalmutawa/TTP-BACK/TTP-Back/node_modules/mongoose/node_modules/mongodb/src/cmap/message_stream.ts:65:5)
        at writeOrBuffer (internal/streams/writable.js:358:12)
        at MessageStream.Writable.write (internal/streams/writable.js:303:10) {
      index: 0,
      code: 11000,
      keyPattern: { category: 1 },
      keyValue: { category: 'Main1' }
    }
  },
  level: 'error',
  timestamp: '2022-02-27 11:37:25'
}
{
  message: {
    handleCreateCategoryErrors: TypeError: Cannot read property '_id' of undefined
        at /Users/saudalmutawa/TTP-BACK/TTP-Back/src/lib/presentation/category/category.ts:16:41
        at Generator.next (<anonymous>)
        at fulfilled (/Users/saudalmutawa/TTP-BACK/TTP-Back/src/lib/presentation/category/category.ts:5:58)
        at processTicksAndRejections (internal/process/task_queues.js:95:5)
  },
  level: 'error',
  timestamp: '2022-02-27 11:37:25'
}
{
  message: {
    createSubcategoryDBError: MongoServerError: E11000 duplicate key error collection: TTP.subcategories index: subCategory_1 dup key: { subCategory: "sub1" }
        at /Users/saudalmutawa/TTP-BACK/TTP-Back/node_modules/mongoose/node_modules/mongodb/src/operations/insert.ts:75:25
        at /Users/saudalmutawa/TTP-BACK/TTP-Back/node_modules/mongoose/node_modules/mongodb/src/cmap/connection_pool.ts:482:13
        at handleOperationResult (/Users/saudalmutawa/TTP-BACK/TTP-Back/node_modules/mongoose/node_modules/mongodb/src/sdam/server.ts:610:5)
        at MessageStream.messageHandler (/Users/saudalmutawa/TTP-BACK/TTP-Back/node_modules/mongoose/node_modules/mongodb/src/cmap/connection.ts:765:5)
        at MessageStream.emit (events.js:400:28)
        at MessageStream.emit (domain.js:475:12)
        at processIncomingData (/Users/saudalmutawa/TTP-BACK/TTP-Back/node_modules/mongoose/node_modules/mongodb/src/cmap/message_stream.ts:168:12)
        at MessageStream._write (/Users/saudalmutawa/TTP-BACK/TTP-Back/node_modules/mongoose/node_modules/mongodb/src/cmap/message_stream.ts:65:5)
        at writeOrBuffer (internal/streams/writable.js:358:12)
        at MessageStream.Writable.write (internal/streams/writable.js:303:10) {
      index: 0,
      code: 11000,
      keyPattern: { subCategory: 1 },
      keyValue: { subCategory: 'sub1' }
    }
  },
  level: 'error',
  timestamp: '2022-02-27 11:38:27'
}
{
  message: {
    createSubcategoryDBError: MongoServerError: E11000 duplicate key error collection: TTP.subcategories index: subCategory_1 dup key: { subCategory: "sub1" }
        at /Users/saudalmutawa/TTP-BACK/TTP-Back/node_modules/mongoose/node_modules/mongodb/src/operations/insert.ts:75:25
        at /Users/saudalmutawa/TTP-BACK/TTP-Back/node_modules/mongoose/node_modules/mongodb/src/cmap/connection_pool.ts:482:13
        at handleOperationResult (/Users/saudalmutawa/TTP-BACK/TTP-Back/node_modules/mongoose/node_modules/mongodb/src/sdam/server.ts:610:5)
        at MessageStream.messageHandler (/Users/saudalmutawa/TTP-BACK/TTP-Back/node_modules/mongoose/node_modules/mongodb/src/cmap/connection.ts:765:5)
        at MessageStream.emit (events.js:400:28)
        at MessageStream.emit (domain.js:475:12)
        at processIncomingData (/Users/saudalmutawa/TTP-BACK/TTP-Back/node_modules/mongoose/node_modules/mongodb/src/cmap/message_stream.ts:168:12)
        at MessageStream._write (/Users/saudalmutawa/TTP-BACK/TTP-Back/node_modules/mongoose/node_modules/mongodb/src/cmap/message_stream.ts:65:5)
        at writeOrBuffer (internal/streams/writable.js:358:12)
        at MessageStream.Writable.write (internal/streams/writable.js:303:10) {
      index: 0,
      code: 11000,
      keyPattern: { subCategory: 1 },
      keyValue: { subCategory: 'sub1' }
    }
  },
  level: 'error',
  timestamp: '2022-02-27 11:38:27'
}
{
  message: { db: 'mongodb://localhost:27017/TTP' },
  level: 'info',
  timestamp: '2022-02-27 11:38:34'
}
{
  message: {
    createCategoryDBError: MongoServerError: E11000 duplicate key error collection: TTP.categories index: category_1 dup key: { category: "Main12" }
        at /Users/saudalmutawa/TTP-BACK/TTP-Back/node_modules/mongoose/node_modules/mongodb/src/operations/insert.ts:75:25
        at /Users/saudalmutawa/TTP-BACK/TTP-Back/node_modules/mongoose/node_modules/mongodb/src/cmap/connection_pool.ts:482:13
        at handleOperationResult (/Users/saudalmutawa/TTP-BACK/TTP-Back/node_modules/mongoose/node_modules/mongodb/src/sdam/server.ts:610:5)
        at MessageStream.messageHandler (/Users/saudalmutawa/TTP-BACK/TTP-Back/node_modules/mongoose/node_modules/mongodb/src/cmap/connection.ts:765:5)
        at MessageStream.emit (events.js:400:28)
        at MessageStream.emit (domain.js:475:12)
        at processIncomingData (/Users/saudalmutawa/TTP-BACK/TTP-Back/node_modules/mongoose/node_modules/mongodb/src/cmap/message_stream.ts:168:12)
        at MessageStream._write (/Users/saudalmutawa/TTP-BACK/TTP-Back/node_modules/mongoose/node_modules/mongodb/src/cmap/message_stream.ts:65:5)
        at writeOrBuffer (internal/streams/writable.js:358:12)
        at MessageStream.Writable.write (internal/streams/writable.js:303:10) {
      index: 0,
      code: 11000,
      keyPattern: { category: 1 },
      keyValue: { category: 'Main12' }
    }
  },
  level: 'error',
  timestamp: '2022-02-27 11:43:18'
}
{
  message: {
    handleCreateCategoryErrors: TypeError: Cannot read property '_id' of undefined
        at /Users/saudalmutawa/TTP-BACK/TTP-Back/src/lib/presentation/category/category.ts:16:41
        at Generator.next (<anonymous>)
        at fulfilled (/Users/saudalmutawa/TTP-BACK/TTP-Back/src/lib/presentation/category/category.ts:5:58)
        at processTicksAndRejections (internal/process/task_queues.js:95:5)
  },
  level: 'error',
  timestamp: '2022-02-27 11:43:18'
}
{
  message: { db: 'mongodb://localhost:27017/TTP' },
  level: 'info',
  timestamp: '2022-02-27 11:46:05'
}
{
  message: {
    createSubcategoryDBError: MongoServerError: E11000 duplicate key error collection: TTP.subcategories index: subCategory_1 dup key: { subCategory: "sub1" }
        at /Users/saudalmutawa/TTP-BACK/TTP-Back/node_modules/mongoose/node_modules/mongodb/src/operations/insert.ts:75:25
        at /Users/saudalmutawa/TTP-BACK/TTP-Back/node_modules/mongoose/node_modules/mongodb/src/cmap/connection_pool.ts:482:13
        at handleOperationResult (/Users/saudalmutawa/TTP-BACK/TTP-Back/node_modules/mongoose/node_modules/mongodb/src/sdam/server.ts:610:5)
        at MessageStream.messageHandler (/Users/saudalmutawa/TTP-BACK/TTP-Back/node_modules/mongoose/node_modules/mongodb/src/cmap/connection.ts:765:5)
        at MessageStream.emit (events.js:400:28)
        at MessageStream.emit (domain.js:475:12)
        at processIncomingData (/Users/saudalmutawa/TTP-BACK/TTP-Back/node_modules/mongoose/node_modules/mongodb/src/cmap/message_stream.ts:168:12)
        at MessageStream._write (/Users/saudalmutawa/TTP-BACK/TTP-Back/node_modules/mongoose/node_modules/mongodb/src/cmap/message_stream.ts:65:5)
        at writeOrBuffer (internal/streams/writable.js:358:12)
        at MessageStream.Writable.write (internal/streams/writable.js:303:10) {
      index: 0,
      code: 11000,
      keyPattern: { subCategory: 1 },
      keyValue: { subCategory: 'sub1' }
    }
  },
  level: 'error',
  timestamp: '2022-02-27 11:46:33'
}
{
  message: {
    createSubcategoryDBError: MongoServerError: E11000 duplicate key error collection: TTP.subcategories index: subCategory_1 dup key: { subCategory: "sub1" }
        at /Users/saudalmutawa/TTP-BACK/TTP-Back/node_modules/mongoose/node_modules/mongodb/src/operations/insert.ts:75:25
        at /Users/saudalmutawa/TTP-BACK/TTP-Back/node_modules/mongoose/node_modules/mongodb/src/cmap/connection_pool.ts:482:13
        at handleOperationResult (/Users/saudalmutawa/TTP-BACK/TTP-Back/node_modules/mongoose/node_modules/mongodb/src/sdam/server.ts:610:5)
        at MessageStream.messageHandler (/Users/saudalmutawa/TTP-BACK/TTP-Back/node_modules/mongoose/node_modules/mongodb/src/cmap/connection.ts:765:5)
        at MessageStream.emit (events.js:400:28)
        at MessageStream.emit (domain.js:475:12)
        at processIncomingData (/Users/saudalmutawa/TTP-BACK/TTP-Back/node_modules/mongoose/node_modules/mongodb/src/cmap/message_stream.ts:168:12)
        at MessageStream._write (/Users/saudalmutawa/TTP-BACK/TTP-Back/node_modules/mongoose/node_modules/mongodb/src/cmap/message_stream.ts:65:5)
        at writeOrBuffer (internal/streams/writable.js:358:12)
        at MessageStream.Writable.write (internal/streams/writable.js:303:10) {
      index: 0,
      code: 11000,
      keyPattern: { subCategory: 1 },
      keyValue: { subCategory: 'sub1' }
    }
  },
  level: 'error',
  timestamp: '2022-02-27 11:46:33'
}
{
  message: { db: 'mongodb://localhost:27017/TTP' },
  level: 'info',
  timestamp: '2022-02-27 11:47:51'
}
{
  message: {
    createSubcategoryDBError: MongoServerError: E11000 duplicate key error collection: TTP.subcategories index: subCategory_1 dup key: { subCategory: "sub1" }
        at /Users/saudalmutawa/TTP-BACK/TTP-Back/node_modules/mongoose/node_modules/mongodb/src/operations/insert.ts:75:25
        at /Users/saudalmutawa/TTP-BACK/TTP-Back/node_modules/mongoose/node_modules/mongodb/src/cmap/connection_pool.ts:482:13
        at handleOperationResult (/Users/saudalmutawa/TTP-BACK/TTP-Back/node_modules/mongoose/node_modules/mongodb/src/sdam/server.ts:610:5)
        at MessageStream.messageHandler (/Users/saudalmutawa/TTP-BACK/TTP-Back/node_modules/mongoose/node_modules/mongodb/src/cmap/connection.ts:765:5)
        at MessageStream.emit (events.js:400:28)
        at MessageStream.emit (domain.js:475:12)
        at processIncomingData (/Users/saudalmutawa/TTP-BACK/TTP-Back/node_modules/mongoose/node_modules/mongodb/src/cmap/message_stream.ts:168:12)
        at MessageStream._write (/Users/saudalmutawa/TTP-BACK/TTP-Back/node_modules/mongoose/node_modules/mongodb/src/cmap/message_stream.ts:65:5)
        at writeOrBuffer (internal/streams/writable.js:358:12)
        at MessageStream.Writable.write (internal/streams/writable.js:303:10) {
      index: 0,
      code: 11000,
      keyPattern: { subCategory: 1 },
      keyValue: { subCategory: 'sub1' }
    }
  },
  level: 'error',
  timestamp: '2022-02-27 11:47:58'
}
{
  message: {
    createSubcategoryDBError: MongoServerError: E11000 duplicate key error collection: TTP.subcategories index: subCategory_1 dup key: { subCategory: "sub1" }
        at /Users/saudalmutawa/TTP-BACK/TTP-Back/node_modules/mongoose/node_modules/mongodb/src/operations/insert.ts:75:25
        at /Users/saudalmutawa/TTP-BACK/TTP-Back/node_modules/mongoose/node_modules/mongodb/src/cmap/connection_pool.ts:482:13
        at handleOperationResult (/Users/saudalmutawa/TTP-BACK/TTP-Back/node_modules/mongoose/node_modules/mongodb/src/sdam/server.ts:610:5)
        at MessageStream.messageHandler (/Users/saudalmutawa/TTP-BACK/TTP-Back/node_modules/mongoose/node_modules/mongodb/src/cmap/connection.ts:765:5)
        at MessageStream.emit (events.js:400:28)
        at MessageStream.emit (domain.js:475:12)
        at processIncomingData (/Users/saudalmutawa/TTP-BACK/TTP-Back/node_modules/mongoose/node_modules/mongodb/src/cmap/message_stream.ts:168:12)
        at MessageStream._write (/Users/saudalmutawa/TTP-BACK/TTP-Back/node_modules/mongoose/node_modules/mongodb/src/cmap/message_stream.ts:65:5)
        at writeOrBuffer (internal/streams/writable.js:358:12)
        at MessageStream.Writable.write (internal/streams/writable.js:303:10) {
      index: 0,
      code: 11000,
      keyPattern: { subCategory: 1 },
      keyValue: { subCategory: 'sub1' }
    }
  },
  level: 'error',
  timestamp: '2022-02-27 11:47:58'
}
{
  message: { db: 'mongodb://localhost:27017/TTP' },
  level: 'info',
  timestamp: '2022-02-27 11:48:06'
}
{
  message: { db: 'mongodb://localhost:27017/TTP' },
  level: 'info',
  timestamp: '2022-02-27 11:48:24'
}
{
  message: { db: 'mongodb://localhost:27017/TTP' },
  level: 'info',
  timestamp: '2022-02-27 14:15:27'
}
{
  message: { db: 'mongodb://localhost:27017/TTP' },
  level: 'info',
  timestamp: '2022-02-27 14:18:27'
}
{
  message: { db: 'mongodb://localhost:27017/TTP' },
  level: 'info',
  timestamp: '2022-02-27 14:20:21'
}
{
  message: { db: 'mongodb://localhost:27017/TTP' },
  level: 'info',
  timestamp: '2022-02-27 14:24:25'
}
{
  message: { db: 'mongodb://localhost:27017/TTP' },
  level: 'info',
  timestamp: '2022-02-27 14:26:09'
}
{
  message: {
    createSubcategoryDBError: MongoServerError: E11000 duplicate key error collection: TTP.subcategories index: subCategory_1 dup key: { subCategory: "ss" }
        at /Users/saudalmutawa/TTP-BACK/TTP-Back/node_modules/mongoose/node_modules/mongodb/src/operations/insert.ts:75:25
        at /Users/saudalmutawa/TTP-BACK/TTP-Back/node_modules/mongoose/node_modules/mongodb/src/cmap/connection_pool.ts:482:13
        at handleOperationResult (/Users/saudalmutawa/TTP-BACK/TTP-Back/node_modules/mongoose/node_modules/mongodb/src/sdam/server.ts:610:5)
        at MessageStream.messageHandler (/Users/saudalmutawa/TTP-BACK/TTP-Back/node_modules/mongoose/node_modules/mongodb/src/cmap/connection.ts:765:5)
        at MessageStream.emit (events.js:400:28)
        at MessageStream.emit (domain.js:475:12)
        at processIncomingData (/Users/saudalmutawa/TTP-BACK/TTP-Back/node_modules/mongoose/node_modules/mongodb/src/cmap/message_stream.ts:168:12)
        at MessageStream._write (/Users/saudalmutawa/TTP-BACK/TTP-Back/node_modules/mongoose/node_modules/mongodb/src/cmap/message_stream.ts:65:5)
        at writeOrBuffer (internal/streams/writable.js:358:12)
        at MessageStream.Writable.write (internal/streams/writable.js:303:10) {
      index: 0,
      code: 11000,
      keyPattern: { subCategory: 1 },
      keyValue: { subCategory: 'ss' }
    }
  },
  level: 'error',
  timestamp: '2022-02-27 14:26:19'
}
{
  message: {
    createSubcategoryDBError: MongoServerError: E11000 duplicate key error collection: TTP.subcategories index: subCategory_1 dup key: { subCategory: "ss" }
        at /Users/saudalmutawa/TTP-BACK/TTP-Back/node_modules/mongoose/node_modules/mongodb/src/operations/insert.ts:75:25
        at /Users/saudalmutawa/TTP-BACK/TTP-Back/node_modules/mongoose/node_modules/mongodb/src/cmap/connection_pool.ts:482:13
        at handleOperationResult (/Users/saudalmutawa/TTP-BACK/TTP-Back/node_modules/mongoose/node_modules/mongodb/src/sdam/server.ts:610:5)
        at MessageStream.messageHandler (/Users/saudalmutawa/TTP-BACK/TTP-Back/node_modules/mongoose/node_modules/mongodb/src/cmap/connection.ts:765:5)
        at MessageStream.emit (events.js:400:28)
        at MessageStream.emit (domain.js:475:12)
        at processIncomingData (/Users/saudalmutawa/TTP-BACK/TTP-Back/node_modules/mongoose/node_modules/mongodb/src/cmap/message_stream.ts:168:12)
        at MessageStream._write (/Users/saudalmutawa/TTP-BACK/TTP-Back/node_modules/mongoose/node_modules/mongodb/src/cmap/message_stream.ts:65:5)
        at writeOrBuffer (internal/streams/writable.js:358:12)
        at MessageStream.Writable.write (internal/streams/writable.js:303:10) {
      index: 0,
      code: 11000,
      keyPattern: { subCategory: 1 },
      keyValue: { subCategory: 'ss' }
    }
  },
  level: 'error',
  timestamp: '2022-02-27 14:26:20'
}
{
  message: { db: 'mongodb://localhost:27017/TTP' },
  level: 'info',
  timestamp: '2022-02-27 14:26:56'
}
{
  message: {
    createCategoryDBError: MongoServerError: E11000 duplicate key error collection: TTP.categories index: category_1 dup key: { category: "Main13222" }
        at /Users/saudalmutawa/TTP-BACK/TTP-Back/node_modules/mongoose/node_modules/mongodb/src/operations/insert.ts:75:25
        at /Users/saudalmutawa/TTP-BACK/TTP-Back/node_modules/mongoose/node_modules/mongodb/src/cmap/connection_pool.ts:482:13
        at handleOperationResult (/Users/saudalmutawa/TTP-BACK/TTP-Back/node_modules/mongoose/node_modules/mongodb/src/sdam/server.ts:610:5)
        at MessageStream.messageHandler (/Users/saudalmutawa/TTP-BACK/TTP-Back/node_modules/mongoose/node_modules/mongodb/src/cmap/connection.ts:765:5)
        at MessageStream.emit (events.js:400:28)
        at MessageStream.emit (domain.js:475:12)
        at processIncomingData (/Users/saudalmutawa/TTP-BACK/TTP-Back/node_modules/mongoose/node_modules/mongodb/src/cmap/message_stream.ts:168:12)
        at MessageStream._write (/Users/saudalmutawa/TTP-BACK/TTP-Back/node_modules/mongoose/node_modules/mongodb/src/cmap/message_stream.ts:65:5)
        at writeOrBuffer (internal/streams/writable.js:358:12)
        at MessageStream.Writable.write (internal/streams/writable.js:303:10) {
      index: 0,
      code: 11000,
      keyPattern: { category: 1 },
      keyValue: { category: 'Main13222' }
    }
  },
  level: 'error',
  timestamp: '2022-02-27 14:27:06'
}
{
  message: {
    handleCreateCategoryErrors: TypeError: Cannot read property '_id' of undefined
        at /Users/saudalmutawa/TTP-BACK/TTP-Back/src/lib/presentation/category/category.ts:15:41
        at Generator.next (<anonymous>)
        at fulfilled (/Users/saudalmutawa/TTP-BACK/TTP-Back/src/lib/presentation/category/category.ts:5:58)
        at processTicksAndRejections (internal/process/task_queues.js:95:5)
  },
  level: 'error',
  timestamp: '2022-02-27 14:27:06'
}
{
  message: { db: 'mongodb://localhost:27017/TTP' },
  level: 'info',
  timestamp: '2022-02-27 14:28:09'
}
{
  message: {
    createCategoryDBError: MongoServerError: E11000 duplicate key error collection: TTP.categories index: category_1 dup key: { category: "Main13222" }
        at /Users/saudalmutawa/TTP-BACK/TTP-Back/node_modules/mongoose/node_modules/mongodb/src/operations/insert.ts:75:25
        at /Users/saudalmutawa/TTP-BACK/TTP-Back/node_modules/mongoose/node_modules/mongodb/src/cmap/connection_pool.ts:482:13
        at handleOperationResult (/Users/saudalmutawa/TTP-BACK/TTP-Back/node_modules/mongoose/node_modules/mongodb/src/sdam/server.ts:610:5)
        at MessageStream.messageHandler (/Users/saudalmutawa/TTP-BACK/TTP-Back/node_modules/mongoose/node_modules/mongodb/src/cmap/connection.ts:765:5)
        at MessageStream.emit (events.js:400:28)
        at MessageStream.emit (domain.js:475:12)
        at processIncomingData (/Users/saudalmutawa/TTP-BACK/TTP-Back/node_modules/mongoose/node_modules/mongodb/src/cmap/message_stream.ts:168:12)
        at MessageStream._write (/Users/saudalmutawa/TTP-BACK/TTP-Back/node_modules/mongoose/node_modules/mongodb/src/cmap/message_stream.ts:65:5)
        at writeOrBuffer (internal/streams/writable.js:358:12)
        at MessageStream.Writable.write (internal/streams/writable.js:303:10) {
      index: 0,
      code: 11000,
      keyPattern: { category: 1 },
      keyValue: { category: 'Main13222' }
    }
  },
  level: 'error',
  timestamp: '2022-02-27 14:28:13'
}
{
  message: {
    createCategoryDBError: Error: category validation failed: category: Path `category` is required.
        at ValidationError.inspect (/Users/saudalmutawa/TTP-BACK/TTP-Back/node_modules/mongoose/lib/error/validation.js:48:26)
        at formatValue (internal/util/inspect.js:745:19)
        at formatProperty (internal/util/inspect.js:1660:11)
        at formatRaw (internal/util/inspect.js:987:9)
        at formatValue (internal/util/inspect.js:774:10)
        at formatProperty (internal/util/inspect.js:1660:11)
        at formatRaw (internal/util/inspect.js:987:9)
        at formatValue (internal/util/inspect.js:774:10)
        at inspect (internal/util/inspect.js:319:10)
        at Format.transform (/Users/saudalmutawa/TTP-BACK/TTP-Back/node_modules/logform/pretty-print.js:27:19) {
      errors: {
        category: ValidatorError: Path `category` is required.
            at validate (/Users/saudalmutawa/TTP-BACK/TTP-Back/node_modules/mongoose/lib/schematype.js:1320:13)
            at SchemaString.SchemaType.doValidate (/Users/saudalmutawa/TTP-BACK/TTP-Back/node_modules/mongoose/lib/schematype.js:1304:7)
            at /Users/saudalmutawa/TTP-BACK/TTP-Back/node_modules/mongoose/lib/document.js:2723:18
            at processTicksAndRejections (internal/process/task_queues.js:77:11) {
          properties: {
            validator: [Function (anonymous)],
            message: 'Path `category` is required.',
            type: 'required',
            path: 'category',
            value: ''
          },
          kind: 'required',
          path: 'category',
          value: '',
          reason: undefined,
          [Symbol(mongoose:validatorError)]: true
        }
      },
      _message: 'category validation failed'
    }
  },
  level: 'error',
  timestamp: '2022-02-27 14:28:27'
}
{
  message: {
    createCategoryDBError: Error: category validation failed: category: Path `category` is required.
        at ValidationError.inspect (/Users/saudalmutawa/TTP-BACK/TTP-Back/node_modules/mongoose/lib/error/validation.js:48:26)
        at formatValue (internal/util/inspect.js:745:19)
        at formatProperty (internal/util/inspect.js:1660:11)
        at formatRaw (internal/util/inspect.js:987:9)
        at formatValue (internal/util/inspect.js:774:10)
        at formatProperty (internal/util/inspect.js:1660:11)
        at formatRaw (internal/util/inspect.js:987:9)
        at formatValue (internal/util/inspect.js:774:10)
        at inspect (internal/util/inspect.js:319:10)
        at Format.transform (/Users/saudalmutawa/TTP-BACK/TTP-Back/node_modules/logform/pretty-print.js:27:19) {
      errors: {
        category: ValidatorError: Path `category` is required.
            at validate (/Users/saudalmutawa/TTP-BACK/TTP-Back/node_modules/mongoose/lib/schematype.js:1320:13)
            at SchemaString.SchemaType.doValidate (/Users/saudalmutawa/TTP-BACK/TTP-Back/node_modules/mongoose/lib/schematype.js:1304:7)
            at /Users/saudalmutawa/TTP-BACK/TTP-Back/node_modules/mongoose/lib/document.js:2723:18
            at processTicksAndRejections (internal/process/task_queues.js:77:11) {
          properties: {
            validator: [Function (anonymous)],
            message: 'Path `category` is required.',
            type: 'required',
            path: 'category',
            value: undefined
          },
          kind: 'required',
          path: 'category',
          value: undefined,
          reason: undefined,
          [Symbol(mongoose:validatorError)]: true
        }
      },
      _message: 'category validation failed'
    }
  },
  level: 'error',
  timestamp: '2022-02-27 14:28:39'
}
{
  message: {
    createCategoryDBError: MongoServerError: E11000 duplicate key error collection: TTP.categories index: category_1 dup key: { category: "Main13222" }
        at /Users/saudalmutawa/TTP-BACK/TTP-Back/node_modules/mongoose/node_modules/mongodb/src/operations/insert.ts:75:25
        at /Users/saudalmutawa/TTP-BACK/TTP-Back/node_modules/mongoose/node_modules/mongodb/src/cmap/connection_pool.ts:482:13
        at handleOperationResult (/Users/saudalmutawa/TTP-BACK/TTP-Back/node_modules/mongoose/node_modules/mongodb/src/sdam/server.ts:610:5)
        at MessageStream.messageHandler (/Users/saudalmutawa/TTP-BACK/TTP-Back/node_modules/mongoose/node_modules/mongodb/src/cmap/connection.ts:765:5)
        at MessageStream.emit (events.js:400:28)
        at MessageStream.emit (domain.js:475:12)
        at processIncomingData (/Users/saudalmutawa/TTP-BACK/TTP-Back/node_modules/mongoose/node_modules/mongodb/src/cmap/message_stream.ts:168:12)
        at MessageStream._write (/Users/saudalmutawa/TTP-BACK/TTP-Back/node_modules/mongoose/node_modules/mongodb/src/cmap/message_stream.ts:65:5)
        at writeOrBuffer (internal/streams/writable.js:358:12)
        at MessageStream.Writable.write (internal/streams/writable.js:303:10) {
      index: 0,
      code: 11000,
      keyPattern: { category: 1 },
      keyValue: { category: 'Main13222' }
    }
  },
  level: 'error',
  timestamp: '2022-02-27 14:29:03'
}
{
  message: { db: 'mongodb://localhost:27017/TTP' },
  level: 'info',
  timestamp: '2022-02-27 14:30:24'
}
{
  message: { db: 'mongodb://localhost:27017/TTP' },
  level: 'info',
  timestamp: '2022-02-27 14:31:06'
}
{
  message: { db: 'mongodb://localhost:27017/TTP' },
  level: 'info',
  timestamp: '2022-02-27 14:31:23'
}
{
  message: { db: 'mongodb://localhost:27017/TTP' },
  level: 'info',
  timestamp: '2022-02-27 14:32:02'
}
{
  message: { db: 'mongodb://localhost:27017/TTP' },
  level: 'info',
  timestamp: '2022-02-27 14:32:08'
}
{
  message: { db: 'mongodb://localhost:27017/TTP' },
  level: 'info',
  timestamp: '2022-02-27 14:32:27'
}
{
  message: { db: 'mongodb://localhost:27017/TTP' },
  level: 'info',
  timestamp: '2022-02-27 14:32:50'
}
{
  message: {
    createSubcategoryDBError: MongoServerError: E11000 duplicate key error collection: TTP.subcategories index: subCategory_1 dup key: { subCategory: "ss" }
        at /Users/saudalmutawa/TTP-BACK/TTP-Back/node_modules/mongoose/node_modules/mongodb/src/operations/insert.ts:75:25
        at /Users/saudalmutawa/TTP-BACK/TTP-Back/node_modules/mongoose/node_modules/mongodb/src/cmap/connection_pool.ts:482:13
        at handleOperationResult (/Users/saudalmutawa/TTP-BACK/TTP-Back/node_modules/mongoose/node_modules/mongodb/src/sdam/server.ts:610:5)
        at MessageStream.messageHandler (/Users/saudalmutawa/TTP-BACK/TTP-Back/node_modules/mongoose/node_modules/mongodb/src/cmap/connection.ts:765:5)
        at MessageStream.emit (events.js:400:28)
        at MessageStream.emit (domain.js:475:12)
        at processIncomingData (/Users/saudalmutawa/TTP-BACK/TTP-Back/node_modules/mongoose/node_modules/mongodb/src/cmap/message_stream.ts:168:12)
        at MessageStream._write (/Users/saudalmutawa/TTP-BACK/TTP-Back/node_modules/mongoose/node_modules/mongodb/src/cmap/message_stream.ts:65:5)
        at writeOrBuffer (internal/streams/writable.js:358:12)
        at MessageStream.Writable.write (internal/streams/writable.js:303:10) {
      index: 0,
      code: 11000,
      keyPattern: { subCategory: 1 },
      keyValue: { subCategory: 'ss' }
    }
  },
  level: 'error',
  timestamp: '2022-02-27 14:33:01'
}
{
  message: {
    createSubcategoryDBError: MongoServerError: E11000 duplicate key error collection: TTP.subcategories index: subCategory_1 dup key: { subCategory: "ss" }
        at /Users/saudalmutawa/TTP-BACK/TTP-Back/node_modules/mongoose/node_modules/mongodb/src/operations/insert.ts:75:25
        at /Users/saudalmutawa/TTP-BACK/TTP-Back/node_modules/mongoose/node_modules/mongodb/src/cmap/connection_pool.ts:482:13
        at handleOperationResult (/Users/saudalmutawa/TTP-BACK/TTP-Back/node_modules/mongoose/node_modules/mongodb/src/sdam/server.ts:610:5)
        at MessageStream.messageHandler (/Users/saudalmutawa/TTP-BACK/TTP-Back/node_modules/mongoose/node_modules/mongodb/src/cmap/connection.ts:765:5)
        at MessageStream.emit (events.js:400:28)
        at MessageStream.emit (domain.js:475:12)
        at processIncomingData (/Users/saudalmutawa/TTP-BACK/TTP-Back/node_modules/mongoose/node_modules/mongodb/src/cmap/message_stream.ts:168:12)
        at MessageStream._write (/Users/saudalmutawa/TTP-BACK/TTP-Back/node_modules/mongoose/node_modules/mongodb/src/cmap/message_stream.ts:65:5)
        at writeOrBuffer (internal/streams/writable.js:358:12)
        at MessageStream.Writable.write (internal/streams/writable.js:303:10) {
      index: 0,
      code: 11000,
      keyPattern: { subCategory: 1 },
      keyValue: { subCategory: 'ss' }
    }
  },
  level: 'error',
  timestamp: '2022-02-27 14:33:02'
}
{
  message: {
    createSubcategoryDBError: MongoServerError: E11000 duplicate key error collection: TTP.subcategories index: subCategory_1 dup key: { subCategory: "ss" }
        at /Users/saudalmutawa/TTP-BACK/TTP-Back/node_modules/mongoose/node_modules/mongodb/src/operations/insert.ts:75:25
        at /Users/saudalmutawa/TTP-BACK/TTP-Back/node_modules/mongoose/node_modules/mongodb/src/cmap/connection_pool.ts:482:13
        at handleOperationResult (/Users/saudalmutawa/TTP-BACK/TTP-Back/node_modules/mongoose/node_modules/mongodb/src/sdam/server.ts:610:5)
        at MessageStream.messageHandler (/Users/saudalmutawa/TTP-BACK/TTP-Back/node_modules/mongoose/node_modules/mongodb/src/cmap/connection.ts:765:5)
        at MessageStream.emit (events.js:400:28)
        at MessageStream.emit (domain.js:475:12)
        at processIncomingData (/Users/saudalmutawa/TTP-BACK/TTP-Back/node_modules/mongoose/node_modules/mongodb/src/cmap/message_stream.ts:168:12)
        at MessageStream._write (/Users/saudalmutawa/TTP-BACK/TTP-Back/node_modules/mongoose/node_modules/mongodb/src/cmap/message_stream.ts:65:5)
        at writeOrBuffer (internal/streams/writable.js:358:12)
        at MessageStream.Writable.write (internal/streams/writable.js:303:10) {
      index: 0,
      code: 11000,
      keyPattern: { subCategory: 1 },
      keyValue: { subCategory: 'ss' }
    }
  },
  level: 'error',
  timestamp: '2022-02-27 14:33:02'
}
{
  message: {
    createSubcategoryDBError: MongoServerError: E11000 duplicate key error collection: TTP.subcategories index: subCategory_1 dup key: { subCategory: "ss" }
        at /Users/saudalmutawa/TTP-BACK/TTP-Back/node_modules/mongoose/node_modules/mongodb/src/operations/insert.ts:75:25
        at /Users/saudalmutawa/TTP-BACK/TTP-Back/node_modules/mongoose/node_modules/mongodb/src/cmap/connection_pool.ts:482:13
        at handleOperationResult (/Users/saudalmutawa/TTP-BACK/TTP-Back/node_modules/mongoose/node_modules/mongodb/src/sdam/server.ts:610:5)
        at MessageStream.messageHandler (/Users/saudalmutawa/TTP-BACK/TTP-Back/node_modules/mongoose/node_modules/mongodb/src/cmap/connection.ts:765:5)
        at MessageStream.emit (events.js:400:28)
        at MessageStream.emit (domain.js:475:12)
        at processIncomingData (/Users/saudalmutawa/TTP-BACK/TTP-Back/node_modules/mongoose/node_modules/mongodb/src/cmap/message_stream.ts:168:12)
        at MessageStream._write (/Users/saudalmutawa/TTP-BACK/TTP-Back/node_modules/mongoose/node_modules/mongodb/src/cmap/message_stream.ts:65:5)
        at writeOrBuffer (internal/streams/writable.js:358:12)
        at MessageStream.Writable.write (internal/streams/writable.js:303:10) {
      index: 0,
      code: 11000,
      keyPattern: { subCategory: 1 },
      keyValue: { subCategory: 'ss' }
    }
  },
  level: 'error',
  timestamp: '2022-02-27 14:33:03'
}
{
  message: {
    createSubcategoryDBError: MongoServerError: E11000 duplicate key error collection: TTP.subcategories index: subCategory_1 dup key: { subCategory: "ss" }
        at /Users/saudalmutawa/TTP-BACK/TTP-Back/node_modules/mongoose/node_modules/mongodb/src/operations/insert.ts:75:25
        at /Users/saudalmutawa/TTP-BACK/TTP-Back/node_modules/mongoose/node_modules/mongodb/src/cmap/connection_pool.ts:482:13
        at handleOperationResult (/Users/saudalmutawa/TTP-BACK/TTP-Back/node_modules/mongoose/node_modules/mongodb/src/sdam/server.ts:610:5)
        at MessageStream.messageHandler (/Users/saudalmutawa/TTP-BACK/TTP-Back/node_modules/mongoose/node_modules/mongodb/src/cmap/connection.ts:765:5)
        at MessageStream.emit (events.js:400:28)
        at MessageStream.emit (domain.js:475:12)
        at processIncomingData (/Users/saudalmutawa/TTP-BACK/TTP-Back/node_modules/mongoose/node_modules/mongodb/src/cmap/message_stream.ts:168:12)
        at MessageStream._write (/Users/saudalmutawa/TTP-BACK/TTP-Back/node_modules/mongoose/node_modules/mongodb/src/cmap/message_stream.ts:65:5)
        at writeOrBuffer (internal/streams/writable.js:358:12)
        at MessageStream.Writable.write (internal/streams/writable.js:303:10) {
      index: 0,
      code: 11000,
      keyPattern: { subCategory: 1 },
      keyValue: { subCategory: 'ss' }
    }
  },
  level: 'error',
  timestamp: '2022-02-27 14:33:03'
}
{
  message: {
    createSubcategoryDBError: MongoServerError: E11000 duplicate key error collection: TTP.subcategories index: subCategory_1 dup key: { subCategory: "ss" }
        at /Users/saudalmutawa/TTP-BACK/TTP-Back/node_modules/mongoose/node_modules/mongodb/src/operations/insert.ts:75:25
        at /Users/saudalmutawa/TTP-BACK/TTP-Back/node_modules/mongoose/node_modules/mongodb/src/cmap/connection_pool.ts:482:13
        at handleOperationResult (/Users/saudalmutawa/TTP-BACK/TTP-Back/node_modules/mongoose/node_modules/mongodb/src/sdam/server.ts:610:5)
        at MessageStream.messageHandler (/Users/saudalmutawa/TTP-BACK/TTP-Back/node_modules/mongoose/node_modules/mongodb/src/cmap/connection.ts:765:5)
        at MessageStream.emit (events.js:400:28)
        at MessageStream.emit (domain.js:475:12)
        at processIncomingData (/Users/saudalmutawa/TTP-BACK/TTP-Back/node_modules/mongoose/node_modules/mongodb/src/cmap/message_stream.ts:168:12)
        at MessageStream._write (/Users/saudalmutawa/TTP-BACK/TTP-Back/node_modules/mongoose/node_modules/mongodb/src/cmap/message_stream.ts:65:5)
        at writeOrBuffer (internal/streams/writable.js:358:12)
        at MessageStream.Writable.write (internal/streams/writable.js:303:10) {
      index: 0,
      code: 11000,
      keyPattern: { subCategory: 1 },
      keyValue: { subCategory: 'ss' }
    }
  },
  level: 'error',
  timestamp: '2022-02-27 14:33:04'
}
{
  message: {
    createCategoryDBError: Error: category validation failed: category: Path `category` is required.
        at ValidationError.inspect (/Users/saudalmutawa/TTP-BACK/TTP-Back/node_modules/mongoose/lib/error/validation.js:48:26)
        at formatValue (internal/util/inspect.js:745:19)
        at formatProperty (internal/util/inspect.js:1660:11)
        at formatRaw (internal/util/inspect.js:987:9)
        at formatValue (internal/util/inspect.js:774:10)
        at formatProperty (internal/util/inspect.js:1660:11)
        at formatRaw (internal/util/inspect.js:987:9)
        at formatValue (internal/util/inspect.js:774:10)
        at inspect (internal/util/inspect.js:319:10)
        at Format.transform (/Users/saudalmutawa/TTP-BACK/TTP-Back/node_modules/logform/pretty-print.js:27:19) {
      errors: {
        category: ValidatorError: Path `category` is required.
            at validate (/Users/saudalmutawa/TTP-BACK/TTP-Back/node_modules/mongoose/lib/schematype.js:1320:13)
            at SchemaString.SchemaType.doValidate (/Users/saudalmutawa/TTP-BACK/TTP-Back/node_modules/mongoose/lib/schematype.js:1304:7)
            at /Users/saudalmutawa/TTP-BACK/TTP-Back/node_modules/mongoose/lib/document.js:2723:18
            at processTicksAndRejections (internal/process/task_queues.js:77:11) {
          properties: {
            validator: [Function (anonymous)],
            message: 'Path `category` is required.',
            type: 'required',
            path: 'category',
            value: undefined
          },
          kind: 'required',
          path: 'category',
          value: undefined,
          reason: undefined,
          [Symbol(mongoose:validatorError)]: true
        }
      },
      _message: 'category validation failed'
    }
  },
  level: 'error',
  timestamp: '2022-02-27 14:33:30'
}
{
  message: { db: 'mongodb://localhost:27017/TTP' },
  level: 'info',
  timestamp: '2022-02-27 14:34:57'
}
{
  message: { db: 'mongodb://localhost:27017/TTP' },
  level: 'info',
  timestamp: '2022-02-27 14:35:06'
}
{
  message: { db: 'mongodb://localhost:27017/TTP' },
  level: 'info',
  timestamp: '2022-02-27 14:35:37'
}
{
  message: { db: 'mongodb://localhost:27017/TTP' },
  level: 'info',
  timestamp: '2022-02-27 14:38:24'
}
{
  message: { db: 'mongodb://localhost:27017/TTP' },
  level: 'info',
  timestamp: '2022-02-27 14:59:47'
}
{
  message: {
    createCategoryDBError: Error: category validation failed: category: Path `category` is required.
        at ValidationError.inspect (/Users/saudalmutawa/TTP-BACK/TTP-Back/node_modules/mongoose/lib/error/validation.js:48:26)
        at formatValue (internal/util/inspect.js:745:19)
        at formatProperty (internal/util/inspect.js:1660:11)
        at formatRaw (internal/util/inspect.js:987:9)
        at formatValue (internal/util/inspect.js:774:10)
        at formatProperty (internal/util/inspect.js:1660:11)
        at formatRaw (internal/util/inspect.js:987:9)
        at formatValue (internal/util/inspect.js:774:10)
        at inspect (internal/util/inspect.js:319:10)
        at Format.transform (/Users/saudalmutawa/TTP-BACK/TTP-Back/node_modules/logform/pretty-print.js:27:19) {
      errors: {
        category: ValidatorError: Path `category` is required.
            at validate (/Users/saudalmutawa/TTP-BACK/TTP-Back/node_modules/mongoose/lib/schematype.js:1320:13)
            at SchemaString.SchemaType.doValidate (/Users/saudalmutawa/TTP-BACK/TTP-Back/node_modules/mongoose/lib/schematype.js:1304:7)
            at /Users/saudalmutawa/TTP-BACK/TTP-Back/node_modules/mongoose/lib/document.js:2723:18
            at processTicksAndRejections (internal/process/task_queues.js:77:11) {
          properties: {
            validator: [Function (anonymous)],
            message: 'Path `category` is required.',
            type: 'required',
            path: 'category',
            value: undefined
          },
          kind: 'required',
          path: 'category',
          value: undefined,
          reason: undefined,
          [Symbol(mongoose:validatorError)]: true
        }
      },
      _message: 'category validation failed'
    }
  },
  level: 'error',
  timestamp: '2022-02-27 15:40:30'
}
{
  message: {
    createCategoryDBError: Error: category validation failed: category: Path `category` is required.
        at ValidationError.inspect (/Users/saudalmutawa/TTP-BACK/TTP-Back/node_modules/mongoose/lib/error/validation.js:48:26)
        at formatValue (internal/util/inspect.js:745:19)
        at formatProperty (internal/util/inspect.js:1660:11)
        at formatRaw (internal/util/inspect.js:987:9)
        at formatValue (internal/util/inspect.js:774:10)
        at formatProperty (internal/util/inspect.js:1660:11)
        at formatRaw (internal/util/inspect.js:987:9)
        at formatValue (internal/util/inspect.js:774:10)
        at inspect (internal/util/inspect.js:319:10)
        at Format.transform (/Users/saudalmutawa/TTP-BACK/TTP-Back/node_modules/logform/pretty-print.js:27:19) {
      errors: {
        category: ValidatorError: Path `category` is required.
            at validate (/Users/saudalmutawa/TTP-BACK/TTP-Back/node_modules/mongoose/lib/schematype.js:1320:13)
            at SchemaString.SchemaType.doValidate (/Users/saudalmutawa/TTP-BACK/TTP-Back/node_modules/mongoose/lib/schematype.js:1304:7)
            at /Users/saudalmutawa/TTP-BACK/TTP-Back/node_modules/mongoose/lib/document.js:2723:18
            at processTicksAndRejections (internal/process/task_queues.js:77:11) {
          properties: {
            validator: [Function (anonymous)],
            message: 'Path `category` is required.',
            type: 'required',
            path: 'category',
            value: undefined
          },
          kind: 'required',
          path: 'category',
          value: undefined,
          reason: undefined,
          [Symbol(mongoose:validatorError)]: true
        }
      },
      _message: 'category validation failed'
    }
  },
  level: 'error',
  timestamp: '2022-02-27 15:41:48'
}
{
  message: {
    createCategoryDBError: Error: category validation failed: category: Path `category` is required.
        at ValidationError.inspect (/Users/saudalmutawa/TTP-BACK/TTP-Back/node_modules/mongoose/lib/error/validation.js:48:26)
        at formatValue (internal/util/inspect.js:745:19)
        at formatProperty (internal/util/inspect.js:1660:11)
        at formatRaw (internal/util/inspect.js:987:9)
        at formatValue (internal/util/inspect.js:774:10)
        at formatProperty (internal/util/inspect.js:1660:11)
        at formatRaw (internal/util/inspect.js:987:9)
        at formatValue (internal/util/inspect.js:774:10)
        at inspect (internal/util/inspect.js:319:10)
        at Format.transform (/Users/saudalmutawa/TTP-BACK/TTP-Back/node_modules/logform/pretty-print.js:27:19) {
      errors: {
        category: ValidatorError: Path `category` is required.
            at validate (/Users/saudalmutawa/TTP-BACK/TTP-Back/node_modules/mongoose/lib/schematype.js:1320:13)
            at SchemaString.SchemaType.doValidate (/Users/saudalmutawa/TTP-BACK/TTP-Back/node_modules/mongoose/lib/schematype.js:1304:7)
            at /Users/saudalmutawa/TTP-BACK/TTP-Back/node_modules/mongoose/lib/document.js:2723:18
            at processTicksAndRejections (internal/process/task_queues.js:77:11) {
          properties: {
            validator: [Function (anonymous)],
            message: 'Path `category` is required.',
            type: 'required',
            path: 'category',
            value: undefined
          },
          kind: 'required',
          path: 'category',
          value: undefined,
          reason: undefined,
          [Symbol(mongoose:validatorError)]: true
        }
      },
      _message: 'category validation failed'
    }
  },
  level: 'error',
  timestamp: '2022-02-27 15:42:48'
}
{
  message: {
    createCategoryDBError: Error: category validation failed: category: Path `category` is required.
        at ValidationError.inspect (/Users/saudalmutawa/TTP-BACK/TTP-Back/node_modules/mongoose/lib/error/validation.js:48:26)
        at formatValue (internal/util/inspect.js:745:19)
        at formatProperty (internal/util/inspect.js:1660:11)
        at formatRaw (internal/util/inspect.js:987:9)
        at formatValue (internal/util/inspect.js:774:10)
        at formatProperty (internal/util/inspect.js:1660:11)
        at formatRaw (internal/util/inspect.js:987:9)
        at formatValue (internal/util/inspect.js:774:10)
        at inspect (internal/util/inspect.js:319:10)
        at Format.transform (/Users/saudalmutawa/TTP-BACK/TTP-Back/node_modules/logform/pretty-print.js:27:19) {
      errors: {
        category: ValidatorError: Path `category` is required.
            at validate (/Users/saudalmutawa/TTP-BACK/TTP-Back/node_modules/mongoose/lib/schematype.js:1320:13)
            at SchemaString.SchemaType.doValidate (/Users/saudalmutawa/TTP-BACK/TTP-Back/node_modules/mongoose/lib/schematype.js:1304:7)
            at /Users/saudalmutawa/TTP-BACK/TTP-Back/node_modules/mongoose/lib/document.js:2723:18
            at processTicksAndRejections (internal/process/task_queues.js:77:11) {
          properties: {
            validator: [Function (anonymous)],
            message: 'Path `category` is required.',
            type: 'required',
            path: 'category',
            value: undefined
          },
          kind: 'required',
          path: 'category',
          value: undefined,
          reason: undefined,
          [Symbol(mongoose:validatorError)]: true
        }
      },
      _message: 'category validation failed'
    }
  },
  level: 'error',
  timestamp: '2022-02-27 15:48:28'
}
{
  message: {
    createCategoryDBError: Error: category validation failed: category: Path `category` is required.
        at ValidationError.inspect (/Users/saudalmutawa/TTP-BACK/TTP-Back/node_modules/mongoose/lib/error/validation.js:48:26)
        at formatValue (internal/util/inspect.js:745:19)
        at formatProperty (internal/util/inspect.js:1660:11)
        at formatRaw (internal/util/inspect.js:987:9)
        at formatValue (internal/util/inspect.js:774:10)
        at formatProperty (internal/util/inspect.js:1660:11)
        at formatRaw (internal/util/inspect.js:987:9)
        at formatValue (internal/util/inspect.js:774:10)
        at inspect (internal/util/inspect.js:319:10)
        at Format.transform (/Users/saudalmutawa/TTP-BACK/TTP-Back/node_modules/logform/pretty-print.js:27:19) {
      errors: {
        category: ValidatorError: Path `category` is required.
            at validate (/Users/saudalmutawa/TTP-BACK/TTP-Back/node_modules/mongoose/lib/schematype.js:1320:13)
            at SchemaString.SchemaType.doValidate (/Users/saudalmutawa/TTP-BACK/TTP-Back/node_modules/mongoose/lib/schematype.js:1304:7)
            at /Users/saudalmutawa/TTP-BACK/TTP-Back/node_modules/mongoose/lib/document.js:2723:18
            at processTicksAndRejections (internal/process/task_queues.js:77:11) {
          properties: {
            validator: [Function (anonymous)],
            message: 'Path `category` is required.',
            type: 'required',
            path: 'category',
            value: undefined
          },
          kind: 'required',
          path: 'category',
          value: undefined,
          reason: undefined,
          [Symbol(mongoose:validatorError)]: true
        }
      },
      _message: 'category validation failed'
    }
  },
  level: 'error',
  timestamp: '2022-02-27 15:48:30'
}
{
  message: {
    createCategoryDBError: Error: category validation failed: category: Path `category` is required.
        at ValidationError.inspect (/Users/saudalmutawa/TTP-BACK/TTP-Back/node_modules/mongoose/lib/error/validation.js:48:26)
        at formatValue (internal/util/inspect.js:745:19)
        at formatProperty (internal/util/inspect.js:1660:11)
        at formatRaw (internal/util/inspect.js:987:9)
        at formatValue (internal/util/inspect.js:774:10)
        at formatProperty (internal/util/inspect.js:1660:11)
        at formatRaw (internal/util/inspect.js:987:9)
        at formatValue (internal/util/inspect.js:774:10)
        at inspect (internal/util/inspect.js:319:10)
        at Format.transform (/Users/saudalmutawa/TTP-BACK/TTP-Back/node_modules/logform/pretty-print.js:27:19) {
      errors: {
        category: ValidatorError: Path `category` is required.
            at validate (/Users/saudalmutawa/TTP-BACK/TTP-Back/node_modules/mongoose/lib/schematype.js:1320:13)
            at SchemaString.SchemaType.doValidate (/Users/saudalmutawa/TTP-BACK/TTP-Back/node_modules/mongoose/lib/schematype.js:1304:7)
            at /Users/saudalmutawa/TTP-BACK/TTP-Back/node_modules/mongoose/lib/document.js:2723:18
            at processTicksAndRejections (internal/process/task_queues.js:77:11) {
          properties: {
            validator: [Function (anonymous)],
            message: 'Path `category` is required.',
            type: 'required',
            path: 'category',
            value: undefined
          },
          kind: 'required',
          path: 'category',
          value: undefined,
          reason: undefined,
          [Symbol(mongoose:validatorError)]: true
        }
      },
      _message: 'category validation failed'
    }
  },
  level: 'error',
  timestamp: '2022-02-27 15:49:09'
}
{
  message: {
    createCategoryDBError: Error: category validation failed: category: Path `category` is required.
        at ValidationError.inspect (/Users/saudalmutawa/TTP-BACK/TTP-Back/node_modules/mongoose/lib/error/validation.js:48:26)
        at formatValue (internal/util/inspect.js:745:19)
        at formatProperty (internal/util/inspect.js:1660:11)
        at formatRaw (internal/util/inspect.js:987:9)
        at formatValue (internal/util/inspect.js:774:10)
        at formatProperty (internal/util/inspect.js:1660:11)
        at formatRaw (internal/util/inspect.js:987:9)
        at formatValue (internal/util/inspect.js:774:10)
        at inspect (internal/util/inspect.js:319:10)
        at Format.transform (/Users/saudalmutawa/TTP-BACK/TTP-Back/node_modules/logform/pretty-print.js:27:19) {
      errors: {
        category: ValidatorError: Path `category` is required.
            at validate (/Users/saudalmutawa/TTP-BACK/TTP-Back/node_modules/mongoose/lib/schematype.js:1320:13)
            at SchemaString.SchemaType.doValidate (/Users/saudalmutawa/TTP-BACK/TTP-Back/node_modules/mongoose/lib/schematype.js:1304:7)
            at /Users/saudalmutawa/TTP-BACK/TTP-Back/node_modules/mongoose/lib/document.js:2723:18
            at processTicksAndRejections (internal/process/task_queues.js:77:11) {
          properties: {
            validator: [Function (anonymous)],
            message: 'Path `category` is required.',
            type: 'required',
            path: 'category',
            value: undefined
          },
          kind: 'required',
          path: 'category',
          value: undefined,
          reason: undefined,
          [Symbol(mongoose:validatorError)]: true
        }
      },
      _message: 'category validation failed'
    }
  },
  level: 'error',
  timestamp: '2022-02-27 15:51:24'
}
{
  message: {
    createCategoryDBError: Error: category validation failed: category: Path `category` is required.
        at ValidationError.inspect (/Users/saudalmutawa/TTP-BACK/TTP-Back/node_modules/mongoose/lib/error/validation.js:48:26)
        at formatValue (internal/util/inspect.js:745:19)
        at formatProperty (internal/util/inspect.js:1660:11)
        at formatRaw (internal/util/inspect.js:987:9)
        at formatValue (internal/util/inspect.js:774:10)
        at formatProperty (internal/util/inspect.js:1660:11)
        at formatRaw (internal/util/inspect.js:987:9)
        at formatValue (internal/util/inspect.js:774:10)
        at inspect (internal/util/inspect.js:319:10)
        at Format.transform (/Users/saudalmutawa/TTP-BACK/TTP-Back/node_modules/logform/pretty-print.js:27:19) {
      errors: {
        category: ValidatorError: Path `category` is required.
            at validate (/Users/saudalmutawa/TTP-BACK/TTP-Back/node_modules/mongoose/lib/schematype.js:1320:13)
            at SchemaString.SchemaType.doValidate (/Users/saudalmutawa/TTP-BACK/TTP-Back/node_modules/mongoose/lib/schematype.js:1304:7)
            at /Users/saudalmutawa/TTP-BACK/TTP-Back/node_modules/mongoose/lib/document.js:2723:18
            at processTicksAndRejections (internal/process/task_queues.js:77:11) {
          properties: {
            validator: [Function (anonymous)],
            message: 'Path `category` is required.',
            type: 'required',
            path: 'category',
            value: undefined
          },
          kind: 'required',
          path: 'category',
          value: undefined,
          reason: undefined,
          [Symbol(mongoose:validatorError)]: true
        }
      },
      _message: 'category validation failed'
    }
  },
  level: 'error',
  timestamp: '2022-02-27 15:55:38'
}
{
  message: {
    createCategoryDBError: Error: category validation failed: category: Path `category` is required.
        at ValidationError.inspect (/Users/saudalmutawa/TTP-BACK/TTP-Back/node_modules/mongoose/lib/error/validation.js:48:26)
        at formatValue (internal/util/inspect.js:745:19)
        at formatProperty (internal/util/inspect.js:1660:11)
        at formatRaw (internal/util/inspect.js:987:9)
        at formatValue (internal/util/inspect.js:774:10)
        at formatProperty (internal/util/inspect.js:1660:11)
        at formatRaw (internal/util/inspect.js:987:9)
        at formatValue (internal/util/inspect.js:774:10)
        at inspect (internal/util/inspect.js:319:10)
        at Format.transform (/Users/saudalmutawa/TTP-BACK/TTP-Back/node_modules/logform/pretty-print.js:27:19) {
      errors: {
        category: ValidatorError: Path `category` is required.
            at validate (/Users/saudalmutawa/TTP-BACK/TTP-Back/node_modules/mongoose/lib/schematype.js:1320:13)
            at SchemaString.SchemaType.doValidate (/Users/saudalmutawa/TTP-BACK/TTP-Back/node_modules/mongoose/lib/schematype.js:1304:7)
            at /Users/saudalmutawa/TTP-BACK/TTP-Back/node_modules/mongoose/lib/document.js:2723:18
            at processTicksAndRejections (internal/process/task_queues.js:77:11) {
          properties: {
            validator: [Function (anonymous)],
            message: 'Path `category` is required.',
            type: 'required',
            path: 'category',
            value: undefined
          },
          kind: 'required',
          path: 'category',
          value: undefined,
          reason: undefined,
          [Symbol(mongoose:validatorError)]: true
        }
      },
      _message: 'category validation failed'
    }
  },
  level: 'error',
  timestamp: '2022-02-27 15:56:47'
}
{
  message: {
    createCategoryDBError: Error: category validation failed: category: Path `category` is required.
        at ValidationError.inspect (/Users/saudalmutawa/TTP-BACK/TTP-Back/node_modules/mongoose/lib/error/validation.js:48:26)
        at formatValue (internal/util/inspect.js:745:19)
        at formatProperty (internal/util/inspect.js:1660:11)
        at formatRaw (internal/util/inspect.js:987:9)
        at formatValue (internal/util/inspect.js:774:10)
        at formatProperty (internal/util/inspect.js:1660:11)
        at formatRaw (internal/util/inspect.js:987:9)
        at formatValue (internal/util/inspect.js:774:10)
        at inspect (internal/util/inspect.js:319:10)
        at Format.transform (/Users/saudalmutawa/TTP-BACK/TTP-Back/node_modules/logform/pretty-print.js:27:19) {
      errors: {
        category: ValidatorError: Path `category` is required.
            at validate (/Users/saudalmutawa/TTP-BACK/TTP-Back/node_modules/mongoose/lib/schematype.js:1320:13)
            at SchemaString.SchemaType.doValidate (/Users/saudalmutawa/TTP-BACK/TTP-Back/node_modules/mongoose/lib/schematype.js:1304:7)
            at /Users/saudalmutawa/TTP-BACK/TTP-Back/node_modules/mongoose/lib/document.js:2723:18
            at processTicksAndRejections (internal/process/task_queues.js:77:11) {
          properties: {
            validator: [Function (anonymous)],
            message: 'Path `category` is required.',
            type: 'required',
            path: 'category',
            value: undefined
          },
          kind: 'required',
          path: 'category',
          value: undefined,
          reason: undefined,
          [Symbol(mongoose:validatorError)]: true
        }
      },
      _message: 'category validation failed'
    }
  },
  level: 'error',
  timestamp: '2022-02-27 15:57:07'
}
{
  message: { db: 'mongodb://localhost:27017/TTP' },
  level: 'info',
  timestamp: '2022-02-27 16:00:25'
}
{
  message: { db: 'mongodb://localhost:27017/TTP' },
  level: 'info',
  timestamp: '2022-02-27 16:01:24'
}
{
  message: { db: 'mongodb://localhost:27017/TTP' },
  level: 'info',
  timestamp: '2022-02-27 16:15:08'
}
{
  message: {
    createCategoryDBError: Error: category validation failed: category: Path `category` is required.
        at ValidationError.inspect (/Users/saudalmutawa/TTP-BACK/TTP-Back/node_modules/mongoose/lib/error/validation.js:48:26)
        at formatValue (internal/util/inspect.js:745:19)
        at formatProperty (internal/util/inspect.js:1660:11)
        at formatRaw (internal/util/inspect.js:987:9)
        at formatValue (internal/util/inspect.js:774:10)
        at formatProperty (internal/util/inspect.js:1660:11)
        at formatRaw (internal/util/inspect.js:987:9)
        at formatValue (internal/util/inspect.js:774:10)
        at inspect (internal/util/inspect.js:319:10)
        at Format.transform (/Users/saudalmutawa/TTP-BACK/TTP-Back/node_modules/logform/pretty-print.js:27:19) {
      errors: {
        category: ValidatorError: Path `category` is required.
            at validate (/Users/saudalmutawa/TTP-BACK/TTP-Back/node_modules/mongoose/lib/schematype.js:1320:13)
            at SchemaString.SchemaType.doValidate (/Users/saudalmutawa/TTP-BACK/TTP-Back/node_modules/mongoose/lib/schematype.js:1304:7)
            at /Users/saudalmutawa/TTP-BACK/TTP-Back/node_modules/mongoose/lib/document.js:2723:18
            at processTicksAndRejections (internal/process/task_queues.js:77:11) {
          properties: {
            validator: [Function (anonymous)],
            message: 'Path `category` is required.',
            type: 'required',
            path: 'category',
            value: ''
          },
          kind: 'required',
          path: 'category',
          value: '',
          reason: undefined,
          [Symbol(mongoose:validatorError)]: true
        }
      },
      _message: 'category validation failed'
    }
  },
  level: 'error',
  timestamp: '2022-02-27 16:15:24'
}
{
  message: {
    createCategoryDBError: MongoServerError: E11000 duplicate key error collection: TTP.categories index: category_1 dup key: { category: "Main1" }
        at /Users/saudalmutawa/TTP-BACK/TTP-Back/node_modules/mongoose/node_modules/mongodb/src/operations/insert.ts:75:25
        at /Users/saudalmutawa/TTP-BACK/TTP-Back/node_modules/mongoose/node_modules/mongodb/src/cmap/connection_pool.ts:482:13
        at handleOperationResult (/Users/saudalmutawa/TTP-BACK/TTP-Back/node_modules/mongoose/node_modules/mongodb/src/sdam/server.ts:610:5)
        at MessageStream.messageHandler (/Users/saudalmutawa/TTP-BACK/TTP-Back/node_modules/mongoose/node_modules/mongodb/src/cmap/connection.ts:765:5)
        at MessageStream.emit (events.js:400:28)
        at MessageStream.emit (domain.js:475:12)
        at processIncomingData (/Users/saudalmutawa/TTP-BACK/TTP-Back/node_modules/mongoose/node_modules/mongodb/src/cmap/message_stream.ts:168:12)
        at MessageStream._write (/Users/saudalmutawa/TTP-BACK/TTP-Back/node_modules/mongoose/node_modules/mongodb/src/cmap/message_stream.ts:65:5)
        at writeOrBuffer (internal/streams/writable.js:358:12)
        at MessageStream.Writable.write (internal/streams/writable.js:303:10) {
      index: 0,
      code: 11000,
      keyPattern: { category: 1 },
      keyValue: { category: 'Main1' }
    }
  },
  level: 'error',
  timestamp: '2022-02-27 16:16:07'
}
{
  message: { db: 'mongodb://localhost:27017/TTP' },
  level: 'info',
  timestamp: '2022-02-27 16:16:22'
}
{
  message: {
    createCategoryDBError: Error: category validation failed: category: Path `category` is required.
        at ValidationError.inspect (/Users/saudalmutawa/TTP-BACK/TTP-Back/node_modules/mongoose/lib/error/validation.js:48:26)
        at formatValue (internal/util/inspect.js:745:19)
        at formatProperty (internal/util/inspect.js:1660:11)
        at formatRaw (internal/util/inspect.js:987:9)
        at formatValue (internal/util/inspect.js:774:10)
        at formatProperty (internal/util/inspect.js:1660:11)
        at formatRaw (internal/util/inspect.js:987:9)
        at formatValue (internal/util/inspect.js:774:10)
        at inspect (internal/util/inspect.js:319:10)
        at Format.transform (/Users/saudalmutawa/TTP-BACK/TTP-Back/node_modules/logform/pretty-print.js:27:19) {
      errors: {
        category: ValidatorError: Path `category` is required.
            at validate (/Users/saudalmutawa/TTP-BACK/TTP-Back/node_modules/mongoose/lib/schematype.js:1320:13)
            at SchemaString.SchemaType.doValidate (/Users/saudalmutawa/TTP-BACK/TTP-Back/node_modules/mongoose/lib/schematype.js:1304:7)
            at /Users/saudalmutawa/TTP-BACK/TTP-Back/node_modules/mongoose/lib/document.js:2723:18
            at processTicksAndRejections (internal/process/task_queues.js:77:11) {
          properties: {
            validator: [Function (anonymous)],
            message: 'Path `category` is required.',
            type: 'required',
            path: 'category',
            value: ''
          },
          kind: 'required',
          path: 'category',
          value: '',
          reason: undefined,
          [Symbol(mongoose:validatorError)]: true
        }
      },
      _message: 'category validation failed'
    }
  },
  level: 'error',
  timestamp: '2022-02-27 16:17:43'
}
{
  message: {
    createCategoryDBError: Error: category validation failed: category: Path `category` is required.
        at ValidationError.inspect (/Users/saudalmutawa/TTP-BACK/TTP-Back/node_modules/mongoose/lib/error/validation.js:48:26)
        at formatValue (internal/util/inspect.js:745:19)
        at formatProperty (internal/util/inspect.js:1660:11)
        at formatRaw (internal/util/inspect.js:987:9)
        at formatValue (internal/util/inspect.js:774:10)
        at formatProperty (internal/util/inspect.js:1660:11)
        at formatRaw (internal/util/inspect.js:987:9)
        at formatValue (internal/util/inspect.js:774:10)
        at inspect (internal/util/inspect.js:319:10)
        at Format.transform (/Users/saudalmutawa/TTP-BACK/TTP-Back/node_modules/logform/pretty-print.js:27:19) {
      errors: {
        category: ValidatorError: Path `category` is required.
            at validate (/Users/saudalmutawa/TTP-BACK/TTP-Back/node_modules/mongoose/lib/schematype.js:1320:13)
            at SchemaString.SchemaType.doValidate (/Users/saudalmutawa/TTP-BACK/TTP-Back/node_modules/mongoose/lib/schematype.js:1304:7)
            at /Users/saudalmutawa/TTP-BACK/TTP-Back/node_modules/mongoose/lib/document.js:2723:18
            at processTicksAndRejections (internal/process/task_queues.js:77:11) {
          properties: {
            validator: [Function (anonymous)],
            message: 'Path `category` is required.',
            type: 'required',
            path: 'category',
            value: ''
          },
          kind: 'required',
          path: 'category',
          value: '',
          reason: undefined,
          [Symbol(mongoose:validatorError)]: true
        }
      },
      _message: 'category validation failed'
    }
  },
  level: 'error',
  timestamp: '2022-02-27 16:18:14'
}
{
  message: {
    createCategoryDBError: Error: category validation failed: category: Path `category` is required.
        at ValidationError.inspect (/Users/saudalmutawa/TTP-BACK/TTP-Back/node_modules/mongoose/lib/error/validation.js:48:26)
        at formatValue (internal/util/inspect.js:745:19)
        at formatProperty (internal/util/inspect.js:1660:11)
        at formatRaw (internal/util/inspect.js:987:9)
        at formatValue (internal/util/inspect.js:774:10)
        at formatProperty (internal/util/inspect.js:1660:11)
        at formatRaw (internal/util/inspect.js:987:9)
        at formatValue (internal/util/inspect.js:774:10)
        at inspect (internal/util/inspect.js:319:10)
        at Format.transform (/Users/saudalmutawa/TTP-BACK/TTP-Back/node_modules/logform/pretty-print.js:27:19) {
      errors: {
        category: ValidatorError: Path `category` is required.
            at validate (/Users/saudalmutawa/TTP-BACK/TTP-Back/node_modules/mongoose/lib/schematype.js:1320:13)
            at SchemaString.SchemaType.doValidate (/Users/saudalmutawa/TTP-BACK/TTP-Back/node_modules/mongoose/lib/schematype.js:1304:7)
            at /Users/saudalmutawa/TTP-BACK/TTP-Back/node_modules/mongoose/lib/document.js:2723:18
            at processTicksAndRejections (internal/process/task_queues.js:77:11) {
          properties: {
            validator: [Function (anonymous)],
            message: 'Path `category` is required.',
            type: 'required',
            path: 'category',
            value: ''
          },
          kind: 'required',
          path: 'category',
          value: '',
          reason: undefined,
          [Symbol(mongoose:validatorError)]: true
        }
      },
      _message: 'category validation failed'
    }
  },
  level: 'error',
  timestamp: '2022-02-27 16:21:27'
}
{
  message: {
    createCategoryDBError: Error: category validation failed: category: Path `category` is required.
        at ValidationError.inspect (/Users/saudalmutawa/TTP-BACK/TTP-Back/node_modules/mongoose/lib/error/validation.js:48:26)
        at formatValue (internal/util/inspect.js:745:19)
        at formatProperty (internal/util/inspect.js:1660:11)
        at formatRaw (internal/util/inspect.js:987:9)
        at formatValue (internal/util/inspect.js:774:10)
        at formatProperty (internal/util/inspect.js:1660:11)
        at formatRaw (internal/util/inspect.js:987:9)
        at formatValue (internal/util/inspect.js:774:10)
        at inspect (internal/util/inspect.js:319:10)
        at Format.transform (/Users/saudalmutawa/TTP-BACK/TTP-Back/node_modules/logform/pretty-print.js:27:19) {
      errors: {
        category: ValidatorError: Path `category` is required.
            at validate (/Users/saudalmutawa/TTP-BACK/TTP-Back/node_modules/mongoose/lib/schematype.js:1320:13)
            at SchemaString.SchemaType.doValidate (/Users/saudalmutawa/TTP-BACK/TTP-Back/node_modules/mongoose/lib/schematype.js:1304:7)
            at /Users/saudalmutawa/TTP-BACK/TTP-Back/node_modules/mongoose/lib/document.js:2723:18
            at processTicksAndRejections (internal/process/task_queues.js:77:11) {
          properties: {
            validator: [Function (anonymous)],
            message: 'Path `category` is required.',
            type: 'required',
            path: 'category',
            value: ''
          },
          kind: 'required',
          path: 'category',
          value: '',
          reason: undefined,
          [Symbol(mongoose:validatorError)]: true
        }
      },
      _message: 'category validation failed'
    }
  },
  level: 'error',
  timestamp: '2022-02-27 16:21:33'
}
{
  message: {
    createCategoryDBError: Error: category validation failed: category: Path `category` is required.
        at ValidationError.inspect (/Users/saudalmutawa/TTP-BACK/TTP-Back/node_modules/mongoose/lib/error/validation.js:48:26)
        at formatValue (internal/util/inspect.js:745:19)
        at formatProperty (internal/util/inspect.js:1660:11)
        at formatRaw (internal/util/inspect.js:987:9)
        at formatValue (internal/util/inspect.js:774:10)
        at formatProperty (internal/util/inspect.js:1660:11)
        at formatRaw (internal/util/inspect.js:987:9)
        at formatValue (internal/util/inspect.js:774:10)
        at inspect (internal/util/inspect.js:319:10)
        at Format.transform (/Users/saudalmutawa/TTP-BACK/TTP-Back/node_modules/logform/pretty-print.js:27:19) {
      errors: {
        category: ValidatorError: Path `category` is required.
            at validate (/Users/saudalmutawa/TTP-BACK/TTP-Back/node_modules/mongoose/lib/schematype.js:1320:13)
            at SchemaString.SchemaType.doValidate (/Users/saudalmutawa/TTP-BACK/TTP-Back/node_modules/mongoose/lib/schematype.js:1304:7)
            at /Users/saudalmutawa/TTP-BACK/TTP-Back/node_modules/mongoose/lib/document.js:2723:18
            at processTicksAndRejections (internal/process/task_queues.js:77:11) {
          properties: {
            validator: [Function (anonymous)],
            message: 'Path `category` is required.',
            type: 'required',
            path: 'category',
            value: ''
          },
          kind: 'required',
          path: 'category',
          value: '',
          reason: undefined,
          [Symbol(mongoose:validatorError)]: true
        }
      },
      _message: 'category validation failed'
    }
  },
  level: 'error',
  timestamp: '2022-02-27 16:21:33'
}
{
  message: {
    createCategoryDBError: MongoServerError: E11000 duplicate key error collection: TTP.categories index: category_1 dup key: { category: "Main1" }
        at /Users/saudalmutawa/TTP-BACK/TTP-Back/node_modules/mongoose/node_modules/mongodb/src/operations/insert.ts:75:25
        at /Users/saudalmutawa/TTP-BACK/TTP-Back/node_modules/mongoose/node_modules/mongodb/src/cmap/connection_pool.ts:482:13
        at handleOperationResult (/Users/saudalmutawa/TTP-BACK/TTP-Back/node_modules/mongoose/node_modules/mongodb/src/sdam/server.ts:610:5)
        at MessageStream.messageHandler (/Users/saudalmutawa/TTP-BACK/TTP-Back/node_modules/mongoose/node_modules/mongodb/src/cmap/connection.ts:765:5)
        at MessageStream.emit (events.js:400:28)
        at MessageStream.emit (domain.js:475:12)
        at processIncomingData (/Users/saudalmutawa/TTP-BACK/TTP-Back/node_modules/mongoose/node_modules/mongodb/src/cmap/message_stream.ts:168:12)
        at MessageStream._write (/Users/saudalmutawa/TTP-BACK/TTP-Back/node_modules/mongoose/node_modules/mongodb/src/cmap/message_stream.ts:65:5)
        at writeOrBuffer (internal/streams/writable.js:358:12)
        at MessageStream.Writable.write (internal/streams/writable.js:303:10) {
      index: 0,
      code: 11000,
      keyPattern: { category: 1 },
      keyValue: { category: 'Main1' }
    }
  },
  level: 'error',
  timestamp: '2022-02-27 16:21:45'
}
{
  message: {
    createCategoryDBError: MongoServerError: E11000 duplicate key error collection: TTP.categories index: category_1 dup key: { category: "Main2" }
        at /Users/saudalmutawa/TTP-BACK/TTP-Back/node_modules/mongoose/node_modules/mongodb/src/operations/insert.ts:75:25
        at /Users/saudalmutawa/TTP-BACK/TTP-Back/node_modules/mongoose/node_modules/mongodb/src/cmap/connection_pool.ts:482:13
        at handleOperationResult (/Users/saudalmutawa/TTP-BACK/TTP-Back/node_modules/mongoose/node_modules/mongodb/src/sdam/server.ts:610:5)
        at MessageStream.messageHandler (/Users/saudalmutawa/TTP-BACK/TTP-Back/node_modules/mongoose/node_modules/mongodb/src/cmap/connection.ts:765:5)
        at MessageStream.emit (events.js:400:28)
        at MessageStream.emit (domain.js:475:12)
        at processIncomingData (/Users/saudalmutawa/TTP-BACK/TTP-Back/node_modules/mongoose/node_modules/mongodb/src/cmap/message_stream.ts:168:12)
        at MessageStream._write (/Users/saudalmutawa/TTP-BACK/TTP-Back/node_modules/mongoose/node_modules/mongodb/src/cmap/message_stream.ts:65:5)
        at writeOrBuffer (internal/streams/writable.js:358:12)
        at MessageStream.Writable.write (internal/streams/writable.js:303:10) {
      index: 0,
      code: 11000,
      keyPattern: { category: 1 },
      keyValue: { category: 'Main2' }
    }
  },
  level: 'error',
  timestamp: '2022-02-27 16:21:59'
}
{
  message: { db: 'mongodb://localhost:27017/TTP' },
  level: 'info',
  timestamp: '2022-02-27 16:29:13'
}
{
  message: {
    createCategoryDBError: Error: category validation failed: category: Path `category` is required.
        at ValidationError.inspect (/Users/saudalmutawa/TTP-BACK/TTP-Back/node_modules/mongoose/lib/error/validation.js:48:26)
        at formatValue (internal/util/inspect.js:745:19)
        at formatProperty (internal/util/inspect.js:1660:11)
        at formatRaw (internal/util/inspect.js:987:9)
        at formatValue (internal/util/inspect.js:774:10)
        at formatProperty (internal/util/inspect.js:1660:11)
        at formatRaw (internal/util/inspect.js:987:9)
        at formatValue (internal/util/inspect.js:774:10)
        at inspect (internal/util/inspect.js:319:10)
        at Format.transform (/Users/saudalmutawa/TTP-BACK/TTP-Back/node_modules/logform/pretty-print.js:27:19) {
      errors: {
        category: ValidatorError: Path `category` is required.
            at validate (/Users/saudalmutawa/TTP-BACK/TTP-Back/node_modules/mongoose/lib/schematype.js:1320:13)
            at SchemaString.SchemaType.doValidate (/Users/saudalmutawa/TTP-BACK/TTP-Back/node_modules/mongoose/lib/schematype.js:1304:7)
            at /Users/saudalmutawa/TTP-BACK/TTP-Back/node_modules/mongoose/lib/document.js:2723:18
            at processTicksAndRejections (internal/process/task_queues.js:77:11) {
          properties: {
            validator: [Function (anonymous)],
            message: 'Path `category` is required.',
            type: 'required',
            path: 'category',
            value: ''
          },
          kind: 'required',
          path: 'category',
          value: '',
          reason: undefined,
          [Symbol(mongoose:validatorError)]: true
        }
      },
      _message: 'category validation failed'
    }
  },
  level: 'error',
  timestamp: '2022-02-27 16:30:13'
}
{
  message: { db: 'mongodb://localhost:27017/TTP' },
  level: 'info',
  timestamp: '2022-02-27 16:31:24'
}
{
  message: { createCategoryDBError: 'Duplicate category error' },
  level: 'error',
  timestamp: '2022-02-27 16:31:33'
}
{
  message: { db: 'mongodb://localhost:27017/TTP' },
  level: 'info',
  timestamp: '2022-02-27 16:32:03'
}
{
  message: { db: 'mongodb://localhost:27017/TTP' },
  level: 'info',
  timestamp: '2022-02-27 16:33:24'
}
{
  message: {
    createCategoryDBError: Error: category validation failed: category: Path `category` is required.
        at ValidationError.inspect (/Users/saudalmutawa/TTP-BACK/TTP-Back/node_modules/mongoose/lib/error/validation.js:48:26)
        at formatValue (internal/util/inspect.js:745:19)
        at formatProperty (internal/util/inspect.js:1660:11)
        at formatRaw (internal/util/inspect.js:987:9)
        at formatValue (internal/util/inspect.js:774:10)
        at formatProperty (internal/util/inspect.js:1660:11)
        at formatRaw (internal/util/inspect.js:987:9)
        at formatValue (internal/util/inspect.js:774:10)
        at inspect (internal/util/inspect.js:319:10)
        at Format.transform (/Users/saudalmutawa/TTP-BACK/TTP-Back/node_modules/logform/pretty-print.js:27:19) {
      errors: {
        category: ValidatorError: Path `category` is required.
            at validate (/Users/saudalmutawa/TTP-BACK/TTP-Back/node_modules/mongoose/lib/schematype.js:1320:13)
            at SchemaString.SchemaType.doValidate (/Users/saudalmutawa/TTP-BACK/TTP-Back/node_modules/mongoose/lib/schematype.js:1304:7)
            at /Users/saudalmutawa/TTP-BACK/TTP-Back/node_modules/mongoose/lib/document.js:2723:18
            at processTicksAndRejections (internal/process/task_queues.js:77:11) {
          properties: {
            validator: [Function (anonymous)],
            message: 'Path `category` is required.',
            type: 'required',
            path: 'category',
            value: ''
          },
          kind: 'required',
          path: 'category',
          value: '',
          reason: undefined,
          [Symbol(mongoose:validatorError)]: true
        }
      },
      _message: 'category validation failed'
    }
  },
  level: 'error',
  timestamp: '2022-02-27 16:33:32'
}
{
  message: { db: 'mongodb://localhost:27017/TTP' },
  level: 'info',
  timestamp: '2022-02-27 16:33:37'
}
{
  message: { db: 'mongodb://localhost:27017/TTP' },
  level: 'info',
  timestamp: '2022-02-27 16:33:58'
}
{
  message: { db: 'mongodb://localhost:27017/TTP' },
  level: 'info',
  timestamp: '2022-02-27 16:34:30'
}
{
  message: {
    createCategoryDBError: Error: category validation failed: category: Path `category` is required.
        at ValidationError.inspect (/Users/saudalmutawa/TTP-BACK/TTP-Back/node_modules/mongoose/lib/error/validation.js:48:26)
        at formatValue (internal/util/inspect.js:745:19)
        at formatProperty (internal/util/inspect.js:1660:11)
        at formatRaw (internal/util/inspect.js:987:9)
        at formatValue (internal/util/inspect.js:774:10)
        at formatProperty (internal/util/inspect.js:1660:11)
        at formatRaw (internal/util/inspect.js:987:9)
        at formatValue (internal/util/inspect.js:774:10)
        at inspect (internal/util/inspect.js:319:10)
        at Format.transform (/Users/saudalmutawa/TTP-BACK/TTP-Back/node_modules/logform/pretty-print.js:27:19) {
      errors: {
        category: ValidatorError: Path `category` is required.
            at validate (/Users/saudalmutawa/TTP-BACK/TTP-Back/node_modules/mongoose/lib/schematype.js:1320:13)
            at SchemaString.SchemaType.doValidate (/Users/saudalmutawa/TTP-BACK/TTP-Back/node_modules/mongoose/lib/schematype.js:1304:7)
            at /Users/saudalmutawa/TTP-BACK/TTP-Back/node_modules/mongoose/lib/document.js:2723:18
            at processTicksAndRejections (internal/process/task_queues.js:77:11) {
          properties: {
            validator: [Function (anonymous)],
            message: 'Path `category` is required.',
            type: 'required',
            path: 'category',
            value: ''
          },
          kind: 'required',
          path: 'category',
          value: '',
          reason: undefined,
          [Symbol(mongoose:validatorError)]: true
        }
      },
      _message: 'category validation failed'
    }
  },
  level: 'error',
  timestamp: '2022-02-27 16:34:34'
}
{
  message: { db: 'mongodb://localhost:27017/TTP' },
  level: 'info',
  timestamp: '2022-02-27 16:35:06'
}
{
  message: { db: 'mongodb://localhost:27017/TTP' },
  level: 'info',
  timestamp: '2022-02-27 16:37:35'
}
{
  message: { db: 'mongodb://localhost:27017/TTP' },
  level: 'info',
  timestamp: '2022-02-27 16:38:56'
}
{
  message: {
    createCategoryDBError: Error: category validation failed: category: Path `category` is required.
        at ValidationError.inspect (/Users/saudalmutawa/TTP-BACK/TTP-Back/node_modules/mongoose/lib/error/validation.js:48:26)
        at formatValue (internal/util/inspect.js:745:19)
        at formatProperty (internal/util/inspect.js:1660:11)
        at formatRaw (internal/util/inspect.js:987:9)
        at formatValue (internal/util/inspect.js:774:10)
        at formatProperty (internal/util/inspect.js:1660:11)
        at formatRaw (internal/util/inspect.js:987:9)
        at formatValue (internal/util/inspect.js:774:10)
        at inspect (internal/util/inspect.js:319:10)
        at Format.transform (/Users/saudalmutawa/TTP-BACK/TTP-Back/node_modules/logform/pretty-print.js:27:19) {
      errors: {
        category: ValidatorError: Path `category` is required.
            at validate (/Users/saudalmutawa/TTP-BACK/TTP-Back/node_modules/mongoose/lib/schematype.js:1320:13)
            at SchemaString.SchemaType.doValidate (/Users/saudalmutawa/TTP-BACK/TTP-Back/node_modules/mongoose/lib/schematype.js:1304:7)
            at /Users/saudalmutawa/TTP-BACK/TTP-Back/node_modules/mongoose/lib/document.js:2723:18
            at processTicksAndRejections (internal/process/task_queues.js:77:11) {
          properties: {
            validator: [Function (anonymous)],
            message: 'Path `category` is required.',
            type: 'required',
            path: 'category',
            value: ''
          },
          kind: 'required',
          path: 'category',
          value: '',
          reason: undefined,
          [Symbol(mongoose:validatorError)]: true
        }
      },
      _message: 'category validation failed'
    }
  },
  level: 'error',
  timestamp: '2022-02-27 16:39:10'
}
{
  message: { db: 'mongodb://localhost:27017/TTP' },
  level: 'info',
  timestamp: '2022-02-27 16:39:28'
}
{
  message: {
    createCategoryDBError: Error: category validation failed: category: Path `category` is required.
        at ValidationError.inspect (/Users/saudalmutawa/TTP-BACK/TTP-Back/node_modules/mongoose/lib/error/validation.js:48:26)
        at formatValue (internal/util/inspect.js:745:19)
        at formatProperty (internal/util/inspect.js:1660:11)
        at formatRaw (internal/util/inspect.js:987:9)
        at formatValue (internal/util/inspect.js:774:10)
        at formatProperty (internal/util/inspect.js:1660:11)
        at formatRaw (internal/util/inspect.js:987:9)
        at formatValue (internal/util/inspect.js:774:10)
        at inspect (internal/util/inspect.js:319:10)
        at Format.transform (/Users/saudalmutawa/TTP-BACK/TTP-Back/node_modules/logform/pretty-print.js:27:19) {
      errors: {
        category: ValidatorError: Path `category` is required.
            at validate (/Users/saudalmutawa/TTP-BACK/TTP-Back/node_modules/mongoose/lib/schematype.js:1320:13)
            at SchemaString.SchemaType.doValidate (/Users/saudalmutawa/TTP-BACK/TTP-Back/node_modules/mongoose/lib/schematype.js:1304:7)
            at /Users/saudalmutawa/TTP-BACK/TTP-Back/node_modules/mongoose/lib/document.js:2723:18
            at processTicksAndRejections (internal/process/task_queues.js:77:11) {
          properties: {
            validator: [Function (anonymous)],
            message: 'Path `category` is required.',
            type: 'required',
            path: 'category',
            value: ''
          },
          kind: 'required',
          path: 'category',
          value: '',
          reason: undefined,
          [Symbol(mongoose:validatorError)]: true
        }
      },
      _message: 'category validation failed'
    }
  },
  level: 'error',
  timestamp: '2022-02-27 16:41:45'
}
{
  message: {
    createCategoryDBError: Error: category validation failed: category: Path `category` is required.
        at ValidationError.inspect (/Users/saudalmutawa/TTP-BACK/TTP-Back/node_modules/mongoose/lib/error/validation.js:48:26)
        at formatValue (internal/util/inspect.js:745:19)
        at formatProperty (internal/util/inspect.js:1660:11)
        at formatRaw (internal/util/inspect.js:987:9)
        at formatValue (internal/util/inspect.js:774:10)
        at formatProperty (internal/util/inspect.js:1660:11)
        at formatRaw (internal/util/inspect.js:987:9)
        at formatValue (internal/util/inspect.js:774:10)
        at inspect (internal/util/inspect.js:319:10)
        at Format.transform (/Users/saudalmutawa/TTP-BACK/TTP-Back/node_modules/logform/pretty-print.js:27:19) {
      errors: {
        category: ValidatorError: Path `category` is required.
            at validate (/Users/saudalmutawa/TTP-BACK/TTP-Back/node_modules/mongoose/lib/schematype.js:1320:13)
            at SchemaString.SchemaType.doValidate (/Users/saudalmutawa/TTP-BACK/TTP-Back/node_modules/mongoose/lib/schematype.js:1304:7)
            at /Users/saudalmutawa/TTP-BACK/TTP-Back/node_modules/mongoose/lib/document.js:2723:18
            at processTicksAndRejections (internal/process/task_queues.js:77:11) {
          properties: {
            validator: [Function (anonymous)],
            message: 'Path `category` is required.',
            type: 'required',
            path: 'category',
            value: ''
          },
          kind: 'required',
          path: 'category',
          value: '',
          reason: undefined,
          [Symbol(mongoose:validatorError)]: true
        }
      },
      _message: 'category validation failed'
    }
  },
  level: 'error',
  timestamp: '2022-02-27 16:48:58'
}
{
  message: { db: 'mongodb://localhost:27017/TTP' },
  level: 'info',
  timestamp: '2022-03-01 13:38:21'
}
{
  message: { db: 'mongodb://localhost:27017/TTP' },
  level: 'info',
  timestamp: '2022-03-01 13:38:52'
}
{
  message: { db: 'mongodb://localhost:27017/TTP' },
  level: 'info',
  timestamp: '2022-03-01 14:04:39'
}
{
  message: { db: 'mongodb://localhost:27017/TTP' },
  level: 'info',
  timestamp: '2022-03-01 14:05:26'
}
{
  message: { db: 'mongodb://localhost:27017/TTP' },
  level: 'info',
  timestamp: '2022-03-01 14:05:35'
}
{
  message: { db: 'mongodb://localhost:27017/TTP' },
  level: 'info',
  timestamp: '2022-03-01 14:13:58'
}
{
  message: { db: 'mongodb://localhost:27017/TTP' },
  level: 'info',
  timestamp: '2022-03-01 14:14:18'
}
{
  message: { db: 'mongodb://localhost:27017/TTP' },
  level: 'info',
  timestamp: '2022-03-01 14:46:21'
}
{
  message: { db: 'mongodb://localhost:27017/TTP' },
  level: 'info',
  timestamp: '2022-03-01 15:04:14'
}
{
  message: { db: 'mongodb://localhost:27017/TTP' },
  level: 'info',
  timestamp: '2022-03-01 15:28:42'
}
{
  message: { db: 'mongodb://localhost:27017/TTP' },
  level: 'info',
  timestamp: '2022-03-01 15:29:27'
}
{
  message: { db: 'mongodb://localhost:27017/TTP' },
  level: 'info',
  timestamp: '2022-03-01 15:29:55'
}
{
  message: { db: 'mongodb://localhost:27017/TTP' },
  level: 'info',
  timestamp: '2022-03-01 15:32:36'
}
{
  message: { db: 'mongodb://localhost:27017/TTP' },
  level: 'info',
  timestamp: '2022-03-01 15:33:45'
}
{
  message: { db: 'mongodb://localhost:27017/TTP' },
  level: 'info',
  timestamp: '2022-03-01 15:36:10'
}
{
  message: { db: 'mongodb://localhost:27017/TTP' },
  level: 'info',
  timestamp: '2022-03-01 15:37:37'
}
{
  message: { db: 'mongodb://localhost:27017/TTP' },
  level: 'info',
  timestamp: '2022-03-01 15:37:46'
}
{
  message: { db: 'mongodb://localhost:27017/TTP' },
  level: 'info',
  timestamp: '2022-03-01 15:39:18'
}
{
  message: { db: 'mongodb://localhost:27017/TTP' },
  level: 'info',
  timestamp: '2022-03-01 15:43:51'
}
{
  message: { db: 'mongodb://localhost:27017/TTP' },
  level: 'info',
  timestamp: '2022-03-01 15:44:40'
}
{
  message: { db: 'mongodb://localhost:27017/TTP' },
  level: 'info',
  timestamp: '2022-03-01 15:45:04'
}
{
  message: { db: 'mongodb://localhost:27017/TTP' },
  level: 'info',
  timestamp: '2022-03-01 16:05:46'
}
{
  message: { db: 'mongodb://localhost:27017/TTP' },
  level: 'info',
  timestamp: '2022-03-02 13:20:02'
}
{
  message: {
    createclientDBError: Error: clients validation failed: clientName: Path `clientName` is required.
        at ValidationError.inspect (/Users/saudalmutawa/TTP-BACK/TTP-Back/node_modules/mongoose/lib/error/validation.js:48:26)
        at formatValue (internal/util/inspect.js:745:19)
        at formatProperty (internal/util/inspect.js:1660:11)
        at formatRaw (internal/util/inspect.js:987:9)
        at formatValue (internal/util/inspect.js:774:10)
        at formatProperty (internal/util/inspect.js:1660:11)
        at formatRaw (internal/util/inspect.js:987:9)
        at formatValue (internal/util/inspect.js:774:10)
        at inspect (internal/util/inspect.js:319:10)
        at Format.transform (/Users/saudalmutawa/TTP-BACK/TTP-Back/node_modules/logform/pretty-print.js:27:19) {
      errors: {
        clientName: ValidatorError: Path `clientName` is required.
            at validate (/Users/saudalmutawa/TTP-BACK/TTP-Back/node_modules/mongoose/lib/schematype.js:1320:13)
            at SchemaString.SchemaType.doValidate (/Users/saudalmutawa/TTP-BACK/TTP-Back/node_modules/mongoose/lib/schematype.js:1304:7)
            at /Users/saudalmutawa/TTP-BACK/TTP-Back/node_modules/mongoose/lib/document.js:2723:18
            at processTicksAndRejections (internal/process/task_queues.js:77:11) {
          properties: {
            validator: [Function (anonymous)],
            message: 'Path `clientName` is required.',
            type: 'required',
            path: 'clientName',
            value: undefined
          },
          kind: 'required',
          path: 'clientName',
          value: undefined,
          reason: undefined,
          [Symbol(mongoose:validatorError)]: true
        }
      },
      _message: 'clients validation failed'
    }
  },
  level: 'error',
  timestamp: '2022-03-02 13:49:48'
}
{
  message: { db: 'mongodb://localhost:27017/TTP' },
  level: 'info',
  timestamp: '2022-03-02 13:49:54'
}
{
  message: { db: 'mongodb://localhost:27017/TTP' },
  level: 'info',
  timestamp: '2022-03-02 15:58:43'
}
{
  message: { db: 'mongodb://localhost:27017/TTP' },
  level: 'info',
  timestamp: '2022-03-02 15:58:51'
}
{
  message: { db: 'mongodb://localhost:27017/TTP' },
  level: 'info',
  timestamp: '2022-03-02 16:15:32'
}
{
  message: { db: 'mongodb://localhost:27017/TTP' },
  level: 'info',
  timestamp: '2022-03-02 16:15:39'
}
{
  message: {
    getclientDBError: MongooseError: Cannot populate path `tasksId` because it is not in your schema. Set the `strictPopulate` option to false to override.
        at getModelsMapForPopulate (/Users/saudalmutawa/TTP-BACK/TTP-Back/node_modules/mongoose/lib/helpers/populate/getModelsMapForPopulate.js:47:12)
        at populate (/Users/saudalmutawa/TTP-BACK/TTP-Back/node_modules/mongoose/lib/model.js:4485:21)
        at _populate (/Users/saudalmutawa/TTP-BACK/TTP-Back/node_modules/mongoose/lib/model.js:4445:5)
        at /Users/saudalmutawa/TTP-BACK/TTP-Back/node_modules/mongoose/lib/model.js:4423:5
        at promiseOrCallback (/Users/saudalmutawa/TTP-BACK/TTP-Back/node_modules/mongoose/lib/helpers/promiseOrCallback.js:10:12)
        at Mongoose._promiseOrCallback (/Users/saudalmutawa/TTP-BACK/TTP-Back/node_modules/mongoose/lib/index.js:1140:10)
        at Function.Model.populate (/Users/saudalmutawa/TTP-BACK/TTP-Back/node_modules/mongoose/lib/model.js:4421:23)
        at cb (/Users/saudalmutawa/TTP-BACK/TTP-Back/node_modules/mongoose/lib/query.js:2216:26)
        at /Users/saudalmutawa/TTP-BACK/TTP-Back/node_modules/mongoose/node_modules/mongodb/src/utils.ts:624:5
        at /Users/saudalmutawa/TTP-BACK/TTP-Back/node_modules/mongoose/node_modules/mongodb/src/cursor/abstract_cursor.ts:417:35
  },
  level: 'error',
  timestamp: '2022-03-02 16:15:41'
}
{
  message: { db: 'mongodb://localhost:27017/TTP' },
  level: 'info',
  timestamp: '2022-03-02 16:15:45'
}
{
  message: { db: 'mongodb://localhost:27017/TTP' },
  level: 'info',
  timestamp: '2022-03-02 16:16:21'
}
{
  message: {
    createclientDBError: Error: clients validation failed: clientName: Path `clientName` is required.
        at ValidationError.inspect (/Users/saudalmutawa/TTP-BACK/TTP-Back/node_modules/mongoose/lib/error/validation.js:48:26)
        at formatValue (internal/util/inspect.js:745:19)
        at formatProperty (internal/util/inspect.js:1660:11)
        at formatRaw (internal/util/inspect.js:987:9)
        at formatValue (internal/util/inspect.js:774:10)
        at formatProperty (internal/util/inspect.js:1660:11)
        at formatRaw (internal/util/inspect.js:987:9)
        at formatValue (internal/util/inspect.js:774:10)
        at inspect (internal/util/inspect.js:319:10)
        at Format.transform (/Users/saudalmutawa/TTP-BACK/TTP-Back/node_modules/logform/pretty-print.js:27:19) {
      errors: {
        clientName: ValidatorError: Path `clientName` is required.
            at validate (/Users/saudalmutawa/TTP-BACK/TTP-Back/node_modules/mongoose/lib/schematype.js:1320:13)
            at SchemaString.SchemaType.doValidate (/Users/saudalmutawa/TTP-BACK/TTP-Back/node_modules/mongoose/lib/schematype.js:1304:7)
            at /Users/saudalmutawa/TTP-BACK/TTP-Back/node_modules/mongoose/lib/document.js:2723:18
            at processTicksAndRejections (internal/process/task_queues.js:77:11) {
          properties: {
            validator: [Function (anonymous)],
            message: 'Path `clientName` is required.',
            type: 'required',
            path: 'clientName',
            value: ''
          },
          kind: 'required',
          path: 'clientName',
          value: '',
          reason: undefined,
          [Symbol(mongoose:validatorError)]: true
        }
      },
      _message: 'clients validation failed'
    }
  },
  level: 'error',
  timestamp: '2022-03-02 16:17:12'
}
{
  message: { db: 'mongodb://localhost:27017/TTP' },
  level: 'info',
  timestamp: '2022-03-02 16:23:26'
}
{
  message: { db: 'mongodb://localhost:27017/TTP' },
  level: 'info',
  timestamp: '2022-03-02 16:35:32'
}
{
  message: { db: 'mongodb://localhost:27017/TTP' },
  level: 'info',
  timestamp: '2022-03-03 10:56:47'
}
{
  message: { db: 'mongodb://localhost:27017/TTP' },
  level: 'info',
  timestamp: '2022-03-03 10:57:58'
}
{
  message: { db: 'mongodb://localhost:27017/TTP' },
  level: 'info',
  timestamp: '2022-03-03 11:04:35'
}
{
  message: { db: 'mongodb://localhost:27017/TTP' },
  level: 'info',
  timestamp: '2022-03-03 11:04:52'
}
{
  message: { db: 'mongodb://localhost:27017/TTP' },
  level: 'info',
  timestamp: '2022-03-03 11:32:30'
}
{
  message: { db: 'mongodb://localhost:27017/TTP' },
  level: 'info',
  timestamp: '2022-03-03 11:38:40'
}
{
  message: { db: 'mongodb://localhost:27017/TTP' },
  level: 'info',
  timestamp: '2022-03-03 13:50:33'
}
{
  message: { db: 'mongodb://localhost:27017/TTP' },
  level: 'info',
  timestamp: '2022-03-03 13:50:41'
}
{
  message: { db: 'mongodb://localhost:27017/TTP' },
  level: 'info',
  timestamp: '2022-03-03 13:58:09'
}
{
  message: { db: 'mongodb://localhost:27017/TTP' },
  level: 'info',
  timestamp: '2022-03-03 15:09:36'
}
{
  message: { db: 'mongodb://localhost:27017/TTP' },
  level: 'info',
  timestamp: '2022-03-03 15:41:27'
}
{
  message: { db: 'mongodb://localhost:27017/TTP' },
  level: 'info',
  timestamp: '2022-03-04 13:15:45'
}
{
  message: {
    updateClientDBError: CastError: Cast to ObjectId failed for value "{ _id: undefined }" (type Object) at path "_id" for model "clients"
        at model.Query.exec (/Users/saudalmutawa/TTP-BACK/TTP-Back/node_modules/mongoose/lib/query.js:4650:21)
        at model.Query.Query.then (/Users/saudalmutawa/TTP-BACK/TTP-Back/node_modules/mongoose/lib/query.js:4749:15)
        at processTicksAndRejections (internal/process/task_queues.js:95:5) {
      messageFormat: undefined,
      stringValue: '"{ _id: undefined }"',
      kind: 'ObjectId',
      value: { _id: undefined },
      path: '_id',
      reason: BSONTypeError: Argument passed in must be a string of 12 bytes or a string of 24 hex characters
          at new BSONTypeError (/Users/saudalmutawa/TTP-BACK/TTP-Back/node_modules/bson/src/error.ts:16:5)
          at new ObjectId (/Users/saudalmutawa/TTP-BACK/TTP-Back/node_modules/bson/src/objectid.ts:86:15)
          at castObjectId (/Users/saudalmutawa/TTP-BACK/TTP-Back/node_modules/mongoose/lib/cast/objectid.js:24:12)
          at ObjectId.cast (/Users/saudalmutawa/TTP-BACK/TTP-Back/node_modules/mongoose/lib/schema/objectid.js:247:12)
          at ObjectId.SchemaType.applySetters (/Users/saudalmutawa/TTP-BACK/TTP-Back/node_modules/mongoose/lib/schematype.js:1179:12)
          at ObjectId.SchemaType._castForQuery (/Users/saudalmutawa/TTP-BACK/TTP-Back/node_modules/mongoose/lib/schematype.js:1613:15)
          at ObjectId.SchemaType.castForQuery (/Users/saudalmutawa/TTP-BACK/TTP-Back/node_modules/mongoose/lib/schematype.js:1603:15)
          at ObjectId.SchemaType.castForQueryWrapper (/Users/saudalmutawa/TTP-BACK/TTP-Back/node_modules/mongoose/lib/schematype.js:1580:20)
          at cast (/Users/saudalmutawa/TTP-BACK/TTP-Back/node_modules/mongoose/lib/cast.js:288:34)
          at model.Query.Query.cast (/Users/saudalmutawa/TTP-BACK/TTP-Back/node_modules/mongoose/lib/query.js:5085:12),
      valueType: 'Object'
    }
  },
  level: 'error',
  timestamp: '2022-03-04 13:57:11'
}
{
  message: { db: 'mongodb://localhost:27017/TTP' },
  level: 'info',
  timestamp: '2022-03-04 13:57:16'
}
{
  message: {
    updateClientDBError: CastError: Cast to ObjectId failed for value "{ _id: undefined }" (type Object) at path "_id" for model "clients"
        at model.Query.exec (/Users/saudalmutawa/TTP-BACK/TTP-Back/node_modules/mongoose/lib/query.js:4650:21)
        at model.Query.Query.then (/Users/saudalmutawa/TTP-BACK/TTP-Back/node_modules/mongoose/lib/query.js:4749:15)
        at processTicksAndRejections (internal/process/task_queues.js:95:5) {
      messageFormat: undefined,
      stringValue: '"{ _id: undefined }"',
      kind: 'ObjectId',
      value: { _id: undefined },
      path: '_id',
      reason: BSONTypeError: Argument passed in must be a string of 12 bytes or a string of 24 hex characters
          at new BSONTypeError (/Users/saudalmutawa/TTP-BACK/TTP-Back/node_modules/bson/src/error.ts:16:5)
          at new ObjectId (/Users/saudalmutawa/TTP-BACK/TTP-Back/node_modules/bson/src/objectid.ts:86:15)
          at castObjectId (/Users/saudalmutawa/TTP-BACK/TTP-Back/node_modules/mongoose/lib/cast/objectid.js:24:12)
          at ObjectId.cast (/Users/saudalmutawa/TTP-BACK/TTP-Back/node_modules/mongoose/lib/schema/objectid.js:247:12)
          at ObjectId.SchemaType.applySetters (/Users/saudalmutawa/TTP-BACK/TTP-Back/node_modules/mongoose/lib/schematype.js:1179:12)
          at ObjectId.SchemaType._castForQuery (/Users/saudalmutawa/TTP-BACK/TTP-Back/node_modules/mongoose/lib/schematype.js:1613:15)
          at ObjectId.SchemaType.castForQuery (/Users/saudalmutawa/TTP-BACK/TTP-Back/node_modules/mongoose/lib/schematype.js:1603:15)
          at ObjectId.SchemaType.castForQueryWrapper (/Users/saudalmutawa/TTP-BACK/TTP-Back/node_modules/mongoose/lib/schematype.js:1580:20)
          at cast (/Users/saudalmutawa/TTP-BACK/TTP-Back/node_modules/mongoose/lib/cast.js:288:34)
          at model.Query.Query.cast (/Users/saudalmutawa/TTP-BACK/TTP-Back/node_modules/mongoose/lib/query.js:5085:12),
      valueType: 'Object'
    }
  },
  level: 'error',
  timestamp: '2022-03-04 13:58:47'
}
{
  message: {
    updateClientDBError: CastError: Cast to ObjectId failed for value "{ _id: undefined }" (type Object) at path "_id" for model "clients"
        at model.Query.exec (/Users/saudalmutawa/TTP-BACK/TTP-Back/node_modules/mongoose/lib/query.js:4650:21)
        at model.Query.Query.then (/Users/saudalmutawa/TTP-BACK/TTP-Back/node_modules/mongoose/lib/query.js:4749:15)
        at processTicksAndRejections (internal/process/task_queues.js:95:5) {
      messageFormat: undefined,
      stringValue: '"{ _id: undefined }"',
      kind: 'ObjectId',
      value: { _id: undefined },
      path: '_id',
      reason: BSONTypeError: Argument passed in must be a string of 12 bytes or a string of 24 hex characters
          at new BSONTypeError (/Users/saudalmutawa/TTP-BACK/TTP-Back/node_modules/bson/src/error.ts:16:5)
          at new ObjectId (/Users/saudalmutawa/TTP-BACK/TTP-Back/node_modules/bson/src/objectid.ts:86:15)
          at castObjectId (/Users/saudalmutawa/TTP-BACK/TTP-Back/node_modules/mongoose/lib/cast/objectid.js:24:12)
          at ObjectId.cast (/Users/saudalmutawa/TTP-BACK/TTP-Back/node_modules/mongoose/lib/schema/objectid.js:247:12)
          at ObjectId.SchemaType.applySetters (/Users/saudalmutawa/TTP-BACK/TTP-Back/node_modules/mongoose/lib/schematype.js:1179:12)
          at ObjectId.SchemaType._castForQuery (/Users/saudalmutawa/TTP-BACK/TTP-Back/node_modules/mongoose/lib/schematype.js:1613:15)
          at ObjectId.SchemaType.castForQuery (/Users/saudalmutawa/TTP-BACK/TTP-Back/node_modules/mongoose/lib/schematype.js:1603:15)
          at ObjectId.SchemaType.castForQueryWrapper (/Users/saudalmutawa/TTP-BACK/TTP-Back/node_modules/mongoose/lib/schematype.js:1580:20)
          at cast (/Users/saudalmutawa/TTP-BACK/TTP-Back/node_modules/mongoose/lib/cast.js:288:34)
          at model.Query.Query.cast (/Users/saudalmutawa/TTP-BACK/TTP-Back/node_modules/mongoose/lib/query.js:5085:12),
      valueType: 'Object'
    }
  },
  level: 'error',
  timestamp: '2022-03-04 14:01:42'
}
{
  message: {
    updateClientDBError: CastError: Cast to ObjectId failed for value "{ _id: undefined }" (type Object) at path "_id" for model "clients"
        at model.Query.exec (/Users/saudalmutawa/TTP-BACK/TTP-Back/node_modules/mongoose/lib/query.js:4650:21)
        at model.Query.Query.then (/Users/saudalmutawa/TTP-BACK/TTP-Back/node_modules/mongoose/lib/query.js:4749:15)
        at processTicksAndRejections (internal/process/task_queues.js:95:5) {
      messageFormat: undefined,
      stringValue: '"{ _id: undefined }"',
      kind: 'ObjectId',
      value: { _id: undefined },
      path: '_id',
      reason: BSONTypeError: Argument passed in must be a string of 12 bytes or a string of 24 hex characters
          at new BSONTypeError (/Users/saudalmutawa/TTP-BACK/TTP-Back/node_modules/bson/src/error.ts:16:5)
          at new ObjectId (/Users/saudalmutawa/TTP-BACK/TTP-Back/node_modules/bson/src/objectid.ts:86:15)
          at castObjectId (/Users/saudalmutawa/TTP-BACK/TTP-Back/node_modules/mongoose/lib/cast/objectid.js:24:12)
          at ObjectId.cast (/Users/saudalmutawa/TTP-BACK/TTP-Back/node_modules/mongoose/lib/schema/objectid.js:247:12)
          at ObjectId.SchemaType.applySetters (/Users/saudalmutawa/TTP-BACK/TTP-Back/node_modules/mongoose/lib/schematype.js:1179:12)
          at ObjectId.SchemaType._castForQuery (/Users/saudalmutawa/TTP-BACK/TTP-Back/node_modules/mongoose/lib/schematype.js:1613:15)
          at ObjectId.SchemaType.castForQuery (/Users/saudalmutawa/TTP-BACK/TTP-Back/node_modules/mongoose/lib/schematype.js:1603:15)
          at ObjectId.SchemaType.castForQueryWrapper (/Users/saudalmutawa/TTP-BACK/TTP-Back/node_modules/mongoose/lib/schematype.js:1580:20)
          at cast (/Users/saudalmutawa/TTP-BACK/TTP-Back/node_modules/mongoose/lib/cast.js:288:34)
          at model.Query.Query.cast (/Users/saudalmutawa/TTP-BACK/TTP-Back/node_modules/mongoose/lib/query.js:5085:12),
      valueType: 'Object'
    }
  },
  level: 'error',
  timestamp: '2022-03-04 14:02:49'
}
{
  message: { db: 'mongodb://localhost:27017/TTP' },
  level: 'info',
  timestamp: '2022-03-04 14:04:46'
}
{
  message: {
    updateClientDBError: CastError: Cast to ObjectId failed for value "{ _id: undefined }" (type Object) at path "_id" for model "clients"
        at model.Query.exec (/Users/saudalmutawa/TTP-BACK/TTP-Back/node_modules/mongoose/lib/query.js:4650:21)
        at model.Query.Query.then (/Users/saudalmutawa/TTP-BACK/TTP-Back/node_modules/mongoose/lib/query.js:4749:15)
        at processTicksAndRejections (internal/process/task_queues.js:95:5) {
      messageFormat: undefined,
      stringValue: '"{ _id: undefined }"',
      kind: 'ObjectId',
      value: { _id: undefined },
      path: '_id',
      reason: BSONTypeError: Argument passed in must be a string of 12 bytes or a string of 24 hex characters
          at new BSONTypeError (/Users/saudalmutawa/TTP-BACK/TTP-Back/node_modules/bson/src/error.ts:16:5)
          at new ObjectId (/Users/saudalmutawa/TTP-BACK/TTP-Back/node_modules/bson/src/objectid.ts:86:15)
          at castObjectId (/Users/saudalmutawa/TTP-BACK/TTP-Back/node_modules/mongoose/lib/cast/objectid.js:24:12)
          at ObjectId.cast (/Users/saudalmutawa/TTP-BACK/TTP-Back/node_modules/mongoose/lib/schema/objectid.js:247:12)
          at ObjectId.SchemaType.applySetters (/Users/saudalmutawa/TTP-BACK/TTP-Back/node_modules/mongoose/lib/schematype.js:1179:12)
          at ObjectId.SchemaType._castForQuery (/Users/saudalmutawa/TTP-BACK/TTP-Back/node_modules/mongoose/lib/schematype.js:1613:15)
          at ObjectId.SchemaType.castForQuery (/Users/saudalmutawa/TTP-BACK/TTP-Back/node_modules/mongoose/lib/schematype.js:1603:15)
          at ObjectId.SchemaType.castForQueryWrapper (/Users/saudalmutawa/TTP-BACK/TTP-Back/node_modules/mongoose/lib/schematype.js:1580:20)
          at cast (/Users/saudalmutawa/TTP-BACK/TTP-Back/node_modules/mongoose/lib/cast.js:288:34)
          at model.Query.Query.cast (/Users/saudalmutawa/TTP-BACK/TTP-Back/node_modules/mongoose/lib/query.js:5085:12),
      valueType: 'Object'
    }
  },
  level: 'error',
  timestamp: '2022-03-04 14:05:05'
}
{
  message: { db: 'mongodb://localhost:27017/TTP' },
  level: 'info',
  timestamp: '2022-03-04 14:05:22'
}
{
  message: {
    updateClientDBError: CastError: Cast to ObjectId failed for value "{ _id: undefined }" (type Object) at path "_id" for model "clients"
        at model.Query.exec (/Users/saudalmutawa/TTP-BACK/TTP-Back/node_modules/mongoose/lib/query.js:4650:21)
        at model.Query.Query.then (/Users/saudalmutawa/TTP-BACK/TTP-Back/node_modules/mongoose/lib/query.js:4749:15)
        at processTicksAndRejections (internal/process/task_queues.js:95:5) {
      messageFormat: undefined,
      stringValue: '"{ _id: undefined }"',
      kind: 'ObjectId',
      value: { _id: undefined },
      path: '_id',
      reason: BSONTypeError: Argument passed in must be a string of 12 bytes or a string of 24 hex characters
          at new BSONTypeError (/Users/saudalmutawa/TTP-BACK/TTP-Back/node_modules/bson/src/error.ts:16:5)
          at new ObjectId (/Users/saudalmutawa/TTP-BACK/TTP-Back/node_modules/bson/src/objectid.ts:86:15)
          at castObjectId (/Users/saudalmutawa/TTP-BACK/TTP-Back/node_modules/mongoose/lib/cast/objectid.js:24:12)
          at ObjectId.cast (/Users/saudalmutawa/TTP-BACK/TTP-Back/node_modules/mongoose/lib/schema/objectid.js:247:12)
          at ObjectId.SchemaType.applySetters (/Users/saudalmutawa/TTP-BACK/TTP-Back/node_modules/mongoose/lib/schematype.js:1179:12)
          at ObjectId.SchemaType._castForQuery (/Users/saudalmutawa/TTP-BACK/TTP-Back/node_modules/mongoose/lib/schematype.js:1613:15)
          at ObjectId.SchemaType.castForQuery (/Users/saudalmutawa/TTP-BACK/TTP-Back/node_modules/mongoose/lib/schematype.js:1603:15)
          at ObjectId.SchemaType.castForQueryWrapper (/Users/saudalmutawa/TTP-BACK/TTP-Back/node_modules/mongoose/lib/schematype.js:1580:20)
          at cast (/Users/saudalmutawa/TTP-BACK/TTP-Back/node_modules/mongoose/lib/cast.js:288:34)
          at model.Query.Query.cast (/Users/saudalmutawa/TTP-BACK/TTP-Back/node_modules/mongoose/lib/query.js:5085:12),
      valueType: 'Object'
    }
  },
  level: 'error',
  timestamp: '2022-03-04 14:05:45'
}
{
  message: { db: 'mongodb://localhost:27017/TTP' },
  level: 'info',
  timestamp: '2022-03-04 14:08:07'
}
{
  message: { db: 'mongodb://localhost:27017/TTP' },
  level: 'info',
  timestamp: '2022-03-04 14:08:32'
}
{
  message: {
    updateClientDBError: CastError: Cast to ObjectId failed for value "{ _id: undefined }" (type Object) at path "_id" for model "clients"
        at model.Query.exec (/Users/saudalmutawa/TTP-BACK/TTP-Back/node_modules/mongoose/lib/query.js:4650:21)
        at model.Query.Query.then (/Users/saudalmutawa/TTP-BACK/TTP-Back/node_modules/mongoose/lib/query.js:4749:15)
        at processTicksAndRejections (internal/process/task_queues.js:95:5) {
      messageFormat: undefined,
      stringValue: '"{ _id: undefined }"',
      kind: 'ObjectId',
      value: { _id: undefined },
      path: '_id',
      reason: BSONTypeError: Argument passed in must be a string of 12 bytes or a string of 24 hex characters
          at new BSONTypeError (/Users/saudalmutawa/TTP-BACK/TTP-Back/node_modules/bson/src/error.ts:16:5)
          at new ObjectId (/Users/saudalmutawa/TTP-BACK/TTP-Back/node_modules/bson/src/objectid.ts:86:15)
          at castObjectId (/Users/saudalmutawa/TTP-BACK/TTP-Back/node_modules/mongoose/lib/cast/objectid.js:24:12)
          at ObjectId.cast (/Users/saudalmutawa/TTP-BACK/TTP-Back/node_modules/mongoose/lib/schema/objectid.js:247:12)
          at ObjectId.SchemaType.applySetters (/Users/saudalmutawa/TTP-BACK/TTP-Back/node_modules/mongoose/lib/schematype.js:1179:12)
          at ObjectId.SchemaType._castForQuery (/Users/saudalmutawa/TTP-BACK/TTP-Back/node_modules/mongoose/lib/schematype.js:1613:15)
          at ObjectId.SchemaType.castForQuery (/Users/saudalmutawa/TTP-BACK/TTP-Back/node_modules/mongoose/lib/schematype.js:1603:15)
          at ObjectId.SchemaType.castForQueryWrapper (/Users/saudalmutawa/TTP-BACK/TTP-Back/node_modules/mongoose/lib/schematype.js:1580:20)
          at cast (/Users/saudalmutawa/TTP-BACK/TTP-Back/node_modules/mongoose/lib/cast.js:288:34)
          at model.Query.Query.cast (/Users/saudalmutawa/TTP-BACK/TTP-Back/node_modules/mongoose/lib/query.js:5085:12),
      valueType: 'Object'
    }
  },
  level: 'error',
  timestamp: '2022-03-04 14:08:35'
}
{
  message: { db: 'mongodb://localhost:27017/TTP' },
  level: 'info',
  timestamp: '2022-03-04 14:09:08'
}
{
  message: {
    updateClientDBError: CastError: Cast to ObjectId failed for value "{ _id: undefined }" (type Object) at path "_id" for model "clients"
        at model.Query.exec (/Users/saudalmutawa/TTP-BACK/TTP-Back/node_modules/mongoose/lib/query.js:4650:21)
        at model.Query.Query.then (/Users/saudalmutawa/TTP-BACK/TTP-Back/node_modules/mongoose/lib/query.js:4749:15)
        at processTicksAndRejections (internal/process/task_queues.js:95:5) {
      messageFormat: undefined,
      stringValue: '"{ _id: undefined }"',
      kind: 'ObjectId',
      value: { _id: undefined },
      path: '_id',
      reason: BSONTypeError: Argument passed in must be a string of 12 bytes or a string of 24 hex characters
          at new BSONTypeError (/Users/saudalmutawa/TTP-BACK/TTP-Back/node_modules/bson/src/error.ts:16:5)
          at new ObjectId (/Users/saudalmutawa/TTP-BACK/TTP-Back/node_modules/bson/src/objectid.ts:86:15)
          at castObjectId (/Users/saudalmutawa/TTP-BACK/TTP-Back/node_modules/mongoose/lib/cast/objectid.js:24:12)
          at ObjectId.cast (/Users/saudalmutawa/TTP-BACK/TTP-Back/node_modules/mongoose/lib/schema/objectid.js:247:12)
          at ObjectId.SchemaType.applySetters (/Users/saudalmutawa/TTP-BACK/TTP-Back/node_modules/mongoose/lib/schematype.js:1179:12)
          at ObjectId.SchemaType._castForQuery (/Users/saudalmutawa/TTP-BACK/TTP-Back/node_modules/mongoose/lib/schematype.js:1613:15)
          at ObjectId.SchemaType.castForQuery (/Users/saudalmutawa/TTP-BACK/TTP-Back/node_modules/mongoose/lib/schematype.js:1603:15)
          at ObjectId.SchemaType.castForQueryWrapper (/Users/saudalmutawa/TTP-BACK/TTP-Back/node_modules/mongoose/lib/schematype.js:1580:20)
          at cast (/Users/saudalmutawa/TTP-BACK/TTP-Back/node_modules/mongoose/lib/cast.js:288:34)
          at model.Query.Query.cast (/Users/saudalmutawa/TTP-BACK/TTP-Back/node_modules/mongoose/lib/query.js:5085:12),
      valueType: 'Object'
    }
  },
  level: 'error',
  timestamp: '2022-03-04 14:09:11'
}
{
  message: { db: 'mongodb://localhost:27017/TTP' },
  level: 'info',
  timestamp: '2022-03-04 14:09:40'
}
{
  message: {
    updateClientDBError: CastError: Cast to ObjectId failed for value "{ _id: undefined }" (type Object) at path "_id" for model "clients"
        at model.Query.exec (/Users/saudalmutawa/TTP-BACK/TTP-Back/node_modules/mongoose/lib/query.js:4650:21)
        at model.Query.Query.then (/Users/saudalmutawa/TTP-BACK/TTP-Back/node_modules/mongoose/lib/query.js:4749:15)
        at processTicksAndRejections (internal/process/task_queues.js:95:5) {
      messageFormat: undefined,
      stringValue: '"{ _id: undefined }"',
      kind: 'ObjectId',
      value: { _id: undefined },
      path: '_id',
      reason: BSONTypeError: Argument passed in must be a string of 12 bytes or a string of 24 hex characters
          at new BSONTypeError (/Users/saudalmutawa/TTP-BACK/TTP-Back/node_modules/bson/src/error.ts:16:5)
          at new ObjectId (/Users/saudalmutawa/TTP-BACK/TTP-Back/node_modules/bson/src/objectid.ts:86:15)
          at castObjectId (/Users/saudalmutawa/TTP-BACK/TTP-Back/node_modules/mongoose/lib/cast/objectid.js:24:12)
          at ObjectId.cast (/Users/saudalmutawa/TTP-BACK/TTP-Back/node_modules/mongoose/lib/schema/objectid.js:247:12)
          at ObjectId.SchemaType.applySetters (/Users/saudalmutawa/TTP-BACK/TTP-Back/node_modules/mongoose/lib/schematype.js:1179:12)
          at ObjectId.SchemaType._castForQuery (/Users/saudalmutawa/TTP-BACK/TTP-Back/node_modules/mongoose/lib/schematype.js:1613:15)
          at ObjectId.SchemaType.castForQuery (/Users/saudalmutawa/TTP-BACK/TTP-Back/node_modules/mongoose/lib/schematype.js:1603:15)
          at ObjectId.SchemaType.castForQueryWrapper (/Users/saudalmutawa/TTP-BACK/TTP-Back/node_modules/mongoose/lib/schematype.js:1580:20)
          at cast (/Users/saudalmutawa/TTP-BACK/TTP-Back/node_modules/mongoose/lib/cast.js:288:34)
          at model.Query.Query.cast (/Users/saudalmutawa/TTP-BACK/TTP-Back/node_modules/mongoose/lib/query.js:5085:12),
      valueType: 'Object'
    }
  },
  level: 'error',
  timestamp: '2022-03-04 14:09:53'
}
{
  message: { db: 'mongodb://localhost:27017/TTP' },
  level: 'info',
  timestamp: '2022-03-04 14:12:49'
}
{
  message: {
    updateClientDBError: CastError: Cast to ObjectId failed for value "{ _id: undefined }" (type Object) at path "_id" for model "clients"
        at model.Query.exec (/Users/saudalmutawa/TTP-BACK/TTP-Back/node_modules/mongoose/lib/query.js:4650:21)
        at model.Query.Query.then (/Users/saudalmutawa/TTP-BACK/TTP-Back/node_modules/mongoose/lib/query.js:4749:15)
        at processTicksAndRejections (internal/process/task_queues.js:95:5) {
      messageFormat: undefined,
      stringValue: '"{ _id: undefined }"',
      kind: 'ObjectId',
      value: { _id: undefined },
      path: '_id',
      reason: BSONTypeError: Argument passed in must be a string of 12 bytes or a string of 24 hex characters
          at new BSONTypeError (/Users/saudalmutawa/TTP-BACK/TTP-Back/node_modules/bson/src/error.ts:16:5)
          at new ObjectId (/Users/saudalmutawa/TTP-BACK/TTP-Back/node_modules/bson/src/objectid.ts:86:15)
          at castObjectId (/Users/saudalmutawa/TTP-BACK/TTP-Back/node_modules/mongoose/lib/cast/objectid.js:24:12)
          at ObjectId.cast (/Users/saudalmutawa/TTP-BACK/TTP-Back/node_modules/mongoose/lib/schema/objectid.js:247:12)
          at ObjectId.SchemaType.applySetters (/Users/saudalmutawa/TTP-BACK/TTP-Back/node_modules/mongoose/lib/schematype.js:1179:12)
          at ObjectId.SchemaType._castForQuery (/Users/saudalmutawa/TTP-BACK/TTP-Back/node_modules/mongoose/lib/schematype.js:1613:15)
          at ObjectId.SchemaType.castForQuery (/Users/saudalmutawa/TTP-BACK/TTP-Back/node_modules/mongoose/lib/schematype.js:1603:15)
          at ObjectId.SchemaType.castForQueryWrapper (/Users/saudalmutawa/TTP-BACK/TTP-Back/node_modules/mongoose/lib/schematype.js:1580:20)
          at cast (/Users/saudalmutawa/TTP-BACK/TTP-Back/node_modules/mongoose/lib/cast.js:288:34)
          at model.Query.Query.cast (/Users/saudalmutawa/TTP-BACK/TTP-Back/node_modules/mongoose/lib/query.js:5085:12),
      valueType: 'Object'
    }
  },
  level: 'error',
  timestamp: '2022-03-04 14:12:57'
}
{
  message: { db: 'mongodb://localhost:27017/TTP' },
  level: 'info',
  timestamp: '2022-03-04 14:15:27'
}
{
  message: { db: 'mongodb://localhost:27017/TTP' },
  level: 'info',
  timestamp: '2022-03-04 14:15:39'
}
{
  message: { db: 'mongodb://localhost:27017/TTP' },
  level: 'info',
  timestamp: '2022-03-04 14:16:42'
}
{
  message: { db: 'mongodb://localhost:27017/TTP' },
  level: 'info',
  timestamp: '2022-03-04 15:02:11'
}
